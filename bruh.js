(G0, qa, mr) => {
        "use strict";
        mr.r(qa),
        mr.d(qa, {
            ScheduleResultsModule: () => Yi
        });
        var Jr = mr(60177)
          , _i = mr(97633)
          , z = mr(79402)
          , y = mr(96508)
          , e = mr(45817)
          , l = mr(95006)
          , n = mr(77763)
          , i = mr(75002)
          , r = mr(89332)
          , c = mr(25869)
          , s = mr(25425)
          , o = mr(45312)
          , g = mr(71590)
          , A = mr(54438);
        let u = ( () => {
            class x {
                constructor() {}
                convertMiltaryTimeToStandard(a, Y) {
                    a = a.split(":");
                    const H = Number(a[0])
                      , yA = Number(a[1]);
                    let Ft;
                    return H > 0 && H <= 12 ? Ft = "" + H : H > 12 ? Ft = "" + (H - 12) : 0 == H && (Ft = "12"),
                    Ft += yA < 10 ? ":0" + yA : ":" + yA,
                    "time" === Y ? Ft : H >= 12 ? "p" : "a"
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)
                }
                }static{this.\u0275prov = A.jDH({
                    token: x,
                    factory: x.\u0275fac,
                    providedIn: "root"
                })
                }
            }
            return x
        }
        )();
        var B = mr(345);
        let E = ( () => {
            class x {
                constructor() {
                    this.amtrakLogo = '\n    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n    viewBox="-286 490 224.2 24" style="enable-background:new -286 490 224.2 24;" xml:space="preserve">\n    <style type="text/css">\n   .st0{fill:#004d6e;}\n    </style>\n    <g>\n    <polygon class="st0" points="-178.7,498.5 -183.6,507 -188.5,498.5 -194.8,498.5 -198.5,511 -192.8,511 -190.9,503 -186.3,511\n     -180.9,511 -176.4,503 -174.5,511 -168.7,511 -172.4,498.5 \t"/>\n    <path class="st0" d="M-217.1,498.5l-8.4,12.4h5.6l1.3-2.1h8.8l1.3,2.1h6.2l-8.4-12.4H-217.1z M-217.1,506.4l3-4.9l3,4.9H-217.1z"/>\n    <path class="st0" d="M-107.4,498.5l-8.4,12.4h5.6l1.3-2.1h8.8l1.3,2.1h6.2l-8.4-12.4H-107.4z M-107.4,506.4l3-4.9l3,4.9H-107.4z"/>\n    <polygon class="st0" points="-68.2,498.5 -75.1,498.5 -81.9,504.1 -81.9,498.5 -87.7,498.5 -87.7,511 -81.9,511 -81.9,505.1\n     -75.1,511 -67.5,511 -75.9,504.5 \t"/>\n    <path class="st0" d="M-120.8,502.6c0-1.9-1.3-2.9-3.2-3.5c-2.1-0.5-4.7-0.6-7.2-0.6c-4.8,0-8.9,0-8.9,0v12.4h5.8v-3.7h4.9l3,3.9\n     h6.6l-4.3-4.8C-121.7,505.6-120.8,504.1-120.8,502.6z M-128.3,504.6c-0.7,0.1-1.4,0.2-2.5,0.2c-1,0-3.5,0-3.5,0V501\n     c0,0,2.8,0,3.6,0c3,0,4.2,0.6,4.2,1.8C-126.5,503.8-127.3,504.5-128.3,504.6z"/>\n    <polygon class="st0" points="-166,501.4 -158.6,501.4 -158.6,511 -152.8,511 -152.8,501.4 -145.8,501.4 -145.2,498.5 -165.5,498.5\n     "/>\n    <path class="st0" d="M-215.2,490c-20,5.5-32.7,9.5-41.8,19.3c4.4,1.8,9,3.5,13,4.7c4.7-9.3,13.2-16.8,28.9-23.6L-215.2,490\n     L-215.2,490z"/>\n    <path class="st0" d="M-241,492.4c-2.4-0.2-5-0.7-7.1-1.3c-4.4-0.2-27.6-0.8-37.9,3.6c2.8,1.7,5.7,3.4,9.3,5.3\n     c10.3-4.8,23.5-6.5,35.7-7.2V492.4z"/>\n    <path class="st0" d="M-226.1,492.3c-3.2,0.4-8.3,0.6-11.4,0.6c-9.2,1-25.4,3.6-34.6,9.3c3.4,1.7,6.8,3.4,10.4,4.9\n     c9.6-8.3,22.5-12,35.6-14.5C-226.1,492.6-226.1,492.3-226.1,492.3z"/>\n    <path class="st0" d="M-63,500.2c0-0.5-0.4-0.7-1-0.7h-1.1v2.8h0.4V501v-0.4v-0.8h0.6c0.2,0,0.6,0.1,0.6,0.4c0,0.5-0.4,0.5-0.6,0.5\n     h-0.5v0.4h0.4l0.7,1.2h0.5l-0.7-1.2C-63.3,500.9-63,500.7-63,500.2z"/>\n    <path class="st0" d="M-64.2,498.3c-1.3,0-2.4,1-2.4,2.4c0,1.4,1.1,2.4,2.4,2.4s2.4-1,2.4-2.4C-61.8,499.4-62.9,498.3-64.2,498.3z\n      M-64.2,502.6c-1.1,0.1-1.9-0.7-1.9-1.9c0-1.1,0.8-1.9,1.9-1.9s1.9,0.8,1.9,1.9S-63.1,502.6-64.2,502.6z"/>\n    </g>\n    </svg>',
                    this.stopsBlueOval = '<svg width="14px" height="14px" viewBox="0 0 14 14" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>Oval</title>\n    <g id="final" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n    <circle id="Oval" stroke="#00537E" stroke-width="1.8" fill="#00537E" transform="translate(7.000000, 7.000000) rotate(-180.000000) translate(-7.000000, -7.000000) " cx="7" cy="7" r="6"></circle>\n    </g></svg>',
                    this.stopsWhiteOval = '<svg width="14px" height="14px" viewBox="0 0 14 14" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>Oval</title>\n    <g id="final" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n    <circle id="Oval" stroke="#00537E" stroke-width="1.8" fill="#FFFFFF" transform="translate(7.000000, 7.000000) rotate(-180.000000) translate(-7.000000, -7.000000) " cx="7" cy="7" r="6"></circle>\n    </g></svg>',
                    this.stopsGoldenOval = '<svg width="20px" height="20px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>AM-Icons/Display Icons/Transfers/transfer_default 2</title>\n    <g id="final" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n    <g id="AM-Icons/Display-Icons/Transfers/transfer_default-2" fill-rule="nonzero">\n    <g id="transfer_default">\n    <circle id="Oval" fill="#F99B0C" cx="10" cy="10" r="10"></circle>\n    <circle id="Oval" fill="#FFFFFF" cx="10" cy="10" r="3.33333333"></circle>\n    </g> </g>\n    </g></svg>',
                    this.trainIcon = '<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18.6 22.7"><defs><style>.cls-1{fill:#002436;}</style></defs><title>route_train</title><path class="cls-1" d="M2.25,3c.8-.3,3.1-.9,7.7-.9s7,.7,7.7,1l.4,16.6-5.9.7H7.55l-5.9-.8Zm17,17.6-.4-18.2-.3-.1a17.58,17.58,0,0,0-5-1V.64h-7v.7c-3.5.3-4.9.9-5,1h-.3l-.6,18.2,3.9.5L3,23.24l13.9.1-1.6-2.2Zm-14-4.3A1.3,1.3,0,1,1,6.55,15,1.26,1.26,0,0,1,5.25,16.34Zm.1-3.7a2.26,2.26,0,0,0-2.3,2.3,2.35,2.35,0,0,0,2.3,2.4A2.26,2.26,0,0,0,7.65,15,2.42,2.42,0,0,0,5.35,12.64Zm9.3,3.8a1.3,1.3,0,1,1,1.3-1.3A1.32,1.32,0,0,1,14.65,16.44Zm0-3.7a2.26,2.26,0,0,0-2.3,2.3,2.35,2.35,0,0,0,2.3,2.4,2.26,2.26,0,0,0,2.3-2.3A2.35,2.35,0,0,0,14.65,12.74ZM4.65,5a23.43,23.43,0,0,1,4.9-.3v3.1c-2,0-4,.1-4.9.2Zm10.8,3.1c-.9-.1-2.9-.2-4.9-.3V4.74a23.43,23.43,0,0,1,4.9.3Zm-11.9,1,.6-.1a49.34,49.34,0,0,1,5.9-.2c3,0,5.8.3,5.9.3l.6.1V5l.1-.1-.1-.3c-.2-.3-.4-.8-6.4-.8s-6.2.4-6.4.8l-.1.3.1.1Z" transform="translate(-0.65 -0.64)"/></svg>'
                }
                calculateMultiSegmentBoxCords(a, Y) {
                    return Y <= 2 ? a : {
                        x: -58,
                        xIncrement: 20,
                        y: 30,
                        yIncrement: 0
                    }
                }
                buildAmenityIcon(a, Y, H, yA) {
                    const Ft = {
                        quietCarIcon: `<g id="Group" transform="translate(${Y.x}, ${yA})" stroke="#002648" stroke-width="0.5">\n            <g id="Page-1" transform="translate(1.666667, 0.000000)">\n            <path d="M8.96506244,8.44733644 L9.12424231,4.28099907 C9.14355266,3.72830568 8.70828705,2.93345014 8.13106431,2.90474557 C7.55436347,2.8734315 7.46355266,3.689685 7.44424231,4.24237838 L6.99592917,8.44733644 L8.96506244,8.44733644 Z" id="Fill-1"></path><path d="M13.7386319,12.5288127 L12.9322945,9.54719105 C12.7099646,8.58950233 12.2553886,8.19442311 11.4808872,8.15006151 C10.9892563,8.12240075 10.9313253,8.26331407 10.7283057,8.63125443 C11.2757801,8.89690214 11.656246,9.44594222 11.656246,10.0837055 C11.656246,10.1948705 11.6489394,10.3222144 11.6358919,10.5085331 C11.6212787,10.7162498 11.6019683,11.0043392 11.5837018,11.4469115 L11.5268145,12.2558583 C11.5268145,12.4369581 11.5409059,12.5277689 11.492891,12.712 L11.4574017,12.8711799 C11.3900764,13.1916272 11.3357987,13.3836869 11.3206636,13.4421398 C11.3206636,13.4421398 9.64692637,15.3011519 9.63387884,15.3345536 L8.04573346,16.9566226 C7.48208015,17.519754 7.46955452,18.4215993 8.01807269,18.9711612 C8.56659087,19.5181137 9.15790494,19.3531929 9.80610624,18.8328574 C9.80610624,18.8328574 11.0508406,17.9388406 11.9406822,16.8209282 C13.606069,14.6310308 13.9667027,13.6702106 13.7386319,12.5288127" id="Fill-3"></path><path d="M9.63883691,9.34745946 L5.40047717,9.33023672 C4.93755079,9.33023672 4.56126002,9.63972414 4.56126002,10.0828183 C4.56126002,10.1355303 4.56647903,10.1866766 4.57587325,10.2357353 L7.95100839,10.2357353 C8.78970363,10.2357353 9.47182852,10.9048127 9.47182852,11.7278509 C9.47182852,11.7784753 9.47391612,11.8290997 9.47652563,11.8865089 C9.48487605,12.0639553 9.49792358,12.3066393 9.47495993,12.8468071 L9.42485741,13.6531445 C9.51671202,13.6614949 9.61952656,13.666192 9.74269525,13.666192 C10.118986,13.666192 10.3084362,12.9856328 10.3084362,12.472082 L10.4185573,11.3703486 C10.4357801,10.9429115 10.4550904,10.6475154 10.4707474,10.4335359 C10.4806636,10.2717465 10.4775322,10.2999292 10.4775322,10.2033774 C10.4775322,9.75871761 10.1007195,9.34745946 9.63883691,9.34745946" id="Fill-6"></path><path d="M6.56859646,16.5352917 C6.64427213,16.4303896 6.69802796,16.3046114 6.69802796,16.1616104 L6.79405778,14.6079105 C6.80814911,14.2363169 6.7997987,14.0035489 6.78361976,13.7535582 C6.77631314,13.6674445 6.76952842,13.6784045 6.77265983,13.6116011 C6.79405778,13.2593178 6.44020876,12.8835489 6.03051631,12.8945089 L2.52073066,12.8976403 C2.17314445,12.8976403 1.88766449,13.1705946 1.88766449,13.5051333 C1.88766449,13.8401938 2.17314445,14.1126263 2.52490587,14.1126263 L5.48304194,14.1126263 L5.48304194,16.1616104 C5.48304194,16.4048164 5.61873625,16.6094017 5.8113178,16.7163914 C5.86611743,16.7252637 5.92143896,16.7325704 5.97936999,16.7325704 C6.20274371,16.7325704 6.40576328,16.6568947 6.56859646,16.5352917" id="Fill-8"></path>\n            <path d="M3.72668779,15.0149413 C3.72042498,14.9867586 3.71572787,14.9611855 3.70946505,14.9345685 L2.18238211,14.9345685 C1.95900839,14.9345685 1.7492041,14.8802908 1.56079776,14.7926114 L1.60568127,15.4027139 C1.55975396,14.7649506 1.76433924,18.1620056 3.40049953,18.9913066 C3.40049953,18.9913066 4.68489842,19.554438 4.98238211,18.6358919 C5.27725629,17.7293495 4.50118919,17.5018006 4.12750792,16.3744939 L3.72668779,15.0149413 Z" id="Fill-10"></path><path d="M8.42786952,12.1455284 C8.42473812,12.0729842 8.42265051,12.0113998 8.42265051,11.9477279 C8.42265051,11.5776999 8.00095433,11.1930587 7.61422554,11.1930587 L3.79912768,11.1930587 C3.40248276,11.1930587 3.16710531,11.4086039 3.16710531,11.7697596 C3.16710531,11.8845778 3.2046822,11.9868705 3.25895993,12.0813346 L6.14037651,12.1037763 C6.94045107,12.1037763 7.59387139,12.744671 7.59387139,13.531698 C7.59387139,13.5812787 7.5980466,13.6329469 7.60222181,13.6960969 C7.61422554,13.875109 7.63301398,14.1454539 7.61318173,14.6496104 L7.57456104,15.2738043 C7.60222181,15.2779795 7.62675116,15.2905051 7.65441193,15.2905051 C8.02548369,15.2905051 8.32609879,14.9768425 8.32609879,14.5906356 L8.42682572,12.9419497 C8.44717987,12.4456216 8.43726375,12.3078397 8.42786952,12.1455284" id="Fill-12"></path><path d="M15.868041,4.77978006 C15.9238844,4.7568164 15.9651146,4.74063747 15.9651146,4.74063747 C15.9651146,4.74063747 13.839411,3.06846598 10.5326449,0.845688723 C10.5326449,0.845688723 9.32600932,-0.00866356011 8.34118173,1.05810252 C8.12615843,1.29034856 7.79683877,1.29243616 7.61260764,1.07741286 C7.61260764,1.07741286 7.10584157,0.338400746 5.95191799,0.649975769 C4.79799441,0.962594595 2.57469525,3.40926747 0.000156570363,4.62268779 C0.000156570363,4.62268779 0.0121602982,4.63364772 0.0325144455,4.64669525 C0.063306617,4.6686151 0.125412861,4.711411 0.209960857,4.77038583 C0.144723206,4.76307922 0.282505126,4.84867102 0.528842498,4.98958434 C1.56690401,5.69623858 3.81629823,7.11267847 4.82356757,7.31100093 L4.94256104,7.35797204 C5.27396831,7.46339609 5.59806897,7.63197018 5.98531966,7.71077726 L6.32716496,4.9697521 C5.86423858,4.8408425 4.018274,4.49325629 4.018274,4.49325629 C4.018274,4.49325629 4.0193178,4.16967754 4.13257036,4.14045107 C4.18528239,4.13001305 4.2343411,4.11800932 4.28757502,4.1075713 C4.39456477,4.08617335 4.45249581,4.07886673 4.39247717,4.08408574 C4.97648462,3.95882945 5.83553402,3.97396459 6.42476048,3.8930699 C6.51974651,3.19476608 6.92943896,2.03092637 8.13242125,2.03092637 L8.21696925,2.03301398 C9.41473253,2.0846822 10.0973793,3.30488723 10.0822442,3.74641566 C10.6427661,3.80486859 11.7439776,4.06895061 12.6265126,4.22604287 C12.7225424,4.33407642 12.7470718,4.45150419 12.5696253,4.54805592 C11.8723653,4.51621994 10.7236608,4.51726375 10.0749376,4.61642498 L9.95072507,7.51663001 C11.1323094,7.2984753 12.1421883,7.00360112 12.5336142,6.77500839 C13.2329618,6.50257596 15.9139683,4.79021808 15.9139683,4.79021808 C15.9322349,4.79021808 15.9238844,4.78917428 15.8977894,4.78552097 C15.8904828,4.78186766 15.8763914,4.78186766 15.868041,4.77978006" id="Fill-14"></path>\n            </g></g>`,
                        cafeCarIcon: `<g id="Group" transform="translate(${Y.x}, ${yA - 5})">\n            <g id="Page-1" transform="translate(9.166667, 0.000000)">\n            <g id="Group-3" transform="translate(2.500000, 0.000000)">\n                <mask id="mask-2" fill="white">\n                    <use xlink:href="#path-1"></use>\n                </mask>\n                <g id="Clip-2"></g>\n                <path d="M7.33958333,17.6294167 C7.28958333,17.6794167 7.26541667,17.7285833 7.26541667,17.80275 L7.26541667,17.9010833 C7.28958333,18.2219167 7.31541667,18.61775 7.01875,18.9135833 C6.64791667,19.3085833 5.80875,19.5060833 4.50041667,19.5310833 L4.47458333,19.5310833 L4.40125,19.5310833 L4.32708333,19.5310833 L4.30208333,19.5310833 C1.11708333,19.4819167 1.09208333,18.3210833 1.09208333,17.77775 C1.09208333,17.7035833 1.06791667,17.6544167 1.01875,17.60525 C0.79625,17.43275 0.697916667,17.2594167 0.697916667,17.0369167 C0.697916667,16.76525 0.84625,16.5685833 0.944583333,16.4685833 C1.01875,16.39525 1.01875,16.2719167 0.96875,16.19775 C0.672916667,15.77775 0.697916667,15.53025 0.99375,15.18525 C1.04291667,15.1360833 1.06791667,15.03775 1.04291667,14.96275 C0.772083333,14.2469167 0.944583333,13.9510833 1.04291667,13.8519167 C1.09208333,13.8019167 1.09208333,13.7535833 1.09208333,13.7035833 C1.01875,10.6669167 1.04291667,8.71608333 1.19125,8.09858333 C1.21625,8.02441667 1.19125,7.92608333 1.11708333,7.87608333 C0.944583333,7.72858333 0.722083333,7.50608333 0.722083333,7.16025 C0.722083333,4.98775 2.25291667,4.00025 2.72208333,3.75358333 C2.79625,3.72858333 2.82125,3.65441667 2.84541667,3.58025 C2.84541667,3.45691667 2.87041667,3.23441667 2.87041667,3.03691667 C2.87041667,2.93858333 2.82125,2.86441667 2.74708333,2.83941667 C2.72208333,2.83941667 2.72208333,2.81525 2.69791667,2.81525 C2.62375,2.74108333 2.62375,2.59275 2.64791667,2.22191667 L2.64791667,1.45691667 C2.64791667,1.01275 2.67291667,0.74025 2.87041667,0.59275 C3.04291667,0.469416667 3.31458333,0.42025 3.85791667,0.39525 L3.88291667,0.39525 L4.05625,0.39525 L4.20375,0.39525 L4.52458333,0.39525 L4.57458333,0.39525 C5.14208333,0.42025 5.41291667,0.469416667 5.56125,0.59275 C5.75958333,0.74025 5.78375,1.01275 5.78375,1.45691667 L5.78375,2.22191667 C5.78375,2.59275 5.78375,2.76525 5.73458333,2.81525 C5.73458333,2.81525 5.70958333,2.83941667 5.68541667,2.83941667 C5.66041667,2.83941667 5.66041667,2.86441667 5.63541667,2.86441667 C5.58625,2.83941667 5.56125,2.81525 5.48708333,2.81525 L4.17875,2.81525 C4.05625,2.81525 3.95625,2.91358333 3.95625,3.03691667 C3.95625,3.16025 4.05625,3.25941667 4.17875,3.25941667 L5.46291667,3.25941667 L5.51291667,3.25941667 C5.51291667,3.40775 5.51291667,3.53108333 5.53708333,3.60441667 C5.53708333,3.67941667 5.58625,3.75358333 5.66041667,3.77775 C6.12958333,4.02441667 7.66041667,5.01191667 7.66041667,7.18525 C7.66041667,7.50608333 7.43791667,7.75275 7.26541667,7.90108333 C7.21625,7.95025 7.19125,7.97525 7.19125,8.02441667 L4.32708333,8.02441667 C4.20375,8.02441667 4.10458333,8.12358333 4.10458333,8.24691667 C4.10458333,8.37025 4.20375,8.46941667 4.32708333,8.46941667 L7.24125,8.46941667 C7.33958333,9.28358333 7.36375,11.0369167 7.28958333,13.5310833 L4.32708333,13.5310833 C4.20375,13.5310833 4.10458333,13.6294167 4.10458333,13.7535833 C4.10458333,13.8760833 4.20375,13.97525 4.32708333,13.97525 L7.41375,13.97525 C7.48791667,14.1235833 7.56208333,14.4194167 7.33958333,15.0119167 C7.31541667,15.0860833 7.31541667,15.18525 7.38958333,15.2344167 C7.68541667,15.58025 7.68541667,15.8269167 7.41375,16.2469167 C7.36375,16.3210833 7.36375,16.4444167 7.43791667,16.5185833 C7.53708333,16.6169167 7.68541667,16.8144167 7.68541667,17.0869167 C7.66041667,17.2844167 7.53708333,17.4810833 7.33958333,17.6294167 M7.83375,16.3210833 C8.10541667,15.8519167 8.10541667,15.4319167 7.78375,15.03775 C8.03041667,14.2960833 7.88208333,13.8760833 7.70958333,13.6794167 C7.78375,10.98775 7.75958333,9.20941667 7.66041667,8.37025 C7.68541667,8.34525 7.68541667,8.29608333 7.68541667,8.27191667 C7.68541667,8.22191667 7.66041667,8.19775 7.66041667,8.17275 C7.85791667,7.97525 8.10541667,7.65441667 8.10541667,7.23441667 C8.10541667,4.96275 6.59875,3.85191667 5.98125,3.50608333 L5.98125,3.21025 C6.00625,3.21025 6.00625,3.18525 6.03125,3.16025 C6.22875,2.96275 6.22875,2.71608333 6.20375,2.24691667 L6.20375,1.48191667 C6.20375,1.01275 6.17875,0.543583333 5.80875,0.271083333 C5.53708333,0.0744166667 5.16708333,0.00025 4.62291667,0.00025 L4.57458333,0.00025 L4.20375,0.00025 L4.05625,0.00025 L3.83375,0.00025 L3.78375,0.00025 C3.24041667,0.02525 2.84541667,0.0744166667 2.57375,0.271083333 C2.20375,0.56775 2.17875,1.01275 2.17875,1.48191667 L2.17875,2.24691667 C2.17875,2.71608333 2.17875,2.96275 2.35208333,3.16025 L2.40125,3.21025 L2.40125,3.50608333 C1.78375,3.85191667 0.277916667,4.96275 0.277916667,7.23441667 C0.277916667,7.67941667 0.524583333,8.02441667 0.747083333,8.19775 C0.62375,8.96275 0.57375,10.8144167 0.647916667,13.7035833 C0.499583333,13.9260833 0.327083333,14.3460833 0.57375,15.0619167 C0.252916667,15.4819167 0.22875,15.8760833 0.524583333,16.3460833 C0.352083333,16.5685833 0.277916667,16.8394167 0.277916667,17.0869167 C0.277916667,17.3085833 0.352083333,17.6294167 0.697916667,17.92525 C0.747083333,18.8894167 1.24125,19.95025 4.30208333,20.00025 L4.32708333,20.00025 L4.42625,20.00025 L4.52458333,20.00025 L4.54875,20.00025 C6.00625,19.97525 6"/>\n            </g>\n            <g id="Group-6" transform="translate(0.000000, 3.333333)">\n                <mask id="mask-4" fill="white">\n                    <use xlink:href="#path-3"></use>\n                </mask>\n                <g id="Clip-5"></g>\n                <path d="M2.46891667,14.4050833 C0.606416667,14.27425 0.590583333,13.5200833 0.590583333,13.1534167 C0.590583333,13.1000833 0.573083333,13.06425 0.53725,13.0284167 C0.375583333,12.9025833 0.303916667,12.7775833 0.303916667,12.61675 C0.303916667,12.41925 0.411416667,12.27675 0.483083333,12.2050833 C0.53725,12.15175 0.53725,12.06175 0.501416667,12.0084167 C0.286416667,11.70425 0.303916667,11.5250833 0.518916667,11.27425 C0.55475,11.2384167 0.573083333,11.16675 0.55475,11.1134167 C0.358083333,10.59425 0.483083333,10.37925 0.55475,10.3075833 C0.590583333,10.27175 0.590583333,10.2359167 0.590583333,10.2000833 C0.53725,7.99925 0.55475,6.58508333 0.66225,6.13758333 C0.680583333,6.08425 0.66225,6.01258333 0.608916667,5.97675 C0.483083333,5.86925 0.32225,5.70841667 0.32225,5.45758333 C0.32225,3.88258333 1.43141667,3.16675 1.77225,2.98758333 C1.82558333,2.97008333 1.84391667,2.91591667 1.86141667,2.86258333 C1.86141667,2.77341667 1.87891667,2.61175 1.87891667,2.46841667 C1.87891667,2.39758333 1.84391667,2.34341667 1.78975,2.32591667 C1.77225,2.32591667 1.77225,2.30758333 1.75391667,2.30758333 C1.70058333,2.25425 1.70058333,2.14675 1.71808333,1.87841667 L1.71808333,1.32341667 C1.71808333,1.00175 1.73641667,0.80425 1.87891667,0.69675 C1.99058333,0.617583333 3.23808333,0.580916667 3.54891667,0.560916667 L3.54891667,0.27175 C3.19308333,0.290916667 1.84891667,0.330083333 1.66475,0.46425 C1.39558333,0.67925 1.37808333,1.00175 1.37808333,1.34091667 L1.37808333,1.89591667 C1.37808333,2.23591667 1.37808333,2.41508333 1.50308333,2.55841667 L1.53891667,2.59425 L1.53891667,2.80841667 C1.09141667,3.05925 -0.00025,3.86508333 -0.00025,5.51175 C-0.00025,5.83341667 0.178916667,6.08425 0.33975,6.20925 C0.250583333,6.76425 0.21475,8.10591667 0.268083333,10.2000833 C0.160583333,10.3609167 0.0355833333,10.6659167 0.21475,11.1850833 C-0.01775,11.48925 -0.0360833333,11.7759167 0.178916667,12.1159167 C0.0539166667,12.27675 -0.00025,12.4734167 -0.00025,12.65175 C-0.00025,12.8134167 0.0539166667,13.0459167 0.303916667,13.2609167 C0.33725,13.9084167 0.648916667,14.6184167 2.46891667,14.7450833 L2.46891667,14.4050833 Z" id="Fill-4" fill="#00344D" mask="url(#mask-4)"></path>\n            </g>\n        </g>\n        <g id="Page-1">\n            <mask id="mask-6" fill="white">\n                <use xlink:href="#path-5"></use>\n            </mask>\n            <g id="Clip-2"></g>\n            <path d="M1.03816667,5.77716667 L8.39483333,5.77716667 C7.9915,7.50966667 7.2215,9.00883333 5.74733333,9.463 L3.68566667,9.463 C2.2115,9.00883333 1.4415,7.50966667 1.03816667,5.77716667 L1.03816667,5.77716667 Z M8.839,0.593833333 C8.83733333,1.83633333 8.81233333,3.56883333 8.51733333,5.183 L0.9165,5.183 C0.620666667,3.56883333 0.595666667,1.83633333 0.594,0.593833333 L8.839,0.593833333 Z M8.11816667,18.2763333 C8.11816667,18.748 6.8015,19.4055 4.6565,19.4055 C2.5115,19.4055 1.194,18.748 1.194,18.2763333 C1.194,17.828 2.39316667,17.218 4.35233333,17.1571667 L4.35233333,18.1463333 C4.35233333,18.3096667 4.48483333,18.443 4.649,18.443 C4.81316667,18.443 4.94566667,18.3096667 4.94566667,18.1463333 L4.94566667,17.1563333 C6.914,17.2146667 8.11816667,17.8271667 8.11816667,18.2763333 L8.11816667,18.2763333 Z M5.7915,10.0571667 C5.81983333,10.0571667 5.84733333,10.053 5.87566667,10.0446667 C7.71816667,9.5055 8.60233333,7.66633333 9.03066667,5.62716667 C9.0565,5.583 9.07566667,5.53466667 9.07566667,5.4805 C9.07566667,5.46633333 9.069,5.45466667 9.06733333,5.44216667 C9.42816667,3.5955 9.43316667,1.61466667 9.43316667,0.297166667 C9.43316667,0.133 9.29983333,-0.000333333333 9.1365,-0.000333333333 L0.2965,-0.000333333333 C0.133166667,-0.000333333333 -0.000166666667,0.133 -0.000166666667,0.297166667 C-0.000166666667,3.123 -0.000166666667,9.003 3.55816667,10.0446667 C3.58566667,10.053 3.614,10.0571667 3.64233333,10.0571667 L4.35233333,10.0571667 L4.35233333,16.558 C2.47983333,16.6163333 0.600666667,17.2138333 0.600666667,18.2763333 C0.600666667,19.3963333 2.68983333,19.9996667 4.6565,19.9996667 C6.62233333,19.9996667 8.71233333,19.3963333 8.71233333,18.2763333 C8.71233333,17.2113333 6.82233333,16.613 4.94566667,16.558 L4.94566667,10.0571667 L5.7915,10.0571667 Z" id="Fill-1" fill="#00344D" mask="url(#mask-6)"></path>\n            </g></g>`,
                        wifiIcon: `<g id="Group" transform="translate(${Y.x}, ${yA})" fill="#002648">\n            <g id="Page-1" transform="translate(0.000000, 2.500000)">\n            <g id="Group-3" transform="translate(8.800000, 11.571440)">\n                <path d="M1.2,0.60256 C0.7048,0.60256 0.3016,1.00576 0.3016,1.50176 C0.3016,1.99696 0.7048,2.40016 1.2,2.40016 C1.6952,2.40016 2.0992,1.99696 2.0992,1.50176 C2.0992,1.00576 1.6952,0.60256 1.2,0.60256" id="Fill-1"></path>\n            </g>\n            <path d="M5.64648,10.35368 C5.48488,10.51528 5.48488,10.77608 5.64648,10.93768 C5.72728,11.01848 5.83288,11.05928 5.93848,11.05928 C6.04488,11.05928 6.15048,11.01848 6.23048,10.93768 C8.39928,8.77048 11.66568,8.76648 13.82888,10.92808 C13.98968,11.08888 14.25128,11.08888 14.41288,10.92808 C14.57448,10.76648 14.57448,10.50408 14.41288,10.34328 C11.91608,7.84808 8.14808,7.85288 5.64648,10.35368" id="Fill-4"></path>\n            <g id="Group-8" transform="translate(0.000000, 0.371440)">\n                <path d="M19.87576,4.31352 C19.78696,4.22632 10.77576,-4.36728 0.15256,4.28872 C-0.02424,4.43272 -0.05144,4.69352 0.09256,4.87032 C0.17496,4.97032 0.29336,5.02232 0.41336,5.02232 C0.50536,5.02232 0.59736,4.99192 0.67416,4.92952 C10.71656,-3.25368 18.95256,4.56792 19.29816,4.90472 C19.46056,5.06392 19.72376,5.06152 19.88216,4.89752 C20.04136,4.73432 20.03896,4.47352 19.87576,4.31352" id="Fill-6"></path>\n            </g>\n            <path d="M2.70504,7.42952 C2.54344,7.59112 2.54344,7.85192 2.70504,8.01352 C2.78584,8.09432 2.89144,8.13512 2.99704,8.13512 C3.10264,8.13512 3.20824,8.09432 3.28904,8.01352 C6.88664,4.41592 13.18424,4.40152 16.76664,7.98232 C16.92744,8.14472 17.18904,8.14472 17.35064,7.98232 C17.51144,7.82152 17.51144,7.55992 17.35064,7.39832 C13.45704,3.50552 6.61384,3.52072 2.70504,7.42952" id="Fill-9"></path>\n            </g></g>;`,
                        seatAssignment: `<g id="Group" transform="translate(${Y.x}, ${yA})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:transparent;}\n            </style>\n            <g id="Page-1" transform="scale(.07, .07) translate(-100, -100)">\n          \n                <path class="st0" d="M314,372H167c-6.6,0-9-4-12-12L92,142.2c0-2.7,26-12.4,31,2.2c15.7,45.9,47.1,159.5,51,159.5h146\n                        c6.6,0,12,5.4,12,12l-6,44C326,366.6,320.6,372,314,372z"/>\n                    <circle class="st0" cx="162.5" cy="133" r="24.5"/>\n                    <path class="st0" d="M246,292.5c-13.2-44-36.5-88-46.2-116.3c-8.3-24.2-51.3-8.2-51.3-3.7l34.7,120.1H246V292.5z"/>\n                <path class="st0" d="M298.9,270l-71.8-7c2.9,7.4,5.9,22,8.9,29.5h57.4c6.1,0,11.1-1.8,11.1-4L310,274C310,271.8,305,270,298.9,270z"\n                    />\n                <path class="st0" d="M402.1,399.8l-1.1,0.8c-4.9,4.5-11.5,5.2-14.8,1.6l-46.7-50c-1.8-3.5-1-7-0.6-14.5l2.4-21.4\n                        c4.9-4.5,9.5-4.3,12.8-0.7l50.8,69.6C408.3,388.7,407,395.3,402.1,399.8z"/>\n\n            </g></g>`,
                        checkedBaggage: `<g id="Group" transform="translate(${Y.x}, ${yA})" stroke="#002648">\n            \n            <style type="text/css">\n                .st0{fill:#002436;}\n            </style>\n            <g id="Page-1" transform="scale(1, 1) translate(-12, -15)">\n                <path class="st0" d="M27.61,16.341l-0.082-0.161c-0.293-0.526-0.853-0.846-1.455-0.833h-2.74v-1.2\n                    c-0.033-0.555-0.508-0.98-1.064-0.951h-4.537c-0.556-0.029-1.031,0.396-1.064,0.951v1.2h-2.741\n                    c-0.602-0.013-1.161,0.307-1.455,0.832L12.39,16.34c-1.481,2.77-2.299,5.845-2.39,8.985c-0.01,0.395,0.155,0.774,0.451,1.035\n                    c0.315,0.288,0.727,0.445,1.153,0.44h16.84c0.834,0.025,1.531-0.631,1.556-1.465c0-0.004,0-0.007,0-0.011\n                    C29.908,22.185,29.09,19.11,27.61,16.341z M17.468,14.151c0.008-0.137,0.126-0.242,0.263-0.235h4.537\n                    c0.138-0.008,0.256,0.097,0.264,0.235v1.2h-5.064C17.468,15.351,17.468,14.151,17.468,14.151z M25.728,16.064\n                    c-0.229,1.776-0.669,3.518-1.311,5.19l-0.056,0.151c-0.039,0.166-0.174,0.293-0.342,0.322H22v-1.076\n                    c-0.013-0.208-0.191-0.368-0.4-0.358h-3.2c-0.209-0.011-0.388,0.149-0.4,0.358v1.075h-2.018c-0.134,0-0.271-0.129-0.342-0.321\n                    l-0.057-0.152c-0.641-1.672-1.081-3.414-1.312-5.189H25.728z M18.8,21.726v-0.717h2.4v0.717L18.8,21.726z M21.206,22.442v0.715H18.8\n                    v-0.716L21.206,22.442z M28.978,25.866c-0.158,0.143-0.365,0.221-0.578,0.219H11.605c-0.214,0.002-0.421-0.076-0.58-0.219\n                    c-0.146-0.132-0.228-0.32-0.225-0.517c0.089-3.043,0.882-6.024,2.317-8.709l0.084-0.162c0.064-0.121,0.161-0.221,0.279-0.29\n                    c0.24,1.81,0.692,3.585,1.345,5.29l0.056,0.151c0.159,0.475,0.599,0.8,1.1,0.812H18v1.074c0.013,0.208,0.192,0.367,0.4,0.357h3.2\n                    c0.209,0.012,0.388-0.148,0.4-0.357l0,0v-1.073h2.014c0.502-0.012,0.942-0.337,1.1-0.813l0.055-0.149\n                    c0.656-1.706,1.108-3.482,1.347-5.294c0.118,0.07,0.215,0.17,0.281,0.291l0.084,0.162c1.435,2.685,2.228,5.666,2.319,8.709\n                    c0.003,0.197-0.079,0.386-0.226,0.518C28.974,25.866,28.978,25.866,28.978,25.866z"/>\n            </g></g>`,
                        lounge: `<g id="Group" transform="translate(${Y.x}, ${yA})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:#002436;}\n            </style>\n            <g id="Page-1" transform="scale(1, 1) translate(-12, -15)">\n                <g id="Icons">\n                    <g id="Icon-Sheets_x2F_Core-Icons_x2F_Amenities-_x28_CC_x29_" transform="translate(-266.000000, -137.000000)">\n                        <g id="Amenities-_x28_CC_x29_" transform="translate(-10.000000, 0.000000)">\n                            <g id="On-Light" transform="translate(10.000000, 43.000000)">\n                                <g id="Icons_x2F_Amenities_x2F_amenities_x5F_lounge" transform="translate(265.000000, 94.000000)">\n                                    <g id="Page-1">\n                                        <g id="Group-3" transform="translate(0.923077, 0.002400)">\n                                            <g id="Clip-2">\n                                            </g>\n                                            <path id="Fill-1" class="st0" d="M27.564,16.876c-0.235,1.52-0.415,2.628-0.616,3.874l-0.327,2.023\n                                                c-0.222,1.386-0.873,4.78-1.134,5.595c-0.217,0.679-0.473,0.834-1.369,0.834h-9.243l-0.318,0.003\n                                                c-0.611,0.01-0.775,0.013-1.09-0.353c-0.757-0.878-1.079-1.468-0.984-2.656c0.088-1.104,1.455-1.376,2.587-1.41\n                                                c1.288-0.038,2.613,0.146,3.896,0.328l0.199,0.028c0.144,0.019,0.301,0.055,0.464,0.091c0.354,0.08,0.752,0.166,1.116,0.137\n                                                l0.103-0.006c0.324-0.004,0.431-0.182,0.497-0.373c0.01-0.035,0.027-0.082,0.053-0.144c0.249-0.618,0.46-1.26,0.665-1.882\n                                                c0.073-0.22,0.146-0.44,0.22-0.659h1.995c0.91,0,1.65-0.74,1.65-1.687c0-0.91-0.741-1.65-1.65-1.65h-0.503\n                                                c0.316-0.767,0.868-2.109,1.14-3.039c0.235-0.795,0.228-1.477,0.219-2.198c-0.003-0.172-0.004-0.347-0.003-0.53l0.002-0.206\n                                                c0.003-0.604,0.007-1.229,0.098-1.81c0.051-0.322,0.119-0.425,0.69-0.393c1.494,0.079,1.694,0.63,1.694,1.158\n                                                c0,0.496,0.018,1.003,0.035,1.513C27.689,14.606,27.731,15.787,27.564,16.876 M16.097,20.619\n                                                c0-0.476,0.386-0.861,0.861-0.861h7.32c0.475,0,0.861,0.386,0.861,0.899c0,0.474-0.386,0.861-0.861,0.861h-7.32\n                                                C16.483,21.518,16.097,21.131,16.097,20.619 M28.438,13.436c-0.018-0.502-0.035-0.998-0.035-1.485\n                                                c0-1.205-0.821-1.86-2.44-1.945c-0.4-0.023-1.333-0.072-1.51,1.058c-0.101,0.64-0.105,1.295-0.107,1.928l-0.002,0.205\n                                                c-0.001,0.189,0.001,0.37,0.003,0.545c0.008,0.689,0.014,1.283-0.187,1.968c-0.269,0.917-0.838,2.293-1.143,3.031\n                                                c-0.036,0.09-0.065,0.159-0.094,0.23h-5.965c-0.909,0-1.65,0.74-1.65,1.688c0,0.909,0.741,1.65,1.65,1.65h4.494\n                                                c-0.046,0.138-0.092,0.274-0.138,0.414c-0.199,0.608-0.406,1.238-0.646,1.83c-0.005,0.012-0.01,0.023-0.014,0.036\n                                                c-0.235,0.016-0.549-0.055-0.854-0.123c-0.185-0.04-0.364-0.081-0.526-0.103l-0.198-0.028C17.76,24.15,16.4,23.959,15.047,24\n                                                c-2.055,0.061-3.245,0.821-3.349,2.136c-0.115,1.442,0.324,2.251,1.174,3.234c0.489,0.565,0.919,0.629,1.464,0.629\n                                                c0.076,0,0.153-0.002,0.234-0.003l9.549-0.003c1.036,0,1.751-0.232,2.12-1.384c0.281-0.88,0.939-4.321,1.161-5.711\n                                                l0.327-2.019c0.201-1.249,0.381-2.36,0.616-3.881C28.52,15.833,28.48,14.615,28.438,13.436"/>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </g></g>`,
                        wheelchairRamp: `<g id="Group" transform="translate(${Y.x}, ${yA})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:transparent;}\n            </style>\n            <g id="Page-1" transform="scale(1, 1) translate(-12, -15)">\n                <g id="Icon-Sheets_Core-Icons_Other-Icons-_CJ_" data-name="Icon-Sheets Core-Icons Other-Icons- CJ "><g id="Other-Icons-_CJ_" data-name="Other-Icons- CJ "><g id="Icons_wheelchair_ramp" data-name="Icons wheelchair ramp"><g id="Icons_Wheelchair-Ramp" data-name="Icons Wheelchair-Ramp"><g id="Group-3"><path id="Fill-1" class="cls-1" d="M29.36,27a.44.44,0,0,0-.4-.1L10.82,31.05a.5.5,0,0,0-.37.47.49.49,0,0,0,.48.48H11l17.55-4v3.53a.5.5,0,0,0,.48.48.48.48,0,0,0,.48-.48V27.44a.42.42,0,0,0-.18-.37"/></g><path id="Fill-4" class="cls-1" d="M17.89,28.05a6.69,6.69,0,0,0,5.82-3.39.48.48,0,1,0-.84-.47h0a5.73,5.73,0,1,1-7.19-8.11h0a.48.48,0,0,0-.28-.92l-.11.05a6.68,6.68,0,0,0,2.6,12.84"/><path id="Fill-6" class="cls-1" d="M16.78,9a1.5,1.5,0,1,1,0,3,1.51,1.51,0,0,1-1.51-1.49v0A1.5,1.5,0,0,1,16.78,9m-.42,3.91,1.24,6.57a.49.49,0,0,0,.47.39h5.38l1.49,5.8a.5.5,0,0,0,.47.36h0l2.4-.55a.49.49,0,0,0,.37-.58h0a.46.46,0,0,0-.55-.36h0l-1.95.44-1.47-5.7a.48.48,0,0,0-.47-.36h-5.3L17.94,16h3.94a.48.48,0,0,0,0-1H17.75l-.41-2.23a2.44,2.44,0,1,0-1,0"/></g></g></g></g>\n            </g></g>`,
                        dining: `<g id="Group" transform="translate(${Y.x}, ${yA})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:#405B69;}\n            </style>\n            <g id="Page-1" transform="scale(1, 1) translate(-12, -15)">\n                <g>\n                    <rect x="10" y="26.216" class="st0" width="20" height="0.8"/>\n                    <path class="st0" d="M29.175,24.749c0-4.657-3.428-8.512-7.874-9.163c0.21-0.274,0.34-0.611,0.34-0.982\n                        c0-0.894-0.722-1.62-1.609-1.62c-0.889,0-1.611,0.727-1.611,1.62c0,0.364,0.125,0.697,0.326,0.968\n                        c-4.492,0.609-7.972,4.487-7.972,9.178v0.401h18.4V24.749z M20.031,13.785c0.445,0,0.809,0.368,0.809,0.82s-0.364,0.82-0.809,0.82\n                        c-0.448,0-0.811-0.368-0.811-0.82S19.583,13.785,20.031,13.785z M19.976,16.279c3.885,0,7.157,2.677,8.112,6.296H11.862\n                        C12.817,18.956,16.089,16.279,19.976,16.279z M11.584,24.349c0.016-0.33,0.055-0.654,0.108-0.974h16.565\n                        c0.053,0.319,0.092,0.644,0.108,0.974C28.365,24.349,11.584,24.349,11.584,24.349z"/>\n                    <path class="st0" d="M13.26,20.71l0.701,0.392c2.154-3.053,4.659-3.232,4.659-3.232l-0.028-0.838\n                        C14.842,17.832,13.26,20.71,13.26,20.71z"/>\n                </g>\n            </g></g>`,
                        fpoIcon: `<g id="Group-2-Copy-9" transform="translate(${Y.x},  ${yA})">\n            <circle id="Oval-Copy-2" fill="#00537E" cx="7.5" cy="7.5" r="7.5"></circle>\n            <text id="FPO" font-family="HelveticaNeue-Bold, Helvetica Neue" font-size="6" font-weight="bold" fill="#FFFFFF">\n            <tspan x="2" y="10">FPO</tspan>\n            </text></g>`
                    }
                      , wt = this.calculateMultiSegmentBoxCords(Y, H)
                      , Qt = {
                        quietCarIcon: `<g id="quietCarIcon" transform="translate(${wt.x + wt.xIncrement * H}, ${wt.y - 3})" stroke="#002648" stroke-width="0.5">\n            <g id="Page-1" transform="translate(1.666667, 0.000000)">\n            <path d="M8.96506244,8.44733644 L9.12424231,4.28099907 C9.14355266,3.72830568 8.70828705,2.93345014 8.13106431,2.90474557 C7.55436347,2.8734315 7.46355266,3.689685 7.44424231,4.24237838 L6.99592917,8.44733644 L8.96506244,8.44733644 Z" id="Fill-1"></path><path d="M13.7386319,12.5288127 L12.9322945,9.54719105 C12.7099646,8.58950233 12.2553886,8.19442311 11.4808872,8.15006151 C10.9892563,8.12240075 10.9313253,8.26331407 10.7283057,8.63125443 C11.2757801,8.89690214 11.656246,9.44594222 11.656246,10.0837055 C11.656246,10.1948705 11.6489394,10.3222144 11.6358919,10.5085331 C11.6212787,10.7162498 11.6019683,11.0043392 11.5837018,11.4469115 L11.5268145,12.2558583 C11.5268145,12.4369581 11.5409059,12.5277689 11.492891,12.712 L11.4574017,12.8711799 C11.3900764,13.1916272 11.3357987,13.3836869 11.3206636,13.4421398 C11.3206636,13.4421398 9.64692637,15.3011519 9.63387884,15.3345536 L8.04573346,16.9566226 C7.48208015,17.519754 7.46955452,18.4215993 8.01807269,18.9711612 C8.56659087,19.5181137 9.15790494,19.3531929 9.80610624,18.8328574 C9.80610624,18.8328574 11.0508406,17.9388406 11.9406822,16.8209282 C13.606069,14.6310308 13.9667027,13.6702106 13.7386319,12.5288127" id="Fill-3"></path><path d="M9.63883691,9.34745946 L5.40047717,9.33023672 C4.93755079,9.33023672 4.56126002,9.63972414 4.56126002,10.0828183 C4.56126002,10.1355303 4.56647903,10.1866766 4.57587325,10.2357353 L7.95100839,10.2357353 C8.78970363,10.2357353 9.47182852,10.9048127 9.47182852,11.7278509 C9.47182852,11.7784753 9.47391612,11.8290997 9.47652563,11.8865089 C9.48487605,12.0639553 9.49792358,12.3066393 9.47495993,12.8468071 L9.42485741,13.6531445 C9.51671202,13.6614949 9.61952656,13.666192 9.74269525,13.666192 C10.118986,13.666192 10.3084362,12.9856328 10.3084362,12.472082 L10.4185573,11.3703486 C10.4357801,10.9429115 10.4550904,10.6475154 10.4707474,10.4335359 C10.4806636,10.2717465 10.4775322,10.2999292 10.4775322,10.2033774 C10.4775322,9.75871761 10.1007195,9.34745946 9.63883691,9.34745946" id="Fill-6"></path><path d="M6.56859646,16.5352917 C6.64427213,16.4303896 6.69802796,16.3046114 6.69802796,16.1616104 L6.79405778,14.6079105 C6.80814911,14.2363169 6.7997987,14.0035489 6.78361976,13.7535582 C6.77631314,13.6674445 6.76952842,13.6784045 6.77265983,13.6116011 C6.79405778,13.2593178 6.44020876,12.8835489 6.03051631,12.8945089 L2.52073066,12.8976403 C2.17314445,12.8976403 1.88766449,13.1705946 1.88766449,13.5051333 C1.88766449,13.8401938 2.17314445,14.1126263 2.52490587,14.1126263 L5.48304194,14.1126263 L5.48304194,16.1616104 C5.48304194,16.4048164 5.61873625,16.6094017 5.8113178,16.7163914 C5.86611743,16.7252637 5.92143896,16.7325704 5.97936999,16.7325704 C6.20274371,16.7325704 6.40576328,16.6568947 6.56859646,16.5352917" id="Fill-8"></path>\n            <path d="M3.72668779,15.0149413 C3.72042498,14.9867586 3.71572787,14.9611855 3.70946505,14.9345685 L2.18238211,14.9345685 C1.95900839,14.9345685 1.7492041,14.8802908 1.56079776,14.7926114 L1.60568127,15.4027139 C1.55975396,14.7649506 1.76433924,18.1620056 3.40049953,18.9913066 C3.40049953,18.9913066 4.68489842,19.554438 4.98238211,18.6358919 C5.27725629,17.7293495 4.50118919,17.5018006 4.12750792,16.3744939 L3.72668779,15.0149413 Z" id="Fill-10"></path><path d="M8.42786952,12.1455284 C8.42473812,12.0729842 8.42265051,12.0113998 8.42265051,11.9477279 C8.42265051,11.5776999 8.00095433,11.1930587 7.61422554,11.1930587 L3.79912768,11.1930587 C3.40248276,11.1930587 3.16710531,11.4086039 3.16710531,11.7697596 C3.16710531,11.8845778 3.2046822,11.9868705 3.25895993,12.0813346 L6.14037651,12.1037763 C6.94045107,12.1037763 7.59387139,12.744671 7.59387139,13.531698 C7.59387139,13.5812787 7.5980466,13.6329469 7.60222181,13.6960969 C7.61422554,13.875109 7.63301398,14.1454539 7.61318173,14.6496104 L7.57456104,15.2738043 C7.60222181,15.2779795 7.62675116,15.2905051 7.65441193,15.2905051 C8.02548369,15.2905051 8.32609879,14.9768425 8.32609879,14.5906356 L8.42682572,12.9419497 C8.44717987,12.4456216 8.43726375,12.3078397 8.42786952,12.1455284" id="Fill-12"></path><path d="M15.868041,4.77978006 C15.9238844,4.7568164 15.9651146,4.74063747 15.9651146,4.74063747 C15.9651146,4.74063747 13.839411,3.06846598 10.5326449,0.845688723 C10.5326449,0.845688723 9.32600932,-0.00866356011 8.34118173,1.05810252 C8.12615843,1.29034856 7.79683877,1.29243616 7.61260764,1.07741286 C7.61260764,1.07741286 7.10584157,0.338400746 5.95191799,0.649975769 C4.79799441,0.962594595 2.57469525,3.40926747 0.000156570363,4.62268779 C0.000156570363,4.62268779 0.0121602982,4.63364772 0.0325144455,4.64669525 C0.063306617,4.6686151 0.125412861,4.711411 0.209960857,4.77038583 C0.144723206,4.76307922 0.282505126,4.84867102 0.528842498,4.98958434 C1.56690401,5.69623858 3.81629823,7.11267847 4.82356757,7.31100093 L4.94256104,7.35797204 C5.27396831,7.46339609 5.59806897,7.63197018 5.98531966,7.71077726 L6.32716496,4.9697521 C5.86423858,4.8408425 4.018274,4.49325629 4.018274,4.49325629 C4.018274,4.49325629 4.0193178,4.16967754 4.13257036,4.14045107 C4.18528239,4.13001305 4.2343411,4.11800932 4.28757502,4.1075713 C4.39456477,4.08617335 4.45249581,4.07886673 4.39247717,4.08408574 C4.97648462,3.95882945 5.83553402,3.97396459 6.42476048,3.8930699 C6.51974651,3.19476608 6.92943896,2.03092637 8.13242125,2.03092637 L8.21696925,2.03301398 C9.41473253,2.0846822 10.0973793,3.30488723 10.0822442,3.74641566 C10.6427661,3.80486859 11.7439776,4.06895061 12.6265126,4.22604287 C12.7225424,4.33407642 12.7470718,4.45150419 12.5696253,4.54805592 C11.8723653,4.51621994 10.7236608,4.51726375 10.0749376,4.61642498 L9.95072507,7.51663001 C11.1323094,7.2984753 12.1421883,7.00360112 12.5336142,6.77500839 C13.2329618,6.50257596 15.9139683,4.79021808 15.9139683,4.79021808 C15.9322349,4.79021808 15.9238844,4.78917428 15.8977894,4.78552097 C15.8904828,4.78186766 15.8763914,4.78186766 15.868041,4.77978006" id="Fill-14"></path>\n            </g></g>`,
                        cafeCarIcon: `<g id="cafeCarIcon" transform="translate(${wt.x + wt.xIncrement * H}, ${wt.y + wt.yIncrement * H})" fill="#002648">\n            <g id="Page-1" transform="translate(0, 2)">\n              <g id="Group-3" transform="translate(11.800000, -2)">\n                <path d="M7.34 17.629C7.29 17.679 7.265 17.729 7.265 17.803L7.265 17.901C7.29 18.222 7.315 18.618 7.019 18.914C6.648 19.309 5.809 19.506 4.5 19.531L4.475 19.531L4.401 19.531L4.327 19.531L4.302 19.531C1.117 19.482 1.092 18.321 1.092 17.778C1.092 17.704 1.068 17.654 1.019 17.605C0.796 17.433 0.698 17.259 0.698 17.037C0.698 16.765 0.846 16.569 0.945 16.469C1.019 16.395 1.019 16.272 0.969 16.198C0.673 15.778 0.698 15.53 0.994 15.185C1.043 15.136 1.068 15.038 1.043 14.963C0.772 14.247 0.945 13.951 1.043 13.852C1.092 13.802 1.092 13.754 1.092 13.704C1.019 10.667 1.043 8.716 1.191 8.099C1.216 8.024 1.191 7.926 1.117 7.876C0.945 7.729 0.722 7.506 0.722 7.16C0.722 4.988 2.253 4 2.722 3.754C2.796 3.729 2.821 3.654 2.845 3.58C2.845 3.457 2.87 3.234 2.87 3.037C2.87 2.939 2.821 2.864 2.747 2.839C2.722 2.839 2.722 2.815 2.698 2.815C2.624 2.741 2.624 2.593 2.648 2.222L2.648 1.457C2.648 1.013 2.673 0.74 2.87 0.593C3.043 0.469 3.315 0.42 3.858 0.395L3.883 0.395L4.056 0.395L4.204 0.395L4.525 0.395L4.575 0.395C5.142 0.42 5.413 0.469 5.561 0.593C5.76 0.74 5.784 1.013 5.784 1.457L5.784 2.222C5.784 2.593 5.784 2.765 5.735 2.815C5.735 2.815 5.71 2.839 5.685 2.839C5.66 2.839 5.66 2.864 5.635 2.864C5.586 2.839 5.561 2.815 5.487 2.815L4.179 2.815C4.056 2.815 3.956 2.914 3.956 3.037C3.956 3.16 4.056 3.259 4.179 3.259L5.463 3.259L5.513 3.259C5.513 3.408 5.513 3.531 5.537 3.604C5.537 3.679 5.586 3.754 5.66 3.778C6.13 4.024 7.66 5.012 7.66 7.185C7.66 7.506 7.438 7.753 7.265 7.901C7.216 7.95 7.191 7.975 7.191 8.024L4.327 8.024C4.204 8.024 4.105 8.124 4.105 8.247C4.105 8.37 4.204 8.469 4.327 8.469L7.241 8.469C7.34 9.284 7.364 11.037 7.29 13.531L4.327 13.531C4.204 13.531 4.105 13.629 4.105 13.754C4.105 13.876 4.204 13.975 4.327 13.975L7.414 13.975C7.488 14.124 7.562 14.419 7.34 15.012C7.315 15.086 7.315 15.185 7.39 15.234C7.685 15.58 7.685 15.827 7.414 16.247C7.364 16.321 7.364 16.444 7.438 16.519C7.537 16.617 7.685 16.814 7.685 17.087C7.66 17.284 7.537 17.481 7.34 17.629M7.834 16.321C8.105 15.852 8.105 15.432 7.784 15.038C8.03 14.296 7.882 13.876 7.71 13.679C7.784 10.988 7.76 9.209 7.66 8.37C7.685 8.345 7.685 8.296 7.685 8.272C7.685 8.222 7.66 8.198 7.66 8.173C7.858 7.975 8.105 7.654 8.105 7.234C8.105 4.963 6.599 3.852 5.981 3.506L5.981 3.21C6.006 3.21 6.006 3.185 6.031 3.16C6.229 2.963 6.229 2.716 6.204 2.247L6.204 1.482C6.204 1.013 6.179 0.544 5.809 0.271C5.537 0.074 5.167 0 4.623 0L4.575 0L4.204 0L4.056 0L3.834 0L3.784 0C3.24 0.025 2.845 0.074 2.574 0.271C2.204 0.568 2.179 1.013 2.179 1.482L2.179 2.247C2.179 2.716 2.179 2.963 2.352 3.16L2.401 3.21L2.401 3.506C1.784 3.852 0.278 4.963 0.278 7.234C0.278 7.679 0.525 8.024 0.747 8.198C0.624 8.963 0.574 10.814 0.648 13.704C0.5 13.926 0.327 14.346 0.574 15.062C0.253 15.482 0.229 15.876 0.525 16.346C0.352 16.569 0.278 16.839 0.278 17.087C0.278 17.309 0.352 17.629 0.698 17.925C0.747 18.889 1.241 19.95 4.302 20L4.327 20L4.426 20L4.525 20L4.549 20C6.006 19.975 6.895 19.729 7.364 19.234C7.784 18.79 7.76 18.272 7.735 17.901C8.055 17.605 8.13 17.284 8.13 17.087C8.105 16.814 8.006 16.569 7.834 16.321" id="Fill-1" stroke="#00344D" stroke-width="0.25" fill="#00344D"/>\n              </g>\n              <g id="Group-6" transform="translate(10.000000, 2.333333)">\n                <path d="M2.469 14.405C0.606 14.274 0.591 13.52 0.591 13.153C0.591 13.1 0.573 13.064 0.537 13.028C0.376 12.903 0.304 12.778 0.304 12.617C0.304 12.419 0.411 12.277 0.483 12.205C0.537 12.152 0.537 12.062 0.501 12.008C0.286 11.704 0.304 11.525 0.519 11.274C0.555 11.238 0.573 11.167 0.555 11.113C0.358 10.594 0.483 10.379 0.555 10.308C0.591 10.272 0.591 10.236 0.591 10.2C0.537 7.999 0.555 6.585 0.662 6.138C0.681 6.084 0.662 6.013 0.609 5.977C0.483 5.869 0.322 5.708 0.322 5.458C0.322 3.883 1.431 3.167 1.772 2.988C1.826 2.97 1.844 2.916 1.861 2.863C1.861 2.773 1.879 2.612 1.879 2.468C1.879 2.398 1.844 2.343 1.79 2.326C1.772 2.326 1.772 2.308 1.754 2.308C1.701 2.254 1.701 2.147 1.718 1.878L1.718 1.323C1.718 1.002 1.736 0.804 1.879 0.697C1.991 0.618 3.238 0.581 3.549 0.561L3.549 0.272C3.193 0.291 1.849 0.33 1.665 0.464C1.396 0.679 1.378 1.002 1.378 1.341L1.378 1.896C1.378 2.236 1.378 2.415 1.503 2.558L1.539 2.594L1.539 2.808C1.091 3.059 0 3.865 0 5.512C0 5.833 0.179 6.084 0.34 6.209C0.251 6.764 0.215 8.106 0.268 10.2C0.161 10.361 0.036 10.666 0.215 11.185C-0.018 11.489 -0.036 11.776 0.179 12.116C0.054 12.277 0 12.473 0 12.652C0 12.813 0.054 13.046 0.304 13.261C0.337 13.908 0.649 14.618 2.469 14.745L2.469 14.405Z" id="Fill-4" fill="#00344D"/>\n              </g>\n            </g>\n            <g id="Page-1">\n              <path d="M1.038 5.777L8.395 5.777C7.992 7.51 7.222 9.009 5.747 9.463L3.686 9.463C2.212 9.009 1.442 7.51 1.038 5.777L1.038 5.777ZM8.839 0.594C8.837 1.836 8.812 3.569 8.517 5.183L0.916 5.183C0.621 3.569 0.596 1.836 0.594 0.594L8.839 0.594ZM8.118 18.276C8.118 18.748 6.802 19.406 4.657 19.406C2.511 19.406 1.194 18.748 1.194 18.276C1.194 17.828 2.393 17.218 4.352 17.157L4.352 18.146C4.352 18.31 4.485 18.443 4.649 18.443C4.813 18.443 4.946 18.31 4.946 18.146L4.946 17.156C6.914 17.215 8.118 17.827 8.118 18.276L8.118 18.276ZM5.792 10.057C5.82 10.057 5.847 10.053 5.876 10.045C7.718 9.506 8.602 7.666 9.031 5.627C9.056 5.583 9.076 5.535 9.076 5.481C9.076 5.466 9.069 5.455 9.067 5.442C9.428 3.595 9.433 1.615 9.433 0.297C9.433 0.133 9.3 0 9.136 0L0.296 0C0.133 0 0 0.133 0 0.297C0 3.123 0 9.003 3.558 10.045C3.586 10.053 3.614 10.057 3.642 10.057L4.352 10.057L4.352 16.558C2.48 16.616 0.601 17.214 0.601 18.276C0.601 19.396 2.69 20 4.657 20C6.622 20 8.712 19.396 8.712 18.276C8.712 17.211 6.822 16.613 4.946 16.558L4.946 10.057L5.792 10.057Z" id="Fill-1" fill="#00344D"/>\n            </g>\n          </g>`,
                        wifiIcon: `<g id="wifiIcon" transform="translate(${wt.x + wt.xIncrement * H - 3}, ${wt.y + wt.yIncrement * H - 3})" fill="#002648">\n            <g id="Page-1" transform="translate(0.000000, 2.500000)">\n            <g id="Group-3" transform="translate(8.800000, 11.571440)">\n            <path d="M1.2,0.60256 C0.7048,0.60256 0.3016,1.00576 0.3016,1.50176 C0.3016,1.99696 0.7048,2.40016 1.2,2.40016 C1.6952,2.40016 2.0992,1.99696 2.0992,1.50176 C2.0992,1.00576 1.6952,0.60256 1.2,0.60256" id="Fill-1"></path>\n            </g>\n            <path d="M5.64648,10.35368 C5.48488,10.51528 5.48488,10.77608 5.64648,10.93768 C5.72728,11.01848 5.83288,11.05928 5.93848,11.05928 C6.04488,11.05928 6.15048,11.01848 6.23048,10.93768 C8.39928,8.77048 11.66568,8.76648 13.82888,10.92808 C13.98968,11.08888 14.25128,11.08888 14.41288,10.92808 C14.57448,10.76648 14.57448,10.50408 14.41288,10.34328 C11.91608,7.84808 8.14808,7.85288 5.64648,10.35368" id="Fill-4"></path>\n            <g id="Group-8" transform="translate(0.000000, 0.371440)">\n            <path d="M19.87576,4.31352 C19.78696,4.22632 10.77576,-4.36728 0.15256,4.28872 C-0.02424,4.43272 -0.05144,4.69352 0.09256,4.87032 C0.17496,4.97032 0.29336,5.02232 0.41336,5.02232 C0.50536,5.02232 0.59736,4.99192 0.67416,4.92952 C10.71656,-3.25368 18.95256,4.56792 19.29816,4.90472 C19.46056,5.06392 19.72376,5.06152 19.88216,4.89752 C20.04136,4.73432 20.03896,4.47352 19.87576,4.31352" id="Fill-6"></path>\n            </g>\n            <path d="M2.70504,7.42952 C2.54344,7.59112 2.54344,7.85192 2.70504,8.01352 C2.78584,8.09432 2.89144,8.13512 2.99704,8.13512 C3.10264,8.13512 3.20824,8.09432 3.28904,8.01352 C6.88664,4.41592 13.18424,4.40152 16.76664,7.98232 C16.92744,8.14472 17.18904,8.14472 17.35064,7.98232 C17.51144,7.82152 17.51144,7.55992 17.35064,7.39832 C13.45704,3.50552 6.61384,3.52072 2.70504,7.42952" id="Fill-9"></path>\n            </g></g>;`,
                        checkedBaggage: `<g id="Group" transform="translate(${wt.x + wt.xIncrement * H}, ${wt.y + wt.yIncrement * H})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:#002436;}\n            </style>\n            <g id="Page-1" transform="scale(.8, .8) translate(-10, -10)">\n                <path class="st0" d="M27.61,16.341l-0.082-0.161c-0.293-0.526-0.853-0.846-1.455-0.833h-2.74v-1.2\n                    c-0.033-0.555-0.508-0.98-1.064-0.951h-4.537c-0.556-0.029-1.031,0.396-1.064,0.951v1.2h-2.741\n                    c-0.602-0.013-1.161,0.307-1.455,0.832L12.39,16.34c-1.481,2.77-2.299,5.845-2.39,8.985c-0.01,0.395,0.155,0.774,0.451,1.035\n                    c0.315,0.288,0.727,0.445,1.153,0.44h16.84c0.834,0.025,1.531-0.631,1.556-1.465c0-0.004,0-0.007,0-0.011\n                    C29.908,22.185,29.09,19.11,27.61,16.341z M17.468,14.151c0.008-0.137,0.126-0.242,0.263-0.235h4.537\n                    c0.138-0.008,0.256,0.097,0.264,0.235v1.2h-5.064C17.468,15.351,17.468,14.151,17.468,14.151z M25.728,16.064\n                    c-0.229,1.776-0.669,3.518-1.311,5.19l-0.056,0.151c-0.039,0.166-0.174,0.293-0.342,0.322H22v-1.076\n                    c-0.013-0.208-0.191-0.368-0.4-0.358h-3.2c-0.209-0.011-0.388,0.149-0.4,0.358v1.075h-2.018c-0.134,0-0.271-0.129-0.342-0.321\n                    l-0.057-0.152c-0.641-1.672-1.081-3.414-1.312-5.189H25.728z M18.8,21.726v-0.717h2.4v0.717L18.8,21.726z M21.206,22.442v0.715H18.8\n                    v-0.716L21.206,22.442z M28.978,25.866c-0.158,0.143-0.365,0.221-0.578,0.219H11.605c-0.214,0.002-0.421-0.076-0.58-0.219\n                    c-0.146-0.132-0.228-0.32-0.225-0.517c0.089-3.043,0.882-6.024,2.317-8.709l0.084-0.162c0.064-0.121,0.161-0.221,0.279-0.29\n                    c0.24,1.81,0.692,3.585,1.345,5.29l0.056,0.151c0.159,0.475,0.599,0.8,1.1,0.812H18v1.074c0.013,0.208,0.192,0.367,0.4,0.357h3.2\n                    c0.209,0.012,0.388-0.148,0.4-0.357l0,0v-1.073h2.014c0.502-0.012,0.942-0.337,1.1-0.813l0.055-0.149\n                    c0.656-1.706,1.108-3.482,1.347-5.294c0.118,0.07,0.215,0.17,0.281,0.291l0.084,0.162c1.435,2.685,2.228,5.666,2.319,8.709\n                    c0.003,0.197-0.079,0.386-0.226,0.518C28.974,25.866,28.978,25.866,28.978,25.866z"/>\n            </g></g>`,
                        lounge: `<g id="Group" transform="translate(${wt.x + wt.xIncrement * H}, ${wt.y + wt.yIncrement * H})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:#002436;}\n            </style>\n            <g id="Page-1" transform="scale(.8, .8) translate(-10, -10)">\n                <g id="Icons">\n                    <g id="Icon-Sheets_x2F_Core-Icons_x2F_Amenities-_x28_CC_x29_" transform="translate(-266.000000, -137.000000)">\n                        <g id="Amenities-_x28_CC_x29_" transform="translate(-10.000000, 0.000000)">\n                            <g id="On-Light" transform="translate(10.000000, 43.000000)">\n                                <g id="Icons_x2F_Amenities_x2F_amenities_x5F_lounge" transform="translate(265.000000, 94.000000)">\n                                    <g id="Page-1">\n                                        <g id="Group-3" transform="translate(0.923077, 0.002400)">\n                                            <g id="Clip-2">\n                                            </g>\n                                            <path id="Fill-1" class="st0" d="M27.564,16.876c-0.235,1.52-0.415,2.628-0.616,3.874l-0.327,2.023\n                                                c-0.222,1.386-0.873,4.78-1.134,5.595c-0.217,0.679-0.473,0.834-1.369,0.834h-9.243l-0.318,0.003\n                                                c-0.611,0.01-0.775,0.013-1.09-0.353c-0.757-0.878-1.079-1.468-0.984-2.656c0.088-1.104,1.455-1.376,2.587-1.41\n                                                c1.288-0.038,2.613,0.146,3.896,0.328l0.199,0.028c0.144,0.019,0.301,0.055,0.464,0.091c0.354,0.08,0.752,0.166,1.116,0.137\n                                                l0.103-0.006c0.324-0.004,0.431-0.182,0.497-0.373c0.01-0.035,0.027-0.082,0.053-0.144c0.249-0.618,0.46-1.26,0.665-1.882\n                                                c0.073-0.22,0.146-0.44,0.22-0.659h1.995c0.91,0,1.65-0.74,1.65-1.687c0-0.91-0.741-1.65-1.65-1.65h-0.503\n                                                c0.316-0.767,0.868-2.109,1.14-3.039c0.235-0.795,0.228-1.477,0.219-2.198c-0.003-0.172-0.004-0.347-0.003-0.53l0.002-0.206\n                                                c0.003-0.604,0.007-1.229,0.098-1.81c0.051-0.322,0.119-0.425,0.69-0.393c1.494,0.079,1.694,0.63,1.694,1.158\n                                                c0,0.496,0.018,1.003,0.035,1.513C27.689,14.606,27.731,15.787,27.564,16.876 M16.097,20.619\n                                                c0-0.476,0.386-0.861,0.861-0.861h7.32c0.475,0,0.861,0.386,0.861,0.899c0,0.474-0.386,0.861-0.861,0.861h-7.32\n                                                C16.483,21.518,16.097,21.131,16.097,20.619 M28.438,13.436c-0.018-0.502-0.035-0.998-0.035-1.485\n                                                c0-1.205-0.821-1.86-2.44-1.945c-0.4-0.023-1.333-0.072-1.51,1.058c-0.101,0.64-0.105,1.295-0.107,1.928l-0.002,0.205\n                                                c-0.001,0.189,0.001,0.37,0.003,0.545c0.008,0.689,0.014,1.283-0.187,1.968c-0.269,0.917-0.838,2.293-1.143,3.031\n                                                c-0.036,0.09-0.065,0.159-0.094,0.23h-5.965c-0.909,0-1.65,0.74-1.65,1.688c0,0.909,0.741,1.65,1.65,1.65h4.494\n                                                c-0.046,0.138-0.092,0.274-0.138,0.414c-0.199,0.608-0.406,1.238-0.646,1.83c-0.005,0.012-0.01,0.023-0.014,0.036\n                                                c-0.235,0.016-0.549-0.055-0.854-0.123c-0.185-0.04-0.364-0.081-0.526-0.103l-0.198-0.028C17.76,24.15,16.4,23.959,15.047,24\n                                                c-2.055,0.061-3.245,0.821-3.349,2.136c-0.115,1.442,0.324,2.251,1.174,3.234c0.489,0.565,0.919,0.629,1.464,0.629\n                                                c0.076,0,0.153-0.002,0.234-0.003l9.549-0.003c1.036,0,1.751-0.232,2.12-1.384c0.281-0.88,0.939-4.321,1.161-5.711\n                                                l0.327-2.019c0.201-1.249,0.381-2.36,0.616-3.881C28.52,15.833,28.48,14.615,28.438,13.436"/>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </g></g>`,
                        dining: `<g id="Group" transform="translate(${wt.x + wt.xIncrement * H}, ${wt.y + wt.yIncrement * H})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:#002436;}\n            </style>\n            <g id="Page-1" transform="scale(.8, .8) translate(-10, -10)">\n                <g>\n                    <rect x="10" y="26.216" class="st0" width="20" height="0.8"/>\n                    <path class="st0" d="M29.175,24.749c0-4.657-3.428-8.512-7.874-9.163c0.21-0.274,0.34-0.611,0.34-0.982\n                        c0-0.894-0.722-1.62-1.609-1.62c-0.889,0-1.611,0.727-1.611,1.62c0,0.364,0.125,0.697,0.326,0.968\n                        c-4.492,0.609-7.972,4.487-7.972,9.178v0.401h18.4V24.749z M20.031,13.785c0.445,0,0.809,0.368,0.809,0.82s-0.364,0.82-0.809,0.82\n                        c-0.448,0-0.811-0.368-0.811-0.82S19.583,13.785,20.031,13.785z M19.976,16.279c3.885,0,7.157,2.677,8.112,6.296H11.862\n                        C12.817,18.956,16.089,16.279,19.976,16.279z M11.584,24.349c0.016-0.33,0.055-0.654,0.108-0.974h16.565\n                        c0.053,0.319,0.092,0.644,0.108,0.974C28.365,24.349,11.584,24.349,11.584,24.349z"/>\n                    <path class="st0" d="M13.26,20.71l0.701,0.392c2.154-3.053,4.659-3.232,4.659-3.232l-0.028-0.838\n                        C14.842,17.832,13.26,20.71,13.26,20.71z"/>\n                </g>\n            </g></g>`,
                        wheelchairRamp: `<g id="Group" transform="translate(${wt.x + wt.xIncrement * H}, ${wt.y + wt.yIncrement * H})" stroke="#002648">\n            <style type="text/css">\n               .st0{fill:transparent;}\n            </style>\n            <g id="Page-1" transform="scale(.8, .8) translate(-10, -10)">\n                <g id="Icon-Sheets_Core-Icons_Other-Icons-_CJ_" data-name="Icon-Sheets Core-Icons Other-Icons- CJ "><g id="Other-Icons-_CJ_" data-name="Other-Icons- CJ "><g id="Icons_wheelchair_ramp" data-name="Icons wheelchair ramp"><g id="Icons_Wheelchair-Ramp" data-name="Icons Wheelchair-Ramp"><g id="Group-3"><path id="Fill-1" class="cls-1" d="M29.36,27a.44.44,0,0,0-.4-.1L10.82,31.05a.5.5,0,0,0-.37.47.49.49,0,0,0,.48.48H11l17.55-4v3.53a.5.5,0,0,0,.48.48.48.48,0,0,0,.48-.48V27.44a.42.42,0,0,0-.18-.37"/></g><path id="Fill-4" class="cls-1" d="M17.89,28.05a6.69,6.69,0,0,0,5.82-3.39.48.48,0,1,0-.84-.47h0a5.73,5.73,0,1,1-7.19-8.11h0a.48.48,0,0,0-.28-.92l-.11.05a6.68,6.68,0,0,0,2.6,12.84"/><path id="Fill-6" class="cls-1" d="M16.78,9a1.5,1.5,0,1,1,0,3,1.51,1.51,0,0,1-1.51-1.49v0A1.5,1.5,0,0,1,16.78,9m-.42,3.91,1.24,6.57a.49.49,0,0,0,.47.39h5.38l1.49,5.8a.5.5,0,0,0,.47.36h0l2.4-.55a.49.49,0,0,0,.37-.58h0a.46.46,0,0,0-.55-.36h0l-1.95.44-1.47-5.7a.48.48,0,0,0-.47-.36h-5.3L17.94,16h3.94a.48.48,0,0,0,0-1H17.75l-.41-2.23a2.44,2.44,0,1,0-1,0"/></g></g></g></g>\n            </g></g>`,
                        seatAssignment: `<g id="seatAssignment" transform="translate(${wt.x + wt.xIncrement * H}, ${wt.y + wt.yIncrement * H})" stroke="#002648">\n            <style type="text/css">\n                .st0{fill:transparent;}\n            </style>\n            <g id="Page-1" transform="scale(.07, .07) translate(-100, -100)">\n          \n                <path class="st0" d="M314,372H167c-6.6,0-9-4-12-12L92,142.2c0-2.7,26-12.4,31,2.2c15.7,45.9,47.1,159.5,51,159.5h146\n                        c6.6,0,12,5.4,12,12l-6,44C326,366.6,320.6,372,314,372z"/>\n                    <circle class="st0" cx="162.5" cy="133" r="24.5"/>\n                    <path class="st0" d="M246,292.5c-13.2-44-36.5-88-46.2-116.3c-8.3-24.2-51.3-8.2-51.3-3.7l34.7,120.1H246V292.5z"/>\n                <path class="st0" d="M298.9,270l-71.8-7c2.9,7.4,5.9,22,8.9,29.5h57.4c6.1,0,11.1-1.8,11.1-4L310,274C310,271.8,305,270,298.9,270z"\n                    />\n                <path class="st0" d="M402.1,399.8l-1.1,0.8c-4.9,4.5-11.5,5.2-14.8,1.6l-46.7-50c-1.8-3.5-1-7-0.6-14.5l2.4-21.4\n                        c4.9-4.5,9.5-4.3,12.8-0.7l50.8,69.6C408.3,388.7,407,395.3,402.1,399.8z"/>\n\n            </g></g>`,
                        fpoIcon: `<g id="fpoIcon" transform="translate(${wt.x + wt.xIncrement * H},  ${wt.y + wt.yIncrement * H})">\n            <circle id="Oval-Copy-2" fill="#00537E" cx="7.5" cy="7.5" r="7.5"></circle>\n            <text id="FPO" font-family="HelveticaNeue-Bold, Helvetica Neue" font-size="6" font-weight="bold" fill="#FFFFFF">\n            <tspan x="2" y="10">FPO</tspan>\n            </text></g>`
                    };
                    switch (a.code) {
                    case "N":
                        return "multi-segment-box" === a.location ? Qt.wifiIcon : Ft.wifiIcon;
                    case "S":
                    case "L":
                    case "L":
                        return "multi-segment-box" === a.location ? Qt.cafeCarIcon : Ft.cafeCarIcon;
                    case "Q":
                        return "multi-segment-box" === a.location ? Qt.quietCarIcon : Ft.quietCarIcon;
                    case "B":
                        return "multi-segment-box" === a.location ? Qt.checkedBaggage : Ft.checkedBaggage;
                    case "T":
                    case "D":
                        return "multi-segment-box" === a.location ? Qt.dining : Ft.dining;
                    case "A":
                        return "multi-segment-box" === a.location ? Qt.seatAssignment : Ft.seatAssignment;
                    case "R":
                        return "multi-segment-box" === a.location ? Qt.wheelchairRamp : Ft.wheelchairRamp;
                    default:
                        return "multi-segment-box" === a.location ? Qt.fpoIcon : Ft.fpoIcon
                    }
                }
                firstRowSpacing(a) {
                    return {
                        Wifi: 28,
                        "Snack Car": 55,
                        "Quiet Car": 52,
                        "Flexible Dining": 75,
                        "Checked Baggage": 90
                    }[a]
                }
                buildServiceConfirmationText(a, Y, H, yA) {
                    let wt = ""
                      , Qt = 0;
                    switch (Qt = 0 === a.subjectIndex && 0 === yA ? Y.y + Y.yIncrement * a.subjectIndex : yA,
                    void 0 !== a.subject.serviceType ? a.subject.serviceType : a.subject.code) {
                    case "Business":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Business - </tspan>\n                <tspan x="${Y.x + 50}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Business seating features wide, comfortable</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">reclining seats with extra legroom and a fold-down tray,</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">individual reading lights, 120v electric outlets at your seat.</tspan> \n                </text> `,
                        Qt += 4 * H;
                        break;
                    case "First":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">First - </tspan>\n                <tspan x="${Y.x + 30}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">First Class passengers enjoy early boarding,</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">complimentary at-seat onboard meal and beverage services,</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">adjustable headrests, lumbar support, movable arm and</tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">footrests, extra-large tray tables and at-seat 120v electric</tspan>\n                <tspan x="${Y.x}" y="${Qt + 4 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">outlets.</tspan>                \n                </text> `,
                        Qt += 6 * H;
                        break;
                    case "Pet":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Pet - </tspan>\n                <tspan x="${Y.x + 23}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> Dogs and cats up to 20 pounds (combined weight of pet</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> and carrier) are welcome on trips up to seven hours.</tspan>\n                </text> `,
                        Qt += 3 * H;
                        break;
                    case "Bicycle":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Bicycle - </tspan>\n                <tspan x="${Y.x + 40}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> Space is available for standard, full-size bicycles</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> (up to 50 lbs, 70 inches x 41 inches x 8.5 inches). Bikes are</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> stored in designated bike racks/areas inside Coach passenger</tspan> \n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> cars or in the baggage car (if available).</tspan>               \n                </text> `,
                        Qt += 5 * H;
                        break;
                    case "Bedroom":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Bedroom - </tspan>\n                <tspan x="${Y.x + 50}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">2x the space of a Roomette with seating by day and</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> upper and lower berths by night; in-room restroom and shower;</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">and towels; complimentary meals and lounge access and a</tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">dedicated car attendant.</tspan>               \n                </text> `,
                        Qt += 5 * H;
                        break;
                    case "Roomette":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Roomette - </tspan>\n                <tspan x="${Y.x + 55}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> Seating by day, upper and lower berths by night;</tspan>                                                                                                                                                            \n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> access to a private restroom and shower in your car; fresh linens </tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">and towels; complimentary meals and lounge access and a </tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">dedicated car attendant.</tspan>                \n                </text> `,
                        Qt += 5 * H;
                        break;
                    case "Family":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Family Bedroom - </tspan>\n                <tspan x="${Y.x + 82}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Ample seating and berths for two adults</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> and two kids; access to a private restroom and shower in your</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">car; fresh linens and towels; complimentary meals and lounge</tspan>               \n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">access and a dedicated car attendant.</tspan>\n                </text> `,
                        Qt += 5 * H;
                        break;
                    case "Coach":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Coach - </tspan>\n                <tspan x="${Y.x + 40}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Coach seating features wide, comfortable reclining</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">seats with ample legroom and a fold-down tray, individual</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">reading lights and 120v electric outlets at your seat.</tspan>               \n                </text> `,
                        Qt += 4 * H;
                        break;
                    case "B":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Checked Baggage - </tspan>\n                <tspan x="${Y.x + 90}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Two bags up to 50 lbs. and 75 </tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">linear inches are allowed per person for free. Charges</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">apply for additional and oversized bags. Not all locations</tspan>               \n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">are equipped to handle checked baggage.</tspan>               \n                </text> `,
                        Qt += 4 * H;
                        break;
                    case "R":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Wheelchair Ramp - </tspan>\n                <tspan x="${Y.x + 87}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">An onboard wheelchair ramp is</tspan>                                                                                                                                                              \n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">available to assist passengers boarding and detraining</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">with a wheeled mobility device.</tspan>               \n                </text> `,
                        Qt += 4 * H;
                        break;
                    case "T":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Flexible Dining - </tspan>\n                <tspan x="${Y.x + 75}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Exclusive and complimentary dining</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> for customers in private rooms-offering a menu of hot,</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">ready-to-serve selections for breakfast, lunch and</tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">dinner and a wide array of wine, beer and spirits.</tspan>              \n                </text> `,
                        Qt += 4 * H;
                        break;
                    case "D":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Traditional Dining - </tspan>\n                <tspan x="${Y.x + 88}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Exclusive and complimentary dining</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">for customers in private rooms-offering chef-prepared</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">meals for breakfast, lunch and dinner, table service,</tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">selections for kids and a wide array of wine, beer and</tspan>              \n                <tspan x="${Y.x}" y="${Qt + 4 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">spirits.</tspan>\n                </text> `,
                        Qt += 5 * H;
                        break;
                    case "N":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">WiFi - </tspan>\n                <tspan x="${Y.x + 27}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Delivered free of charge, our WiFi service supports</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> general web browsing activities. Due to limited</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">bandwidth onboard the trains, our WiFi does not support</tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">high-bandwidth actions such as streaming music,</tspan>              \n                <tspan x="${Y.x}" y="${Qt + 4 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">streaming video or downloading large files.</tspan>  \n                </text> `,
                        Qt += 6 * H;
                        break;
                    case "L":
                    case "S":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Cafe - </tspan>\n                <tspan x="${Y.x + 30}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Served in the lounge and featuring a variety of </tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">meals, snacks and beverages for sale\u2014available for all</tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">customers from early morning until late at night.</tspan>           \n                </text> `,
                        Qt += 4 * H;
                        break;
                    case "Q":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Quiet Car - </tspan>\n                <tspan x="${Y.x + 50}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Relax in a peaceful atmosphere free of</tspan>\n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143"> cell phones, pagers and noisy chatter by riding in a </tspan>\n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">designated Quiet Car. Use of sound-emitting electronic</tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">devices and loud conversation are prohibited.</tspan>              \n                </text> `,
                        Qt += 5 * H;
                        break;
                    case "A":
                        wt = `<text font-family="OpenSans-SemiBold, Open Sans" font-size="10" font-weight="500" letter-spacing="0.0714285714" fill="#002436">\n                <tspan x="${Y.x}" y="${Qt}" font-weight="bold">Reserved Seating - </tspan>\n                <tspan x="${Y.x + 85}" y="${Qt}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Reserved seating allows for seamless</tspan>                                                                                                                                                                \n                <tspan x="${Y.x}" y="${Qt + H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">boarding and takes the guesswork out of finding a seat.</tspan>                                                                                                                                                                      \n                <tspan x="${Y.x}" y="${Qt + 2 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">Seats are automatically designated when making </tspan>\n                <tspan x="${Y.x}" y="${Qt + 3 * H}" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" letter-spacing="0.0642857143">reservations.</tspan>              \n                </text> `,
                        Qt += 4 * H;
                        break;
                    default:
                        console.log("default")
                    }
                    return {
                        text: wt,
                        yCord: Qt
                    }
                }
                buildToAndFromBlueBox(a, Y, H) {
                    let yA;
                    switch (H) {
                    case "N":
                        yA = "Northbound";
                        break;
                    case "E":
                        yA = "Eastbound";
                        break;
                    case "S":
                        yA = "Southbound";
                        break;
                    case "W":
                        yA = "Westbound";
                        break;
                    default:
                        yA = ""
                    }
                    return `\n        <svg width="226px" height="38px" viewBox="0 0 226 38" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n        <title>Group 22</title>\n        <g id="final" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n            <g id="Group-22">\n                <rect id="Rectangle-Copy" fill="#00537E" x="0" y="0" width="226" height="38"></rect>\n                <text id="Eastbound-Copy" font-family="OpenSans-Regular, Open Sans" font-size="12" font-weight="normal" letter-spacing="-0.240000004" fill="#FFFFFF">\n                    <tspan x="143" y="24">${yA}</tspan>\n                </text>\n                <text id="BOS" font-family="OpenSans-Regular, Open Sans" font-size="16" font-weight="normal" letter-spacing="0.646464727" fill="#FFFFFF">\n                    <tspan x="9" y="25">${a}</tspan>\n                </text>\n                <text id="WAS" font-family="OpenSans-Regular, Open Sans" font-size="16" font-weight="normal" letter-spacing="0.646464727" fill="#FFFFFF">\n                    <tspan x="81" y="25">${Y}</tspan>\n                </text>\n                <g id="AM-Icons/am-city-pair-toggle-Copy-2" transform="translate(61.500000, 20.400000) scale(-1, 1) rotate(90.000000) translate(-61.500000, -20.400000) translate(58.000000, 12.000000)" stroke="#FFFFFF">\n                    <g id="City-Pair-Toggle" transform="translate(3.500000, 8.400000) scale(-1, 1) rotate(90.000000) translate(-3.500000, -8.400000) translate(-4.900000, 4.900000)">\n                        <path d="M11,0.84975723 L15.770437,3.5 L11,6.15024277 L11,3.525 L0.5,3.525 L11,3.475 L11,0.84975723 Z" id="Combined-Shape"></path>\n                    </g>\n                </g>\n            </g>\n        </g>\n        </svg>\n        `
                }
                buildTripDepartureAndArrival(a) {
                    let Y, H;
                    if (a.length > 1) {
                        Y = a[0].stops[0].station;
                        const yA = a.length - 1;
                        H = a[yA].stops[a[yA].stops.length - 1].station
                    } else
                        Y = a[0].stops[0].station,
                        H = a[0].stops[a[0].stops.length - 1].station;
                    return `<svg width="271px" height="53px" viewBox="0 0 271 53" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n        <title>Group 22</title>\n        <g id="final" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Group-22">\n        <text id="New-York,-NY-(NYP)-M" font-family="Helvetica" font-size="9" font-weight="normal" line-spacing="11" fill="#002436">\n        <tspan x="143" y="38">${H.name}</tspan>\n        <tspan x="143" y="49">${void 0 !== H.facility ? H.facility : ""}</tspan>\n        </text>\n        <text id="Washington-DC-Union" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" line-spacing="11" fill="#002436">\n        <tspan x="0" y="41">${Y.name}</tspan>\n        <tspan x="0" y="52">${void 0 !== Y.facility ? Y.facility : ""}</tspan>\n        </text>\n        <text id="WAS" font-family="OpenSans-Regular, Open Sans" font-size="24" font-weight="normal" fill="#002436">\n        <tspan x="0" y="26">${Y.code}</tspan>\n        </text>\n        <text id="NYP" font-family="Helvetica" font-size="24" font-weight="normal" fill="#002436">\n        <tspan x="143" y="23">${H.code}</tspan>\n        </text>\n        <g id="AM-Icons/am-city-pair-toggle" transform="translate(104.000000, 18.000000) scale(-1, 1) rotate(90.000000) translate(-104.000000, -18.000000) translate(99.000000, 6.000000)" stroke="#002436">\n        <g id="City-Pair-Toggle" transform="translate(5.000000, 12.000000) scale(-1, 1) rotate(90.000000) translate(-5.000000, -12.000000) translate(-7.000000, 7.000000)">\n        <path d="M15.5,0.84975723 L22.970437,5 L15.5,9.15024277 L15.5,5.25 L0.5,5.25 L0.5,4.75 L15.5,4.75 L15.5,0.84975723 Z" id="Combined-Shape"></path>\n        </g>\n        </g>\n        </g>\n        </g>\n        </svg>`
                }
                centerText(a, Y, H, yA) {
                    return (a - Y * H) / 2 + yA
                }
                createPdfAmPmSpacing(a, Y, H) {
                    return "departure" === a ? 4 === Y ? `<tspan x="95" y="${0 === H.index ? 32 : 32 + 55 * H.index}" font-size="10">${H.details[a].amPm}</tspan>` : `<tspan x="107" y="${0 === H.index ? 32 : 32 + 55 * H.index}" font-size="10">${H.details[a].amPm}</tspan>` : "arrival" === a ? 4 === Y ? `<tspan x="188" y="${0 === H.index ? 32 : 32 + 55 * H.index}" font-size="10">${H.details[a].amPm}</tspan>` : `<tspan x="197" y="${0 === H.index ? 32 : 32 + 55 * H.index}" font-size="10">${H.details[a].amPm}</tspan>` : void 0
                }
                arrayEquals(a, Y) {
                    return Array.isArray(a) && Array.isArray(Y) && a.length === Y.length && a.every( (H, yA) => H === Y[yA])
                }
                buildFequencyText(a) {
                    let Ft = "";
                    if (this.arrayEquals(a, ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]))
                        return "Daily";
                    if (this.arrayEquals(a, ["MON", "TUE", "WED", "THU", "FRI"]))
                        return "Mo-Fr";
                    if (this.arrayEquals(a, ["SAT", "SUN"]))
                        return "Weekend";
                    const wt = a.map(Ge => {
                        switch (Ge) {
                        case "MON":
                            return "Mo";
                        case "TUE":
                            return "Tu";
                        case "WED":
                            return "We";
                        case "THU":
                            return "Th";
                        case "FRI":
                            return "Fr";
                        case "SAT":
                            return "Sa";
                        case "SUN":
                            return "Su";
                        default:
                            console.log("Default fired frequencyMap()")
                        }
                    }
                    )
                      , Qt = {
                        Su: "M",
                        M: "T",
                        T: "W",
                        W: "Th",
                        Th: "F",
                        F: "Sa",
                        Sa: "Su"
                    };
                    return wt.forEach( (Ge, Lr) => {
                        Ft += void 0 === wt[Lr + 1] ? `${Ge}` : Qt[Ge] === wt[Lr + 1] ? `${Ge}-` : `${Ge},`
                    }
                    ),
                    Ft
                }
                calcHeightDepartsAndArriveBox(a, Y) {
                    if ("svg" === a)
                        return 0 === Y.length ? 45 : 45 * Y.length + (10 * Y.length - 1)
                }
                calcYCordsDepartsAndArrivesBox(a, Y, H) {
                    const yA = {
                        rectangle: 0,
                        departureArrivalHeader: 14,
                        dpartureArrivalData: 32,
                        frequencyHeader: 15,
                        frequencyData: 33,
                        stops: 16,
                        tripLength: 34,
                        transportIcon: 15,
                        transportNumber: 20,
                        transportName: 33,
                        frequencyBorderY1: 7.5,
                        frequencyBorderY2: 36,
                        stopsLengthArrowY1: 22.5,
                        stopsLengthArrowY2: 22.5,
                        stopsLengthArrowHead: 20
                    };
                    return 0 === H ? "TRN" !== Y[H].transport.type && "HST" !== Y[H].transport.type && "transportIcon" === a ? yA[a] - 15 : yA[a] : "TRN" !== Y[H].transport.type && "HST" !== Y[H].transport.type && "transportIcon" === a ? yA[a] + 55 * H - 15 : yA[a] + 55 * H
                }
                adjustAvailableSpaceForShortWords(a) {
                    return a.length > 3 ? 52 : 47
                }
                compileTansportName(a, Y) {
                    const H = a.split(" ");
                    return 1 === H.length ? `<tspan x="${this.centerText(45, 5.5, H[0].length, 20)}" y="${Y}"> ${H[0]} </tspan>` : `<tspan x="${this.centerText(this.adjustAvailableSpaceForShortWords(H[0]), 5.5, H[0].length, 20)}" y="${Y - 5}"> ${H[0]} </tspan>\n             <tspan x="${this.centerText(this.adjustAvailableSpaceForShortWords(H[1]), 5.5, H[1].length, 20)}" y="${Y + 10 - 5}"> ${H[1]} </tspan>`
                }
                placeTransportNumber(a) {}
                buildDepartsAndArrivesBox(a) {
                    let Y = ""
                      , H = 45;
                    return a.forEach( (yA, Ft) => {
                        const wt = `${yA.transport.number}`.length;
                        H = this.calcHeightDepartsAndArriveBox("svg", a);
                        const Qt = this.compileTansportName(yA.transport.name, this.calcYCordsDepartsAndArrivesBox("transportName", a, Ft))
                          , Lr = yA.transport.name.split(" ").length > 1 ? -5 : 0
                          , kr = yA.transport.type
                          , Ur = "HST" === kr || "TRN" === kr ? `<g id="train-icon" transform="translate(8.000000, ${this.calcYCordsDepartsAndArrivesBox("transportIcon", a, Ft)})">\n            <path d="M13.3764571,14.2852343 L13.06624,1.73005714 L12.8700343,1.63526857 C12.8183314,1.61074286 11.82736,1.15072 9.44041143,0.936617143 L9.4424,0.475931429 L4.61282286,0.452068571 L4.61017143,0.912754286 C2.22189714,1.10365714 1.22628571,1.55307429 1.17458286,1.5776 L0.977714286,1.6704 L0.543542857,14.2216 L3.27053714,14.5848457 L2.16754286,16.0716343 L11.7332343,16.1186971 L10.6454857,14.6213029 L13.3764571,14.2852343 Z M1.67305143,2.14832 C2.204,1.96802286 3.83860571,1.52390857 7.02230857,1.53981714 C10.2073371,1.55572571 11.8386286,2.01641143 12.3649371,2.20134857 L12.6473143,13.6575086 L8.53958857,14.1645943 L5.37974857,14.1486857 L1.27666286,13.6011657 L1.67305143,2.14832 Z" id="Shape" fill="#002436" fill-rule="nonzero"></path>\n            <path d="M3.75773714,8.80340571 C2.87481143,8.79876571 2.15229714,9.52592 2.14832,10.4234286 C2.14434286,11.3209371 2.85890286,12.0553829 3.74182857,12.05936 C4.62475429,12.0633371 5.34726857,11.3368457 5.35124571,10.4393371 C5.35522286,9.54182857 4.64066286,8.80738286 3.75773714,8.80340571 Z M3.74514286,11.3474514 C3.25462857,11.3448 2.85757714,10.9325029 2.85956571,10.4267429 C2.86221714,9.92164571 3.26324571,9.51266286 3.75376,9.51465143 C4.24427429,9.51730286 4.64132571,9.9296 4.63933714,10.43536 C4.63668571,10.94112 4.23565714,11.3501029 3.74514286,11.3474514 Z" id="Shape" fill="#002436" fill-rule="nonzero"></path>\n            <path d="M10.2159543,8.83522286 C9.33302857,8.83058286 8.61051429,9.55773714 8.60653714,10.4552457 C8.60256,11.3527543 9.31712,12.0872 10.2000457,12.0911771 C11.0829714,12.0958171 11.8054857,11.3686629 11.8094629,10.4711543 C11.81344,9.57364571 11.09888,8.83986286 10.2159543,8.83522286 Z M10.20336,11.3792686 C9.71284571,11.3766171 9.31579429,10.96432 9.31778286,10.45856 C9.32043429,9.95346286 9.72146286,9.54448 10.2119771,9.54646857 C10.7024914,9.54912 11.0995429,9.96141714 11.0975543,10.4671771 C11.0949029,10.9729371 10.6938743,11.38192 10.20336,11.3792686 Z" id="Shape" fill="#002436" fill-rule="nonzero"></path>\n            <path d="M2.54934857,6.39458286 L2.93910857,6.35945143 C2.95899429,6.35812571 4.95750857,6.18048 6.99977143,6.19042286 C9.04203429,6.20036571 11.03856,6.39789714 11.0584457,6.39988571 L11.4475429,6.43899429 L11.4621257,3.50651429 L11.52576,3.41769143 L11.4309714,3.21220571 C11.3242514,2.98153143 11.17776,2.66601143 7.01700571,2.64546286 C2.85625143,2.62491429 2.70710857,2.93910857 2.5984,3.16845714 L2.50228571,3.40509714 L2.56393143,3.48 L2.54934857,6.39458286 Z M10.7396114,5.65616 C10.1032686,5.60246857 8.76827429,5.50436571 7.35904,5.48315429 L7.36964571,3.36134857 C9.65849143,3.38454857 10.4804343,3.50982857 10.7502171,3.57810286 L10.7396114,5.65616 Z M3.27517714,3.54098286 C3.54562286,3.47536 4.36889143,3.35869714 6.65773714,3.35803429 L6.64713143,5.47984 C5.23789714,5.48646857 3.90224,5.57197714 3.26523429,5.61904 L3.27517714,3.54098286 Z" id="Shape" fill="#002436" fill-rule="nonzero"></path>\n            <g id="Group"></g>\n            </g>` : `<g id="other-icon" transform="translate(5.000000, ${this.calcYCordsDepartsAndArrivesBox("transportIcon", a, Ft)})">\n            <path d="M25,22.1190151 L25,25.5253078 C25,25.6073872 24.9212598,25.6894666 24.8425197,25.7305061 L23.2677165,25.9767441 C23.1889763,25.9767441 23.1496063,25.9357046 23.1496063,25.8536252 C23.1889763,25.6894666 23.1889763,25.4842681 23.1889763,25.3201095 C23.1102363,24.4582763 22.4803149,23.7606019 21.6535433,23.6785225 C20.6299213,23.5554036 19.7637795,24.4172367 19.7637795,25.4432285 C19.7637795,25.6073872 19.8031496,25.8125855 19.8425197,25.9357046 C19.8425197,26.0177838 19.8031496,26.0588235 19.7637795,26.0588235 L9.88188977,26.0588235 C9.80314961,26.0588235 9.76377953,25.9767441 9.80314961,25.9357046 C9.88188977,25.6484269 9.92125985,25.3201095 9.84251969,24.991792 C9.68503938,24.253078 9.05511811,23.6785225 8.30708662,23.637483 C7.28346457,23.5554036 6.45669292,24.376197 6.45669292,25.4021888 C6.45669292,25.5663475 6.45669292,25.6894666 6.496063,25.8125855 C6.496063,25.8946649 6.45669292,25.9357046 6.37795276,25.9357046 L5.15748032,25.6484269 C5.07874016,25.6484269 5,25.5663475 5,25.4432285 L5,19.7797538 C5,19.3283174 5.35433071,19 5.7480315,19 L23.6614174,19 C24.015748,19 24.2913386,19.246238 24.4094488,19.5745554 L25,22.1190151 L25,22.1190151 Z M21.6339869,22.5294118 L23.6601306,22.5294118 C23.7581699,22.5294118 23.8235294,22.3986929 23.8235294,22.2679739 L23.496732,20.3507625 C23.496732,20.2636166 23.4313726,20.1764706 23.3333333,20.1764706 L21.6339869,20.1764706 C21.5359477,20.1764706 21.4705882,20.2636166 21.4705882,20.3943355 L21.4705882,22.3115469 C21.4705882,22.4422659 21.5359477,22.5294118 21.6339869,22.5294118 L21.6339869,22.5294118 Z M9.91421569,20.1764706 C9.78921569,20.1764706 9.70588235,20.2636166 9.70588235,20.3943355 L9.70588235,22.3115469 C9.70588235,22.4422659 9.78921569,22.5294118 9.91421569,22.5294118 L12.8308824,22.5294118 C12.9558824,22.5294118 13.0392157,22.4422659 13.0392157,22.3115469 L13.0392157,20.3943355 C12.997549,20.2636166 12.9142157,20.1764706 12.8308824,20.1764706 L9.91421569,20.1764706 Z M18.1495098,20.1764706 C18.0245098,20.1764706 17.9411765,20.2636166 17.9411765,20.3943355 L17.9411765,22.3115469 C17.9411765,22.4422659 18.0245098,22.5294118 18.1495098,22.5294118 L21.0661765,22.5294118 C21.1911764,22.5294118 21.2745098,22.4422659 21.2745098,22.3115469 L21.2745098,20.3943355 C21.2745098,20.2636166 21.1911764,20.1764706 21.0661765,20.1764706 L18.1495098,20.1764706 Z M6.38480392,20.1764706 C6.25980392,20.1764706 6.17647059,20.2636166 6.17647059,20.3943355 L6.17647059,22.3115469 C6.17647059,22.4422659 6.25980392,22.5294118 6.38480392,22.5294118 L9.30147059,22.5294118 C9.42647059,22.5294118 9.50980392,22.4422659 9.50980392,22.3115469 L9.50980392,20.3943355 C9.46813725,20.2636166 9.38480392,20.1764706 9.30147059,20.1764706 L6.38480392,20.1764706 Z M16.3602941,20.1764706 L13.4436275,20.1764706 C13.3186275,20.1764706 13.2352941,20.2636166 13.2352941,20.3943355 L13.2352941,22.3115469 C13.2352941,22.4422659 13.3186275,22.5294118 13.4436275,22.5294118 L16.3602941,22.5294118 C16.4852941,22.5294118 16.5686275,22.4422659 16.5686275,22.3115469 L16.5686275,20.3943355 C16.5686275,20.2636166 16.4852941,20.1764706 16.3602941,20.1764706 L16.3602941,20.1764706 Z M9.41176471,25.4705882 C9.41176471,24.8319328 8.87394958,24.2941176 8.23529411,24.2941176 C7.59663866,24.2941176 7.05882353,24.8319328 7.05882353,25.4705882 C7.05882353,26.1092437 7.59663866,26.6470588 8.23529411,26.6470588 C8.87394958,26.6470588 9.41176471,26.1092437 9.41176471,25.4705882 L9.41176471,25.4705882 Z M22.6470588,25.4705882 C22.6470588,24.8319328 22.1092437,24.2941176 21.4705882,24.2941176 C20.8319328,24.2941176 20.2941176,24.8319328 20.2941176,25.4705882 C20.2941176,26.1092437 20.8319328,26.6470588 21.4705882,26.6470588 C22.1092437,26.6470588 22.6470588,26.1092437 22.6470588,25.4705882 L22.6470588,25.4705882 Z" id="Shape" fill="#002648" fill-rule="nonzero"></path>\n            <g id="Group"></g>\n            </g>`
                          , _r = `\n            <title>Box</title>\n            <g id="final" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n                <g id="Group-14">\n                    <g id="AM-Components/Search-Results/Dotcom/D_2Col_Dollars-Copy-6">\n                        <g id="Search-Results-component1">\n                            <rect id="Rectangle" stroke="#D4D8D9" fill="#FFFFFF" fill-rule="nonzero" x="0" y="${this.calcYCordsDepartsAndArrivesBox("rectangle", a, Ft)}" width="267" height="45" rx="8"></rect>\n                            ${Ur}\n                            <text id="train-info" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" fill="#167FA6">\n                                <tspan x="${this.centerText(45, 5.5, wt, 20)}" y="${this.calcYCordsDepartsAndArrivesBox("transportNumber", a, Ft) + Lr}"> ${yA.transport.number} </tspan>\n                                ${Qt}\n                            </text>\n                            <text id="Departs" font-family="Helvetica" font-size="9" font-weight="normal" fill="#737575">\n                                <tspan x="64" y="${this.calcYCordsDepartsAndArrivesBox("departureArrivalHeader", a, Ft)}">DEPARTS</tspan>\n                            </text>\n                            <text id="11:00a" font-family="OpenSans-Light, Open Sans" font-size="16" font-weight="300" fill="#002436">\n                                <tspan x="64" y="${this.calcYCordsDepartsAndArrivesBox("dpartureArrivalData", a, Ft)}">${yA.departure.departureTime}</tspan>\n                                ${this.createPdfAmPmSpacing("departure", yA.departure.departureTime.length, {
                            details: yA,
                            index: Ft
                        })}\n                            </text>\n                           <text id="6-stops" font-family="OpenSans-SemiBoldItalic, Open Sans" font-size="9" font-style="italic" font-weight="500" fill="#002436">\n                                <tspan x="119" y="${this.calcYCordsDepartsAndArrivesBox("stops", a, Ft)}">${yA.stops.length - 2} stops</tspan>\n                            </text>\n                            <line x1="121.5" y1="${this.calcYCordsDepartsAndArrivesBox("stopsLengthArrowY1", a, Ft)}" x2="141.5" y2="${this.calcYCordsDepartsAndArrivesBox("stopsLengthArrowY2", a, Ft)}" id="Line-6" stroke="#002436" stroke-width="0.5" stroke-linecap="square"></line>\n                            <g id="Group-10" transform="translate(121.000000, ${this.calcYCordsDepartsAndArrivesBox("stopsLengthArrowHead", a, Ft)})" stroke="#002648" stroke-width="0.5">\n                                <path d="" id="Line"></path>\n                                <g id="Line-5" transform="translate(20.000000, 0.000000)" fill="#FFFFFF">\n                                    <path d="M0.25,0.424878615 L3.98521849,2.5 L0.25,4.57512138 L0.25,0.424878615 Z" id="Line"></path>\n                                </g>\n                            </g>\n                            <text id="2h-53m" font-family="OpenSans-Regular, Open Sans" font-size="9" font-weight="normal" fill="#002436">\n                                <tspan x="${yA.tripLength.length >= 9 ? 110 : 119}" y="${this.calcYCordsDepartsAndArrivesBox("tripLength", a, Ft)}">${yA.tripLength}</tspan>\n                            </text>\n                            <text id="Arrives" font-family="Helvetica" font-size="9" font-weight="normal" fill="#737575">\n                                <tspan x="158" y="${this.calcYCordsDepartsAndArrivesBox("departureArrivalHeader", a, Ft)}">ARRIVES</tspan>\n                            </text>\n                            <text id="1:53p" font-family="OpenSans-Light, Open Sans" font-size="16" font-weight="300" fill="#002436">\n                                <tspan x="157" y="${this.calcYCordsDepartsAndArrivesBox("dpartureArrivalData", a, Ft)}">${yA.arrival.arrivalTime}</tspan>\n                                ${this.createPdfAmPmSpacing("arrival", yA.arrival.arrivalTime.length, {
                            details: yA,
                            index: Ft
                        })}\n                            </text>\n                            <line x1="205.173634" y1="${this.calcYCordsDepartsAndArrivesBox("frequencyBorderY1", a, Ft)}" x2="205.173634" y2="${this.calcYCordsDepartsAndArrivesBox("frequencyBorderY2", a, Ft)}" id="Path" stroke="#D4D8D9" stroke-linecap="round"></line>\n                            <text id="Freq." font-family="Helvetica" font-size="9" font-weight="normal" fill="#737575">\n                                <tspan x="216" y="${this.calcYCordsDepartsAndArrivesBox("frequencyHeader", a, Ft)}">FREQ.</tspan>\n                            </text>\n                            <g id="Group-2" transform="translate(208.000000, 0)" fill="#167FA6" font-family="OpenSans-Regular, Open Sans" font-size="10" font-weight="normal">\n                                <text id="Th,-F,-Sa,-Su">\n                                    <tspan x="7" y="${this.calcYCordsDepartsAndArrivesBox("frequencyData", a, Ft)}">${this.buildFequencyText(yA.frequency)}</tspan>\n                                </text>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </g> `;
                        Y += _r
                    }
                    ),
                    `<svg width="268px" height="${H}px" viewBox="0 0 268 ${H}" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">${Y}</svg>`
                }
                buildServiceOfferings(a, Y) {
                    return `<svg width="279px" height="${Y}px" viewBox="0 0 279 ${Y}" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" overflow="auto">\n        <title>Group 24</title>\n        <defs>\n        <polygon id="path-1" points="8.12958333 20 0.277916667 20 0.277916667 0.00025 8.12958333 0.00025 8.12958333 20"></polygon>\n        <polygon id="path-3" points="1.12937726e-20 0.27175 1.12937726e-20 14.7450833 3.54891667 14.7450833 3.54891667 0.27175 0 0.27175"></polygon>\n        <polygon id="path-5" points="9.43316667 0 0 0 0 19.9996667 9.43316667 19.9996667 9.43316667 2.96059473e-15"></polygon>\n        </defs>\n        <g id="final" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Group-24">\n        <rect id="Rectangle" fill="#E1F5FD" x="0" y="0" width="279" height="${Y}" rx="3"></rect>\n        <text id="Service-Offerings" font-family="OpenSans-SemiBold, Open Sans" font-size="12" font-weight="500" letter-spacing="0.0857142857" fill="#002436">\n        <tspan x="9" y="21" font-weight="bold">Service Offerings</tspan>\n        </text>\n        ${a}\n        </g>\n        </g>\n        </svg>`
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)
                }
                }static{this.\u0275prov = A.jDH({
                    token: x,
                    factory: x.\u0275fac,
                    providedIn: "root"
                })
                }
            }
            return x
        }
        )();
        var t = mr(3366)
          , h = mr(13816)
          , d = mr(23400)
          , F = mr(74134)
          , G = mr(89417)
          , m = mr(4513)
          , v = mr(19493)
          , S = mr(25348)
          , P = mr(61870);
        const N = (x, ZA) => ({
            "px-md-2 px-lg-2 px-0": x,
            "mt-4": ZA
        })
          , M = x => ({
            "text-style-color": x
        });
        function T(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 19),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40), ".svg", A.B4B)
            }
        }
        function J(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 19),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.FCK("alt", "", null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40, " ", null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.type ? null : a.trainData.travelService.type.code, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/route_", A.bMT(1, 6, null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.type ? null : a.trainData.travelService.type.code), ".svg", A.B4B)
            }
        }
        function k(x, ZA) {
            if (1 & x && A.nrm(0, "img", 20),
            2 & x) {
                const a = A.XpG();
                A.Mz_("src", "", a.env.damAssetPath, "/icons/train-routes/route_train.svg", A.B4B)
            }
        }
        function BA(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 21),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.name), "-white.svg", A.B4B)
            }
        }
        function hA(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 19),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), ".svg", A.B4B)
            }
        }
        function tA(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 21),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), "-white.svg", A.B4B)
            }
        }
        function fA(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 19),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), ".svg", A.B4B)
            }
        }
        function dA(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 21),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), "-white.svg", A.B4B)
            }
        }
        function xA(x, ZA) {
            if (1 & x && (A.j41(0, "label", 22),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("ngClass", A.eq3(2, M, a.showDetails || a.selectedTrain)),
                A.R7$(),
                A.JRh(null == a.trainData || null == a.trainData.travelService ? null : a.trainData.travelService.number)
            }
        }
        function jA(x, ZA) {
            if (1 & x && (A.j41(0, "label", 23),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("hidden", a.mobile)("ngClass", A.eq3(3, M, a.showDetails || a.selectedTrain)),
                A.R7$(),
                A.JRh(null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40)
            }
        }
        function JA(x, ZA) {
            if (1 & x && (A.j41(0, "label", 24),
            A.nrm(1, "span", 25),
            A.EFF(2),
            A.nI1(3, "titlecase"),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("ngClass", A.eq3(4, M, a.showDetails || a.selectedTrain)),
                A.R7$(2),
                A.JRh(A.bMT(3, 2, a.trainStatus))
            }
        }
        function st(x, ZA) {
            if (1 & x && A.nrm(0, "img", 26),
            2 & x) {
                const a = A.XpG();
                A.FCK("src", "", a.env.damAssetPath, "/icons/", a.getArrowIconPath((null == a.trainData ? null : a.trainData.nightFlag) || (null == a.trainData.schedulesAndStops.schedule ? null : a.trainData.schedulesAndStops.schedule.nightFlag)), ".svg", A.B4B)
            }
        }
        function Tt(x, ZA) {
            if (1 & x && A.nrm(0, "img", 26),
            2 & x) {
                const a = A.XpG();
                A.FCK("src", "", a.env.damAssetPath, "/icons/", a.getArrowIconPath((null == a.trainData ? null : a.trainData.nightFlag) || (null == a.trainData.schedulesAndStops.schedule ? null : a.trainData.schedulesAndStops.schedule.nightFlag)), "-white.svg", A.B4B)
            }
        }
        function nA(x, ZA) {
            if (1 & x && (A.j41(0, "label", 27),
            A.EFF(1),
            A.nI1(2, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("ngClass", A.eq3(5, M, a.showDetails || a.selectedTrain)),
                A.R7$(),
                A.JRh(A.i5U(2, 2, a.endDate, "E, MMM d"))
            }
        }
        let NA = ( () => {
            class x {
                constructor(a, Y) {
                    this.ecomStorage = a,
                    this.scheduleResultsService = Y,
                    this.createActiveTrainInfo = new A.bkB,
                    this.env = o.c,
                    this.isMultiSegment = !1,
                    this.overNightFlag = !1,
                    this.showDetails = !1
                }
                ngOnInit() {
                    this.scheduleData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES)),
                    this.type = this.scheduleData.type,
                    this.activeTrain = [],
                    this.activeTrainInfo = [],
                    this.train[0] ? (this.trainData = this.train[0],
                    this.segments = this.getSegments(),
                    this.train.forEach(a => {
                        a.origin = a.travelService.origin,
                        a.origin.schedule = {},
                        a.origin.schedule.departureDateTime = a.schedulesAndStops.schedule.startDate,
                        a.destination = a.travelService.destination
                    }
                    ),
                    this.travelLegs = this.train) : (this.train.origin = this.train.travelService.origin,
                    this.train.origin.schedule = {},
                    this.train.origin.schedule.departureDateTime = this.train.schedulesAndStops.schedule.startDate,
                    this.train.destination = this.train.travelService.destination,
                    this.trainData = this.train,
                    this.travelLegs = [],
                    this.travelLegs.push(this.trainData)),
                    this.aemData = (0,
                    g.CU)(this.aemContent),
                    this.aemLabels = (0,
                    g.Q0)(this.aemContent),
                    this.startDate = this.trainData.schedulesAndStops.schedule.startDate,
                    this.endDate = this.trainData.schedulesAndStops.schedule.endDate,
                    this.frequency = this.getFrequency(this.trainData.schedulesAndStops.schedule.daysOfOperation),
                    this.checkOverNightFlag([this.train]),
                    this.duration = this.getTime(this.trainData.schedulesAndStops.schedule.elapsedTime),
                    (this.trainData.schedulesAndStops.schedule.status === c.D5.TrainStatusStatus.CANCELLED || this.trainData.schedulesAndStops.schedule.status === c.D5.TrainStatusStatus.PARTIALLY_CANCELLED) && (this.trainCanceled = !0,
                    this.trainStatus = c.D5.TrainStatusStatus.CANCELLED),
                    this.name = this.trainData.travelService.type.code !== c.D5.SearchResults.transType.BUS.type ? this.trainData.travelService.name.desc_26 : "Connecting Bus",
                    this.name.includes(" ") || (this.shortName = !0),
                    this.mobile = window.screen.width < 768,
                    this.isMultiSegment && this.mobile && (this.noOfSegment = this.aemLabels.noOfSegment.replace("%1", this.train.length))
                }
                ngOnChanges() {
                    if (this.activeTrainInfo = [],
                    this.train[0] ? (this.trainData = this.train[0],
                    this.segments = this.getSegments()) : this.trainData = this.train,
                    this.activeTrain) {
                        JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES));
                        const H = 1 === this.activeTrain.length ? "single-segment" : "multi-segment";
                        this.activeTrain.forEach( (Ft, wt) => {
                            const Qt = Ft.travelService.origin
                              , Ge = Ft.travelService.destination
                              , Lr = this.activeTrain[wt].travelService.RBD.map( (dn, Nn) => ({
                                serviceType: dn.serviceTypeName,
                                content: this.assignReservationContent(dn.serviceTypeName)
                            }))
                              , kr = this.activeTrain[wt].travelService.Amenity
                              , Ur = null != kr ? kr.map(dn => ({
                                amenityType: dn.name,
                                code: dn.code,
                                content: this.assignAmenityContent(dn.name)
                            })) : null
                              , _r = this.activeTrain[wt].schedulesAndStops.stops;
                            "single-segment" === H ? this.activeTrainInfo.push({
                                transport: {
                                    name: this.activeTrain[wt].travelService.name.desc_40,
                                    number: this.activeTrain[wt].travelService.number,
                                    type: this.activeTrain[wt].travelService.type.code
                                },
                                departure: {
                                    departureTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[0].timeInfo.departure, "time"),
                                    location: Qt.name,
                                    station: Qt.facility,
                                    code: Qt.code,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[0].timeInfo.departure, "amPm")
                                },
                                arrival: {
                                    arrivalTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[this.activeTrain[wt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "time"),
                                    location: Ge.name,
                                    station: Ge.facility,
                                    code: Ge.code,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[this.activeTrain[wt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "amPm")
                                },
                                frequency: [...this.activeTrain[wt].schedulesAndStops.schedule.daysOfOperation],
                                tripLength: this.getTripLength(this.activeTrain[wt].schedulesAndStops.schedule.elapsedTime),
                                stops: _r,
                                reservations: Lr,
                                amenities: Ur
                            }) : "multi-segment" === H && this.activeTrainInfo.push({
                                transport: {
                                    name: this.activeTrain[wt].travelService.name.desc_40,
                                    number: this.activeTrain[wt].travelService.number,
                                    type: this.activeTrain[wt].travelService.type.code
                                },
                                departure: {
                                    departureTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[0].timeInfo.departure, "time"),
                                    location: _r[0].station.name,
                                    station: _r[0].station.facility,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[0].timeInfo.departure, "amPm"),
                                    code: Ft.schedulesAndStops.schedule.origin.code
                                },
                                arrival: {
                                    arrivalTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[this.activeTrain[wt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "time"),
                                    location: _r[_r.length - 1].station.name,
                                    station: _r[_r.length - 1].station.facility,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[wt].schedulesAndStops.stops[this.activeTrain[wt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "amPm"),
                                    code: Ft.schedulesAndStops.schedule.destination.code
                                },
                                frequency: [...this.activeTrain[wt].schedulesAndStops.schedule.daysOfOperation],
                                tripLength: this.getTripLength(this.activeTrain[wt].schedulesAndStops.schedule.elapsedTime),
                                stops: _r,
                                reservations: Lr,
                                amenities: Ur
                            })
                        }
                        ),
                        this.createActiveTrainInfo.emit(this.activeTrainInfo)
                    }
                }
                trimZeros(a) {
                    return 0 == +a ? "" : a.replace(/^0+/, "")
                }
                getTripLength(a) {
                    return a ? `${0 == +this.trimZeros(a.slice(1, 3)) ? "" : `${this.trimZeros(a.slice(1, 3))}d`} ${0 == +this.trimZeros(a.slice(5, 7)) ? "" : `${this.trimZeros(a.slice(5, 7))}h`} ${0 == +this.trimZeros(a.slice(8, 10)) ? "" : `${this.trimZeros(a.slice(8, 10))}m`}` : ""
                }
                assignReservationContent(a) {
                    if (this.aemLabels) {
                        const Y = this.aemLabels.reservationsText;
                        switch (a) {
                        case "Pet":
                            return Y.pet;
                        case "Bicycle":
                            return Y.bicycle;
                        case "Coach":
                            return Y.coach;
                        case "Business":
                            return Y.business;
                        case "Bedroom":
                            return Y.bedroom;
                        case "Roomette":
                            return Y.roomette;
                        case "First":
                            return Y.first;
                        case "Family":
                            return Y.family;
                        default:
                            return
                        }
                    }
                }
                assignAmenityContent(a) {
                    if (this.aemLabels) {
                        const Y = this.aemLabels.amenitiesText;
                        switch (a) {
                        case "WiFi":
                            return Y.wifi;
                        case "Quiet Car":
                            return Y.quietCar;
                        case "Snack Car":
                            return Y.snackCar;
                        case "Checked Baggage":
                            return Y.checkedBaggage;
                        case "Flexible Dining":
                            return Y.flexibleDining;
                        case "Seat Assignment":
                            return "Seat Assignment";
                        default:
                            return
                        }
                    }
                }
                onResize(a) {
                    this.mobile = window.innerWidth < 768,
                    this.isMultiSegment && this.mobile && (this.noOfSegment = this.aemLabels.noOfSegment.replace("%1", this.train.length))
                }
                checkOverNightFlag(a) {
                    if (a) {
                        let Y;
                        "Station" === this.type ? Y = a.some(H => !0 === H.nightFlag) : "Route" === this.type && (Y = a.some(H => !0 === H.schedulesAndStops.schedule.nightFlag)),
                        this.overNightFlag = Y
                    }
                    return !1
                }
                getTransType(a) {
                    this.isMixed = !1,
                    a.forEach(Y => {
                        Y.travelService.type.code !== c.D5.SearchResults.transType.TRN.type && (this.isMixed = !0)
                    }
                    ),
                    this.isMixed ? (this.name = this.aemLabels.mixedCombinationText,
                    this.icon = this.getIcon(c.D5.SearchResults.transType.MIXED.type)) : (this.name = this.aemLabels.multipleTrainsText,
                    this.icon = this.getIcon(c.D5.SearchResults.transType.TRAINS.type))
                }
                getIcon(a) {
                    let Y;
                    const H = c.D5.SearchResults.transType[a];
                    return Y = a !== c.D5.SearchResults.transType.TRAIN.type && H ? H.icon : this.train[0].travelService.name.desc_40,
                    Y
                }
                showDetailsDropdown() {
                    this.showDetails = !this.showDetails
                }
                getSegment(a) {
                    return this.aemLabels.segmentText.replace("%1", a + 1)
                }
                getTime(a) {
                    return s.LD.getDuration(a)
                }
                getSegments() {
                    let a = 0
                      , Y = [];
                    return this.train.forEach( (H, yA) => {
                        Y.push(H),
                        Y[a].hasLayover = this.train[yA] && this.train[yA + 1] && !this.train[yA + 1].IsSelfTransfer || !1,
                        Y[a].IsSelfTransfer = this.train[yA] && this.train[yA + 1] && this.train[yA + 1].IsSelfTransfer || !1,
                        Y[a].layover = Y[a].hasLayover ? s.LD.getLayover(this.train[yA].schedulesAndStops.schedule.endDate, this.train[yA + 1].schedulesAndStops.schedule.startDate) + " " : "",
                        a++
                    }
                    ),
                    Y
                }
                getTransferTime(a) {
                    return this.segments[a].layover
                }
                getArrowIconPath(a) {
                    return a || this.isMultiSegment && this.overNightFlag ? "overnight-icon" : "travel-arrow"
                }
                isOverNightTrain(a) {
                    return !!(a || this.isMultiSegment && this.overNightFlag)
                }
                arrayEquals(a, Y) {
                    return Array.isArray(a) && Array.isArray(Y) && a.length === Y.length && a.every( (H, yA) => H === Y[yA])
                }
                getFrequency(a) {
                    const Y = ["MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"];
                    a.sort( (Ge, Lr) => Y.indexOf(Ge) - Y.indexOf(Lr));
                    const H = (new Map).set("SUN", {
                        abv: "Su",
                        order: 1
                    }).set("MON", {
                        abv: "Mo",
                        order: 2
                    }).set("TUE", {
                        abv: "Tu",
                        order: 3
                    }).set("WED", {
                        abv: "We",
                        order: 4
                    }).set("THU", {
                        abv: "Th",
                        order: 5
                    }).set("FRI", {
                        abv: "Fr",
                        order: 6
                    }).set("SAT", {
                        abv: "Sa",
                        order: 7
                    });
                    let Ft, yA = "";
                    return 7 === a.length ? "Daily" : this.arrayEquals(a, ["MON", "TUE", "WED", "THU", "FRI"]) ? "M-F" : this.arrayEquals(a, ["SAT", "SUN"]) ? "Weekend" : (a.forEach( (Ge, Lr) => {
                        Ft && H.get(Ge).order === Ft + 1 ? (Lr !== a.length - 1 && H.get(Ge).order + 1 === H.get(a[Lr + 1]).order ? yA += "-" : yA += H.get(Ge).abv,
                        Ft = H.get(Ge).order) : (yA += H.get(Ge).abv,
                        Ft = H.get(Ge).order)
                    }
                    ),
                    yA.replace(/(-)+/g, "-"))
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(i.x),A.rXU(u))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-schedule-trip-details-multisegment"]],
                    hostBindings: function(Y, H) {
                        1 & Y && A.bIt("resize", function(Ft) {
                            return H.onResize(Ft)
                        }, !1, A.tSv)
                    },
                    inputs: {
                        train: "train",
                        selectedTrain: "selectedTrain",
                        aemContent: [0, "content", "aemContent"],
                        activeTrain: "activeTrain",
                        transferTimes: "transferTimes",
                        activeSelectedTrain: "activeSelectedTrain"
                    },
                    outputs: {
                        createActiveTrainInfo: "createActiveTrainInfo"
                    },
                    features: [A.OA$],
                    decls: 43,
                    vars: 62,
                    consts: [["data-html2canvas-ignore", "", 1, "row", "list-box-style", "center-row"], [1, "w-47"], ["class", "train-icon-style", 3, "alt", "src", 4, "ngIf"], ["class", "train-icon-style", "alt", "Schedule Train Icon", 3, "src", 4, "ngIf"], ["class", "train-icon-style-white", 3, "alt", "src", 4, "ngIf"], [1, "number-name", "mt-2", "col-1", "col-md-2", "p-0", 3, "ngClass"], ["class", "w-75", 3, "ngClass", 4, "ngIf"], ["class", "name-style", 3, "hidden", "ngClass", 4, "ngIf"], [1, "box-size", "col-2", "pl-3", "pl-lg-2", "pr-0", "ml-4"], [1, "depart-style", 3, "ngClass"], [1, "time", "mt-0", "pt-1", "d-flex", "align-items-baseline"], [1, "time-style", 3, "ngClass"], [1, "time-period", 3, "ngClass"], ["class", "canceled-status", 3, "ngClass", 4, "ngIf"], [1, "col-2", "pr-0", "pl-4", "text-center"], [1, "duration-style", 3, "ngClass"], ["alt", "Arrow Icon", 3, "src", 4, "ngIf"], [1, "box-size", "col-2", "pl-md-3", "pl-lg-4"], ["class", "arrival-date", 3, "ngClass", 4, "ngIf"], [1, "train-icon-style", 3, "alt", "src"], ["alt", "Schedule Train Icon", 1, "train-icon-style", 3, "src"], [1, "train-icon-style-white", 3, "alt", "src"], [1, "w-75", 3, "ngClass"], [1, "name-style", 3, "hidden", "ngClass"], [1, "canceled-status", 3, "ngClass"], [1, "circle-icon"], ["alt", "Arrow Icon", 3, "src"], [1, "arrival-date", 3, "ngClass"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div")(1, "div", 0)(2, "div", 1),
                        A.DNE(3, T, 2, 7, "img", 2)(4, J, 2, 8, "img", 2)(5, k, 1, 2, "img", 3)(6, BA, 2, 7, "img", 4)(7, hA, 2, 7, "img", 2)(8, tA, 2, 7, "img", 4)(9, fA, 2, 7, "img", 2)(10, dA, 2, 7, "img", 4),
                        A.k0s(),
                        A.j41(11, "div", 5),
                        A.DNE(12, xA, 2, 4, "label", 6)(13, jA, 2, 5, "label", 7),
                        A.k0s(),
                        A.j41(14, "div", 8)(15, "label", 9),
                        A.EFF(16),
                        A.k0s(),
                        A.j41(17, "div", 10)(18, "span", 11),
                        A.EFF(19),
                        A.nI1(20, "date"),
                        A.k0s(),
                        A.j41(21, "span", 12),
                        A.EFF(22),
                        A.nI1(23, "date"),
                        A.k0s()(),
                        A.DNE(24, JA, 4, 6, "label", 13),
                        A.k0s(),
                        A.j41(25, "div", 14)(26, "label", 15),
                        A.EFF(27),
                        A.k0s(),
                        A.DNE(28, st, 1, 3, "img", 16)(29, Tt, 1, 3, "img", 16),
                        A.j41(30, "label", 15),
                        A.EFF(31),
                        A.k0s()(),
                        A.j41(32, "div", 17)(33, "label", 9),
                        A.EFF(34),
                        A.k0s(),
                        A.j41(35, "div", 10)(36, "span", 11),
                        A.EFF(37),
                        A.nI1(38, "date"),
                        A.k0s(),
                        A.j41(39, "span", 12),
                        A.EFF(40),
                        A.nI1(41, "date"),
                        A.k0s()(),
                        A.DNE(42, nA, 3, 7, "label", 18),
                        A.k0s()()()),
                        2 & Y && (A.R7$(3),
                        A.Y8G("ngIf", !H.isMultiSegment && !H.selectedTrain && (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40) && "Amtrak Thruway Connecting Service" !== (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment && !H.selectedTrain && "Amtrak Thruway Connecting Service" === (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment && !H.selectedTrain && null == (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment && H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMixed && H.isMultiSegment && !H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMixed && H.isMultiSegment && H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMixed && H.isMultiSegment && !H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMixed && H.isMultiSegment && H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngClass", A.l_i(43, N, H.shortName, H.mobile)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(46, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(H.aemLabels.departText),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(48, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(A.i5U(20, 31, H.startDate, "h:mm")),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(50, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(A.i5U(23, 34, H.startDate, "aaaaa")),
                        A.R7$(2),
                        A.Y8G("ngIf", H.trainCanceled && "Station" === H.type),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(52, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.SpI(" ", H.frequency, " "),
                        A.R7$(),
                        A.Y8G("ngIf", !H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngClass", A.eq3(54, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(H.duration),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(56, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(H.aemLabels.arriveText),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(58, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.SpI(" ", A.i5U(38, 37, H.endDate, "h:mm"), " "),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(60, M, H.showDetails || H.selectedTrain)),
                        A.R7$(),
                        A.SpI(" ", A.i5U(41, 40, H.endDate, "aaaaa"), " "),
                        A.R7$(2),
                        A.Y8G("ngIf", H.isOverNightTrain(null == H.trainData ? null : H.trainData.nightFlag)))
                    },
                    dependencies: [Jr.YU, Jr.bT, Jr.PV, Jr.vh, P.d],
                    styles: ['@charset "UTF-8";.list-box-style[_ngcontent-%COMP%]{box-sizing:border-box;min-height:70px;width:340px;border:1px solid #d4d8d9;border-radius:8px;background-color:#fff;padding-top:10px}.number-name[_ngcontent-%COMP%]{color:#167fa6!important;font-size:12px;line-height:17px;text-align:center}.mt-8[_ngcontent-%COMP%]{margin-top:8px}.depart-style[_ngcontent-%COMP%]{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}.arrival-date[_ngcontent-%COMP%]{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}.time-style[_ngcontent-%COMP%]{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}.time-period[_ngcontent-%COMP%]{color:#002436;font-size:14px;font-weight:300;line-height:19px}.box-size[_ngcontent-%COMP%]{height:33px;width:56px}.w-47[_ngcontent-%COMP%]{width:47px}.w-63[_ngcontent-%COMP%]{width:63px}.w-60[_ngcontent-%COMP%]{max-width:60px}.toggle-arrow[_ngcontent-%COMP%]{content:"";border:solid #002436;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.toggle-white-arrow[_ngcontent-%COMP%]{content:"";border:solid #fff;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-white-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-white-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.button-style[_ngcontent-%COMP%]{border:none;background-color:transparent;outline:none!important}.change-background[_ngcontent-%COMP%]{background-color:#00537e;border-radius:8px 8px 0 0;border-bottom:0px}.dropdown-box[_ngcontent-%COMP%]{box-sizing:border-box;height:102%;width:340px;margin-left:-5px;border:1px solid #d4d8d9;background-color:#fff;border-radius:0 0 8px 8px;border-top:0px}.duration-style[_ngcontent-%COMP%]{height:14px;width:50px;color:#002436;font-size:10px;line-height:14px}@media only screen and (max-width: 600px){.duration-style[_ngcontent-%COMP%]{max-width:50px;word-wrap:break-word}}  .segment .list-box-style{width:310px;min-height:65px;height:auto;padding-top:4px;margin-top:10px}  .segment .name-style{margin-top:5px;margin-bottom:5px}  .segment .number-name{min-height:26px;width:35px;font-size:10px;line-height:1rem;height:auto}  .segment .arrival-date{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}  .segment .time-style{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}  .segment .time-period{color:#002436;font-size:12px;font-weight:300;line-height:19px}  .segment .box-size{height:33px;width:56px}.pl-20[_ngcontent-%COMP%]{padding-left:20px}.pl-30[_ngcontent-%COMP%]{padding-left:30px}.segment-style[_ngcontent-%COMP%]{height:17px;width:186px;color:#00537e;font-size:12px;line-height:17px}.separator[_ngcontent-%COMP%]{border-right:1px solid #00537e;width:64px}.img-style[_ngcontent-%COMP%]{height:7px;width:20px}.img-box[_ngcontent-%COMP%]{width:30px;padding-left:5px;line-height:1.25}.text-style-color[_ngcontent-%COMP%]{color:#fff!important}.train-icon-style[_ngcontent-%COMP%], .train-icon-style-white[_ngcontent-%COMP%]{height:27px;width:27px;margin-top:10px;margin-left:10px}.transfer[_ngcontent-%COMP%]{position:relative;margin-left:22px;border-left:3px dashed #ff9933;padding:10px 0;top:-5px}.transfer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:27px;color:#f93;margin-left:-15px;background-color:#fff;vertical-align:baseline}.transfer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:2px 4px;color:#002436;font-size:10px;font-weight:300}.change-background-color[_ngcontent-%COMP%]{background-color:#00537e}.border-white-style[_ngcontent-%COMP%]{border:solid #fff}.w-114[_ngcontent-%COMP%]{width:114%}.circle-icon[_ngcontent-%COMP%]{border-radius:8px;height:10px;width:10px;display:inline-flex;margin-right:5px;background-color:#d52b1e}.canceled-status[_ngcontent-%COMP%]{height:17px;width:114px;color:#002436;font-size:10px;line-height:17px}  .details .trip-details .am-dropdown-btn{background-color:#00537e!important}  .details .trip-details .am-dropdown{background-color:#00537e!important}  .details .trip-details .dropdown-toggle{color:#fff!important}@media (min-width: 768px){.list-box-style[_ngcontent-%COMP%]{width:357px;padding-top:10px}.depart-style[_ngcontent-%COMP%]{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}.arrival-date[_ngcontent-%COMP%]{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}.time-style[_ngcontent-%COMP%]{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}.time-period[_ngcontent-%COMP%]{color:#002436;font-size:12px;font-weight:300;line-height:19px}.box-size[_ngcontent-%COMP%]{height:33px;width:56px}.w-47[_ngcontent-%COMP%]{width:47px}.w-63[_ngcontent-%COMP%]{width:63px}.w-60[_ngcontent-%COMP%]{max-width:60px}.toggle-arrow[_ngcontent-%COMP%]{content:"";border:solid #002436;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.toggle-white-arrow[_ngcontent-%COMP%]{content:"";border:solid #fff;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-white-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-white-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.button-style[_ngcontent-%COMP%]{border:none;background-color:transparent;outline:none!important}.change-background[_ngcontent-%COMP%]{background-color:#00537e;border-radius:8px 8px 0 0;border-bottom:0px}.dropdown-box[_ngcontent-%COMP%]{box-sizing:border-box;height:102%;width:357px;border:1px solid #d4d8d9;background-color:#fff;border-radius:0 0 8px 8px;border-top:0px}.duration-style[_ngcontent-%COMP%]{height:14px;width:50px;color:#002436;font-size:10px;line-height:14px}  .segment .list-box-style{width:324px;padding-top:4px;margin-top:10px}  .segment .depart-style{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}  .segment .time-style{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}  .segment .time-period{color:#002436;font-size:12px;font-weight:300;line-height:19px}  .segment .box-size{height:33px;width:56px}.pl-65[_ngcontent-%COMP%]{padding-left:35px}.segment-style[_ngcontent-%COMP%]{height:17px;width:186px;color:#00537e;font-size:12px;line-height:17px}.separator[_ngcontent-%COMP%]{border-right:1px solid #00537e;width:64px}.img-style[_ngcontent-%COMP%]{height:7px;width:20px}.img-box[_ngcontent-%COMP%]{width:30px;padding-left:5px;line-height:1.25}.text-style-color[_ngcontent-%COMP%]{color:#fff!important}.border-white-style[_ngcontent-%COMP%]{border:solid #fff}.canceled-status[_ngcontent-%COMP%]{height:17px;width:114px;color:#002436;font-size:10px;line-height:17px}  .details .trip-details .am-dropdown-btn{background-color:#00537e!important}  .details .trip-details .am-dropdown{background-color:#00537e!important}  .details .trip-details .dropdown-toggle{color:#fff!important}}@media (min-width: 992px){.list-box-style[_ngcontent-%COMP%]{width:462px}.depart-style[_ngcontent-%COMP%]{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}.arrival-date[_ngcontent-%COMP%]{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}.time-style[_ngcontent-%COMP%]{color:#002436!important;font-size:24px;font-weight:300;line-height:19px}.time-period[_ngcontent-%COMP%]{color:#002436;font-size:14px;font-weight:300;line-height:19px}.box-size[_ngcontent-%COMP%]{height:33px;width:56px}.w-47[_ngcontent-%COMP%]{width:47px}.w-63[_ngcontent-%COMP%]{width:63px}.w-60[_ngcontent-%COMP%]{max-width:60px}.toggle-arrow[_ngcontent-%COMP%]{content:"";border:solid #002436;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.row[_ngcontent-%COMP%]{margin-left:-5px!important}.toggle-white-arrow[_ngcontent-%COMP%]{content:"";border:solid #fff;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-white-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-white-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.button-style[_ngcontent-%COMP%]{border:none;background-color:transparent;outline:none!important}.change-background[_ngcontent-%COMP%]{background-color:#00537e;border-radius:8px 8px 0 0;border-bottom:0px}.dropdown-box[_ngcontent-%COMP%]{box-sizing:border-box;height:102%;width:462px;border:1px solid #d4d8d9;background-color:#fff;border-radius:0 0 8px 8px;border-top:0px}.duration-style[_ngcontent-%COMP%]{height:14px;width:50px;color:#002436;font-size:10px;line-height:14px}  .segment .list-box-style{width:399px;min-height:65px;padding-top:4px;margin-top:10px}  .segment .depart-style{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}  .segment .time-style{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}  .segment .time-period{color:#002436;font-size:12px;font-weight:300;line-height:19px}  .segment .box-size{height:33px;width:56px}.pl-65[_ngcontent-%COMP%]{padding-left:65px}.segment-style[_ngcontent-%COMP%]{height:17px;width:186px;color:#00537e;font-size:12px;line-height:17px}.separator[_ngcontent-%COMP%]{border-right:1px solid #00537e;width:64px}.img-style[_ngcontent-%COMP%]{height:7px;width:20px}.img-box[_ngcontent-%COMP%]{width:30px;padding-left:5px;line-height:1.25}.text-style-color[_ngcontent-%COMP%]{color:#fff!important}.border-white-style[_ngcontent-%COMP%]{border:solid #fff}.canceled-status[_ngcontent-%COMP%]{height:17px;width:114px;color:#002436;font-size:12px;line-height:17px}  .details .trip-details .am-dropdown-btn{background-color:#00537e!important}  .details .trip-details .am-dropdown{background-color:#00537e!important}  .details .trip-details .dropdown-toggle{color:#fff!important}}@media (min-width: 0px) and (max-width: 991px){.center-row[_ngcontent-%COMP%]{margin:0 10px 0 -5px!important}}']
                })
                }
            }
            return x
        }
        )();
        var MA = mr(97586)
          , wA = mr(45286)
          , zA = mr(61826)
          , at = mr(2110)
          , Et = mr(82643)
          , sA = mr(77235)
          , V = mr(67376)
          , QA = mr.n(V)
          , DA = mr(72847)
          , HA = mr(7744)
          , it = mr(93077);
        let YA = ( () => {
            class x {
                constructor() {}
                ngOnInit() {}
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-pdf-header"]],
                    inputs: {
                        aemLabels: "aemLabels",
                        toAndFromCodes: "toAndFromCodes",
                        startDate: "startDate"
                    },
                    decls: 8,
                    vars: 5,
                    consts: [["src", "", "alt", "Amtrak Logo"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div")(1, "div"),
                        A.nrm(2, "img", 0),
                        A.j41(3, "p"),
                        A.EFF(4),
                        A.nI1(5, "date"),
                        A.k0s()(),
                        A.j41(6, "div"),
                        A.EFF(7),
                        A.k0s()()),
                        2 & Y && (A.R7$(4),
                        A.JRh(A.i5U(5, 2, H.startDate, "E, MMM d")),
                        A.R7$(3),
                        A.SpI(" ", H.toAndFromCodes, " "))
                    },
                    dependencies: [Jr.vh]
                })
                }
            }
            return x
        }
        )()
          , GA = ( () => {
            class x {
                constructor() {}
                ngOnInit() {}
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-pdf-footer"]],
                    inputs: {
                        aemLabels: "aemLabels"
                    },
                    decls: 5,
                    vars: 1,
                    consts: [[1, "d-flex", "justify-content-center", "align-items-center"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div", 0)(1, "div"),
                        A.EFF(2),
                        A.k0s(),
                        A.j41(3, "div"),
                        A.EFF(4, "Page 1 of 2"),
                        A.k0s()()),
                        2 & Y && (A.R7$(2),
                        A.SpI(" ", H.aemLabels.pdfFooterText, " "))
                    }
                })
                }
            }
            return x
        }
        )()
          , XA = ( () => {
            class x {
                constructor() {}
                ngOnInit() {}
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-pdf"]],
                    inputs: {
                        aemLabels: "aemLabels",
                        pdfType: "pdfType",
                        toAndFromCodes: "toAndFromCodes",
                        footerPages: "footerPages",
                        startDate: "startDate"
                    },
                    decls: 6,
                    vars: 5,
                    consts: [[3, "aemLabels", "startDate", "toAndFromCodes"], [3, "aemLabels"]],
                    template: function(Y, H) {
                        1 & Y && (A.nrm(0, "app-pdf-header", 0),
                        A.j41(1, "p"),
                        A.EFF(2),
                        A.k0s(),
                        A.j41(3, "p"),
                        A.EFF(4, "table location"),
                        A.k0s(),
                        A.nrm(5, "app-pdf-footer", 1)),
                        2 & Y && (A.Y8G("aemLabels", H.aemLabels)("startDate", H.startDate)("toAndFromCodes", H.toAndFromCodes),
                        A.R7$(2),
                        A.SpI("pdfType test ", H.pdfType, ""),
                        A.R7$(3),
                        A.Y8G("aemLabels", H.aemLabels))
                    },
                    dependencies: [YA, GA]
                })
                }
            }
            return x
        }
        )();
        const ct = ["modalBody"]
          , mt = ["allPdf"]
          , OA = ["selectedPdf"]
          , Ut = (x, ZA, a) => ({
            segments: x,
            segment: ZA,
            i: a
        });
        function we(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.journeyTripDetailsLabel)
            }
        }
        function pe(x, ZA) {
            if (1 & x && A.nrm(0, "img", 17),
            2 & x) {
                const a = A.XpG(2);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/select_blue.svg", A.B4B),
                A.FS9("alt", a.train ? (null == a.aemLabels ? null : a.aemLabels.ariaLabelDetailsDropDown) + a.trainName + " " + a.trainNumber : null == a.aemLabels ? null : a.aemLabels.ariaLabelDetailsDropDown)
            }
        }
        function ve(x, ZA) {
            if (1 & x && A.nrm(0, "img", 18),
            2 & x) {
                const a = A.XpG(2);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/print-icon.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelPrintDropdown)
            }
        }
        function Gt(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "button", 13),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG();
                    return A.Njj(H.getPopoverInfo())
                }),
                A.DNE(1, we, 2, 1, "span", 14)(2, pe, 1, 3, "img", 15)(3, ve, 1, 3, "img", 16),
                A.k0s()
            }
            if (2 & x) {
                const a = A.XpG();
                A.R7$(),
                A.Y8G("ngIf", !a.isPrint),
                A.R7$(),
                A.Y8G("ngIf", !a.isPrint),
                A.R7$(),
                A.Y8G("ngIf", a.isPrint)
            }
        }
        function Ee(x, ZA) {
            if (1 & x && (A.j41(0, "h4", 26),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.journeyTripDetailsLabel, " ")
            }
        }
        function ot(x, ZA) {
            if (1 & x && (A.j41(0, "label", 27),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.scheduleOptionsText)
            }
        }
        function Ct(x, ZA) {
            if (1 & x && A.nrm(0, "img", 17),
            2 & x) {
                const a = A.XpG(2);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/select_blue.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelDetailsDropDown)
            }
        }
        function Be(x, ZA) {
            if (1 & x && A.nrm(0, "img", 18),
            2 & x) {
                const a = A.XpG(2);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/print-icon.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelDetailsDropDown)
            }
        }
        function ee(x, ZA) {
            1 & x && A.eu8(0)
        }
        function Ze(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function sr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function nt(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 41),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, Ze, 2, 1, "span", 14)(7, sr, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/connecting-bus.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function SA(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.Lme(" ", a.travelService.number, " ", Y.getTrainName(a.travelService), " ")
            }
        }
        function K(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function iA(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function IA(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.j41(3, "div", 43),
            A.EFF(4),
            A.DNE(5, K, 2, 1, "span", 14)(6, iA, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.SpI(" ", Y.getTrainName(a.travelService), " "),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber && "Self Transfer" !== a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function KA(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, SA, 3, 4, "span", 14)(2, IA, 7, 7, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2).segment;
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierName),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierName)
            }
        }
        function CA(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function pt(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function Fe(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 45),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, CA, 2, 1, "span", 14)(7, pt, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/route_ferry.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function oA(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, nt, 8, 7, "span", 14)(2, KA, 3, 2, "span", 14)(3, Fe, 8, 7, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG().segment;
                A.R7$(),
                A.Y8G("ngIf", "BUS" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "TRAIN" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "LCH" === a.travelService.type)
            }
        }
        function Wt(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 47),
            A.j41(2, "b"),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "span"),
            A.EFF(5),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/transfer-self.svg", A.B4B),
                A.R7$(2),
                A.SpI(" ", a.travelService.name, " "),
                A.R7$(2),
                A.Lme(" ", "|", " ", Y.getTime(a.elapsedTime), " ")
            }
        }
        function se(x, ZA) {
            if (1 & x && (A.j41(0, "span")(1, "b"),
            A.EFF(2),
            A.k0s(),
            A.j41(3, "span"),
            A.EFF(4),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(2),
                A.LHq("", null == Y.aemLabels ? null : Y.aemLabels.journeyLegSegmentText, " ", a.segmentNumber, " ", null == Y.aemLabels ? null : Y.aemLabels.ofText, " ", Y.len, ""),
                A.R7$(2),
                A.Lme(" ", "|", " ", Y.getTime(a.elapsedTime), " ")
            }
        }
        function WA(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function Ot(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function re(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 41),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, WA, 2, 1, "span", 14)(7, Ot, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/connecting-bus.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function yr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.Lme(" ", a.travelService.number, " ", Y.getTrainName(a.travelService), " ")
            }
        }
        function gr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.SpI(" ", Y.getTrainName(a.travelService), "")
            }
        }
        function Er(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(5).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function Pr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(5).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function Hi(x, ZA) {
            if (1 & x && (A.j41(0, "div", 49),
            A.EFF(1),
            A.DNE(2, Er, 2, 1, "span", 14)(3, Pr, 2, 1, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function fn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, gr, 3, 3, "span", 14)(2, Hi, 4, 4, "div", 48),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.Y8G("ngIf", "Self Transfer" !== a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", "Self Transfer" !== a.travelService.name)
            }
        }
        function cn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, yr, 3, 4, "span", 14)(2, fn, 3, 2, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2).segment;
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierName),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierName)
            }
        }
        function lr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function Mr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function Wr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 45),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, lr, 2, 1, "span", 14)(7, Mr, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/route_ferry.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function In(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function ia(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function hn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 50),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, In, 2, 1, "span", 14)(7, ia, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/route_taxi.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function xi(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, Wt, 6, 5, "span", 14)(2, se, 5, 6, "span", 14),
            A.nrm(3, "br"),
            A.j41(4, "div", 46),
            A.DNE(5, re, 8, 7, "span", 14)(6, cn, 3, 2, "span", 14)(7, Wr, 8, 7, "span", 14)(8, hn, 8, 7, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG().segment;
                A.R7$(),
                A.Y8G("ngIf", "Self Transfer" === a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", "Self Transfer" !== a.travelService.name),
                A.R7$(3),
                A.Y8G("ngIf", "BUS" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "TRAIN" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "LCH" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "LMO" === a.travelService.type)
            }
        }
        function mi(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "span")(1, "button", 51),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG().i
                      , yA = A.XpG(5);
                    return A.Njj(yA.showSegmentDetailsDropdown(H))
                }),
                A.nrm(2, "span", 52),
                A.k0s()()
            }
            if (2 & x) {
                const a = A.XpG().segment;
                A.R7$(2),
                A.Y8G("ngClass", a.isCollapsed ? "down toggle-arrow" : "up toggle-arrow")
            }
        }
        function Oi(x, ZA) {
            if (1 & x && (A.j41(0, "li", 59),
            A.nrm(1, "popup-tooltip", 60),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(8);
                A.R7$(),
                A.Y8G("modalTitle", a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription)("text", a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription)("content", Y.getAmenityUrl(a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription))
            }
        }
        function Ci(x, ZA) {
            if (1 & x && (A.j41(0, "div", 55)(1, "p", 56),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "hr"),
            A.j41(4, "ul", 57),
            A.DNE(5, Oi, 2, 3, "li", 58),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels ? null : Y.aemLabels.journeyLegAccomodations, " "),
                A.R7$(3),
                A.Y8G("ngForOf", a.classServices)
            }
        }
        function _a(x, ZA) {
            if (1 & x && (A.j41(0, "li", 62),
            A.nrm(1, "popup-tooltip", 63),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(8);
                A.R7$(),
                A.Y8G("modalTitle", a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription || a.serviceTypeName)("text", a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription || a.serviceTypeName)("content", Y.getAmenityUrl(a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription || a.serviceTypeName))("customIcon", Y.env.damAssetPathForAmenities + Y.getAmenityIcon(a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription || a.serviceTypeName))
            }
        }
        function va(x, ZA) {
            if (1 & x && (A.j41(0, "div", 55)(1, "p", 56),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "hr"),
            A.j41(4, "ul", 57),
            A.DNE(5, _a, 2, 4, "li", 61),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels ? null : Y.aemLabels.journeyLegAddonText, " "),
                A.R7$(3),
                A.Y8G("ngForOf", a.ancillaryServices)
            }
        }
        function us(x, ZA) {
            if (1 & x && (A.j41(0, "li", 59),
            A.nrm(1, "popup-tooltip", 63),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(8);
                A.R7$(),
                A.Y8G("modalTitle", a.name)("text", a.name)("content", Y.getAmenityUrl(a.name))("customIcon", Y.env.damAssetPathForAmenities + Y.getAmenityIcon(a.name))
            }
        }
        function Si(x, ZA) {
            if (1 & x && (A.j41(0, "div", 55)(1, "p", 56),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "hr"),
            A.j41(4, "ul", 57),
            A.DNE(5, us, 2, 4, "li", 58),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels ? null : Y.aemLabels.journeyLegAmenitiesText, " "),
                A.R7$(3),
                A.Y8G("ngForOf", a.travelService.Amenity)
            }
        }
        function Dn(x, ZA) {
            if (1 & x && (A.j41(0, "div", 53),
            A.DNE(1, Ci, 6, 2, "div", 54)(2, va, 6, 2, "div", 54)(3, Si, 6, 2, "div", 54),
            A.k0s()),
            2 & x) {
                const a = A.XpG().segment;
                A.R7$(),
                A.Y8G("ngIf", a.classServices.length > 0),
                A.R7$(),
                A.Y8G("ngIf", a.ancillaryServices.length > 0),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.Amenity)
            }
        }
        function ji(x, ZA) {
            if (1 & x && (A.j41(0, "div", 64),
            A.nrm(1, "span", 65),
            A.k0s()),
            2 & x) {
                const a = A.XpG(6);
                A.R7$(),
                A.Y8G("innerHTML", a.m1, A.npT)
            }
        }
        function Ds(x, ZA) {
            if (1 & x && (A.j41(0, "div", 35)(1, "div", 36)(2, "div", 37),
            A.DNE(3, oA, 4, 3, "span", 14)(4, xi, 9, 6, "span", 14),
            A.k0s()(),
            A.j41(5, "div", 38),
            A.DNE(6, mi, 3, 1, "span", 14),
            A.k0s(),
            A.DNE(7, Dn, 4, 3, "div", 39)(8, ji, 2, 1, "div", 40),
            A.k0s()),
            2 & x) {
                const a = ZA.segment
                  , Y = A.XpG(5);
                A.R7$(3),
                A.Y8G("ngIf", !Y.isMultiSegment),
                A.R7$(),
                A.Y8G("ngIf", Y.isMultiSegment),
                A.R7$(2),
                A.Y8G("ngIf", a.travelService.Amenity || "Self Transfer" === a.travelService.name || "CBN" === a.destination.code),
                A.R7$(),
                A.Y8G("ngIf", !a.isCollapsed && a.travelService.Amenity),
                A.R7$(),
                A.Y8G("ngIf", !a.isCollapsed && "Self Transfer" === a.travelService.name)
            }
        }
        function $a(x, ZA) {
            1 & x && A.eu8(0)
        }
        function la(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 68),
            A.j41(2, "p", 69),
            A.EFF(3),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).index
                  , Y = A.XpG(4);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/transfer-default.svg", A.B4B),
                A.R7$(2),
                A.SpI(" ", Y.getConnection(a), " ")
            }
        }
        function Ja(x, ZA) {
            if (1 & x && (A.j41(0, "div", 66),
            A.DNE(1, $a, 1, 0, "ng-container", 67)(2, la, 4, 3, "ng-template", null, 6, A.C5r),
            A.k0s()),
            2 & x) {
                const a = A.sdS(3)
                  , Y = A.XpG().$implicit;
                A.R7$(),
                A.Y8G("ngIf", Y.isSelfTransfer || "CBN" === Y.destination.code)("ngIfElse", a)
            }
        }
        function no(x, ZA) {
            if (1 & x && (A.j41(0, "div", 74),
            A.nrm(1, "span", 65),
            A.k0s()),
            2 & x) {
                const a = A.XpG(6);
                A.R7$(),
                A.Y8G("innerHTML", a.msg, A.npT)
            }
        }
        function Ya(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div")(1, "span", 70)(2, "span", 36),
                A.nrm(3, "img", 47),
                A.j41(4, "span", 71)(5, "b"),
                A.EFF(6),
                A.k0s()()(),
                A.j41(7, "span", 38)(8, "button", 51),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG().index
                      , yA = A.XpG(4);
                    return A.Njj(yA.showCBNDropdown(H))
                }),
                A.nrm(9, "span", 52),
                A.k0s()(),
                A.DNE(10, no, 2, 1, "div", 72),
                A.k0s(),
                A.nrm(11, "div", 73),
                A.k0s()
            }
            if (2 & x) {
                const a = A.XpG(5);
                A.R7$(3),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/border-cross.svg", A.B4B),
                A.R7$(3),
                A.SpI("", null == a.aemLabels ? null : a.aemLabels.cbnheading, " "),
                A.R7$(3),
                A.Y8G("ngClass", a.showCBNmsg ? "up toggle-arrow" : "down toggle-arrow"),
                A.R7$(),
                A.Y8G("ngIf", a.showCBNmsg)
            }
        }
        function Vt(x, ZA) {
            if (1 & x && (A.j41(0, "div", 32),
            A.DNE(1, ee, 1, 0, "ng-container", 33)(2, Ds, 9, 5, "ng-template", null, 5, A.C5r)(4, Ja, 4, 2, "div", 34)(5, Ya, 12, 5, "div", 14),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = ZA.index
                  , H = A.sdS(3)
                  , yA = A.XpG(4);
                A.R7$(),
                A.Y8G("ngTemplateOutlet", H)("ngTemplateOutletContext", A.sMw(4, Ut, yA.journeySegments, a, Y)),
                A.R7$(3),
                A.Y8G("ngIf", (a.hasLayover || a.isSelfTransfer || "CBN" === !a.destination.code) && yA.segments.length > 1),
                A.R7$(),
                A.Y8G("ngIf", "CBN" === a.destination.code)
            }
        }
        function lt(x, ZA) {
            if (1 & x && (A.j41(0, "li", 81)(1, "span", 82),
            A.EFF(2),
            A.k0s()()),
            2 & x) {
                const a = ZA.$implicit;
                A.R7$(2),
                A.JRh(a.serviceTypeName)
            }
        }
        function te(x, ZA) {
            if (1 & x && (A.j41(0, "li", 84)(1, "span", 82),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "popup-tooltip", 63),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(2),
                A.JRh(a.serviceTypeName),
                A.R7$(),
                A.Y8G("modalTitle", a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription)("text", a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription)("content", Y.getAmenityUrl(a.rbdBaseCode === Y.lower ? a.serviceTypeName : a.rbdProductDescription))("customIcon", Y.env.damAssetPathForAmenities + Y.getAmenityIcon(Y.amenity.name))
            }
        }
        function dt(x, ZA) {
            if (1 & x && (A.j41(0, "div", 76)(1, "p", 77),
            A.EFF(2),
            A.k0s(),
            A.j41(3, "ul", 78),
            A.DNE(4, te, 4, 5, "li", 83),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.journeyLegAddonText, " "),
                A.R7$(2),
                A.Y8G("ngForOf", a.ancillaryServices)
            }
        }
        function Yt(x, ZA) {
            if (1 & x && (A.j41(0, "li", 81),
            A.nrm(1, "popup-tooltip", 63),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("modalTitle", a.name)("text", a.name)("content", Y.getAmenityUrl(a.name))("customIcon", Y.env.damAssetPathForAmenities + Y.getAmenityIcon(a.name))
            }
        }
        function Dt(x, ZA) {
            if (1 & x && (A.j41(0, "div", 55)(1, "p", 77),
            A.EFF(2),
            A.k0s(),
            A.j41(3, "ul", 78),
            A.DNE(4, Yt, 2, 4, "li", 79),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.journeyLegAmenitiesText, " "),
                A.R7$(2),
                A.Y8G("ngForOf", a.train.travelService.Amenity)
            }
        }
        function Pt(x, ZA) {
            if (1 & x && (A.j41(0, "div", 28)(1, "div", 75)(2, "div", 76)(3, "p", 77),
            A.EFF(4),
            A.k0s(),
            A.j41(5, "ul", 78),
            A.DNE(6, lt, 3, 1, "li", 79),
            A.k0s()(),
            A.DNE(7, dt, 5, 2, "div", 80)(8, Dt, 5, 2, "div", 54),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(4);
                A.R7$(4),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.classText, " "),
                A.R7$(2),
                A.Y8G("ngForOf", a.classServices),
                A.R7$(),
                A.Y8G("ngIf", a.ancillaryServices && a.ancillaryServices.length > 0),
                A.R7$(),
                A.Y8G("ngIf", a.train.travelService.Amenity)
            }
        }
        function Ae(x, ZA) {
            1 & x && A.eu8(0)
        }
        function xt(x, ZA) {
            1 & x && A.nrm(0, "div")
        }
        function ue(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function kt(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function Le(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 41),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, ue, 2, 1, "span", 14)(7, kt, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/connecting-bus.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function Br(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.Lme(" ", a.travelService.number, " ", Y.getTrainName(a.travelService), " ")
            }
        }
        function Cr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment;
                A.R7$(),
                A.SpI("", a.travelService.carrierNumber, " ")
            }
        }
        function Or(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function $r(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.j41(3, "div", 43),
            A.EFF(4),
            A.DNE(5, Cr, 2, 1, "span", 14)(6, Or, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.SpI(" ", Y.getTrainName(a.travelService), " "),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber && "Self Transfer" !== a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function vn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, Br, 3, 4, "span", 14)(2, $r, 7, 7, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2).segment;
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierName),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierName)
            }
        }
        function Ye(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function er(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function en(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 45),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, Ye, 2, 1, "span", 14)(7, er, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/route_ferry.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function cr(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, Le, 8, 7, "span", 14)(2, vn, 3, 2, "span", 14)(3, en, 8, 7, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG().segment;
                A.R7$(),
                A.Y8G("ngIf", "BUS" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "TRAIN" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "LCH" === a.travelService.type)
            }
        }
        function sn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 47),
            A.j41(2, "b"),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "span"),
            A.EFF(5),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/transfer-self.svg", A.B4B),
                A.R7$(2),
                A.SpI(" ", a.travelService.name, " "),
                A.R7$(2),
                A.Lme(" ", "|", " ", Y.getTime(a.elapsedTime), " ")
            }
        }
        function An(x, ZA) {
            if (1 & x && (A.j41(0, "span")(1, "b"),
            A.EFF(2),
            A.k0s(),
            A.j41(3, "span"),
            A.EFF(4),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(2),
                A.LHq(" ", null == Y.aemLabels ? null : Y.aemLabels.journeyLegSegmentText, " ", a.segmentNumber, " ", null == Y.aemLabels ? null : Y.aemLabels.ofText, " ", Y.len, ""),
                A.R7$(2),
                A.Lme(" ", "|", " ", Y.getTime(a.elapsedTime), " ")
            }
        }
        function mn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, sn, 6, 5, "span", 14)(2, An, 5, 6, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG().segment;
                A.R7$(),
                A.Y8G("ngIf", "Self Transfer" === a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", "Self Transfer" !== a.travelService.name)
            }
        }
        function Cn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function Ln(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function ti(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 41),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, Cn, 2, 1, "span", 14)(7, Ln, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/connecting-bus.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function ei(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.Lme(" ", a.travelService.number, " ", Y.getTrainName(a.travelService), " ")
            }
        }
        function Zn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function Bi(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function jn(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 44),
            A.EFF(2),
            A.j41(3, "div", 43),
            A.EFF(4),
            A.DNE(5, Zn, 2, 1, "span", 14)(6, Bi, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/route_train.svg", A.B4B),
                A.R7$(),
                A.SpI(" ", Y.getTrainName(a.travelService), " "),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber && "Self Transfer" !== a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function hi(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.DNE(1, ei, 3, 4, "span", 14)(2, jn, 7, 7, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2).segment;
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierName),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierName)
            }
        }
        function yn(x, ZA) {
            if (1 & x && (A.j41(0, "span", 92),
            A.nrm(1, "span", 65),
            A.k0s()),
            2 & x) {
                const a = A.XpG(7);
                A.R7$(),
                A.Y8G("innerHTML", a.m1, A.npT)
            }
        }
        function ci(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function ba(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function Ki(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 45),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, ci, 2, 1, "span", 14)(7, ba, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/route_ferry.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function Ba(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.carrierNumber, " ")
            }
        }
        function Wi(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3).segment;
                A.R7$(),
                A.SpI(" ", a.travelService.number, " ")
            }
        }
        function ma(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 50),
            A.j41(2, "span", 42),
            A.EFF(3),
            A.k0s(),
            A.j41(4, "div", 43),
            A.EFF(5),
            A.DNE(6, Ba, 2, 1, "span", 14)(7, Wi, 2, 1, "span", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2).segment
                  , Y = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/train-routes/route_taxi.svg", A.B4B),
                A.R7$(2),
                A.JRh(Y.getTrainName(a.travelService)),
                A.R7$(2),
                A.Lme(" ", Y.aemLabels.operatedBy, " ", a.travelService.carrierName, " "),
                A.R7$(),
                A.Y8G("ngIf", a.travelService.carrierNumber),
                A.R7$(),
                A.Y8G("ngIf", !a.travelService.carrierNumber)
            }
        }
        function Qo(x, ZA) {
            if (1 & x && (A.j41(0, "div", 90),
            A.DNE(1, ti, 8, 7, "span", 14)(2, hi, 3, 2, "span", 14)(3, yn, 2, 1, "span", 91)(4, Ki, 8, 7, "span", 14)(5, ma, 8, 7, "span", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG().segment;
                A.R7$(),
                A.Y8G("ngIf", "BUS" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "TRAIN" === a.travelService.type && "Self Transfer" !== a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", "TRAIN" === a.travelService.type && "Self Transfer" === a.travelService.name),
                A.R7$(),
                A.Y8G("ngIf", "LCH" === a.travelService.type),
                A.R7$(),
                A.Y8G("ngIf", "LMO" === a.travelService.type)
            }
        }
        function qA(x, ZA) {
            if (1 & x && (A.j41(0, "span", 93),
            A.EFF(1),
            A.nrm(2, "br"),
            A.EFF(3),
            A.k0s()),
            2 & x) {
                const a = A.XpG()
                  , Y = a.segments
                  , H = a.i
                  , yA = A.XpG(5);
                A.R7$(),
                A.E5c(" ", null == Y[H] || null == Y[H].origin ? null : Y[H].origin.name, " ", yA.getFormattedFacilityName(Y[H].origin.code), " ", null == yA.aemLabels ? null : yA.aemLabels.toText, " "),
                A.R7$(2),
                A.Lme(" ", null == Y[H] || null == Y[H].destination ? null : Y[H].destination.name, " ", yA.getFormattedFacilityName(Y[H].destination.code), " ")
            }
        }
        function _(x, ZA) {
            if (1 & x && (A.j41(0, "span", 93),
            A.EFF(1),
            A.nrm(2, "br"),
            A.EFF(3),
            A.k0s()),
            2 & x) {
                const a = A.XpG()
                  , Y = a.segments
                  , H = a.i
                  , yA = A.XpG(5);
                A.R7$(),
                A.Lme(" ", null == yA.aemLabels ? null : yA.aemLabels.cbnstation, " ", null == yA.aemLabels ? null : yA.aemLabels.toText, " "),
                A.R7$(2),
                A.Lme(" ", null == Y[H] || null == Y[H].destination ? null : Y[H].destination.name, " ", yA.getFormattedFacilityName(Y[H].destination.code), " ")
            }
        }
        function $(x, ZA) {
            if (1 & x && (A.j41(0, "span", 93),
            A.EFF(1),
            A.nrm(2, "br"),
            A.EFF(3),
            A.k0s()),
            2 & x) {
                const a = A.XpG()
                  , Y = a.segments
                  , H = a.i
                  , yA = A.XpG(5);
                A.R7$(),
                A.E5c(" ", null == Y[H] || null == Y[H].origin ? null : Y[H].origin.name, " ", yA.getFormattedFacilityName(Y[H].origin.code), " ", null == yA.aemLabels ? null : yA.aemLabels.toText, " "),
                A.R7$(2),
                A.SpI(" ", null == yA.aemLabels ? null : yA.aemLabels.cbnstation, " ")
            }
        }
        function aA(x, ZA) {
            if (1 & x && (A.j41(0, "div"),
            A.nrm(1, "app-train-route", 94),
            A.k0s()),
            2 & x) {
                const a = A.XpG()
                  , Y = a.segments
                  , H = a.segment
                  , yA = A.XpG(5);
                A.R7$(),
                A.Y8G("trainsSolutionsSubset", Y)("trainDetails", H.trainDetails)("isTrainSelected", yA.isTrainSelected)("initialRoute", yA.initialRoute)("cancelledTrain", yA.cancelledTrain)("content", yA.aemContent)("isMobileView", yA.isMobileView)("destinationCode", yA.destinationCode)("isRestricted", yA.isRestricted)
            }
        }
        function rA(x, ZA) {
            if (1 & x && (A.j41(0, "div", 95)(1, "ul", 96)(2, "li", 97)(3, "p", 98),
            A.EFF(4),
            A.nI1(5, "stationData"),
            A.nI1(6, "stationData"),
            A.k0s()(),
            A.nrm(7, "span", 99),
            A.j41(8, "li", 100)(9, "p", 98),
            A.EFF(10),
            A.nI1(11, "stationData"),
            A.nI1(12, "stationData"),
            A.k0s()()()()),
            2 & x) {
                const a = A.XpG().segment
                  , Y = A.XpG(5);
                A.R7$(4),
                A.E5c(" ", A.i5U(5, 6, a.origin.code, Y.FIELDNAMES.StationName32), " ", A.i5U(6, 9, a.origin.code, Y.FIELDNAMES.FacilityName32), "(", a.origin.code, ") "),
                A.R7$(6),
                A.E5c(" ", A.i5U(11, 12, a.destination.code, Y.FIELDNAMES.StationName32), " ", A.i5U(12, 15, a.destination.code, Y.FIELDNAMES.FacilityName32), "(", a.destination.code, ") ")
            }
        }
        function mA(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.DNE(0, xt, 1, 0, "div", 14),
                A.j41(1, "div", 35)(2, "div", 36)(3, "div", 85)(4, "div", 86),
                A.DNE(5, cr, 4, 3, "span", 14)(6, mn, 3, 2, "span", 14)(7, Qo, 6, 5, "div", 87),
                A.k0s(),
                A.nrm(8, "br"),
                A.DNE(9, qA, 4, 5, "span", 88)(10, _, 4, 4, "span", 88)(11, $, 4, 4, "span", 88)(12, aA, 2, 9, "div", 14)(13, rA, 13, 18, "div", 89),
                A.k0s()(),
                A.j41(14, "div", 38)(15, "button", 51),
                A.bIt("click", function() {
                    const H = A.eBV(a).i
                      , yA = A.XpG(5);
                    return A.Njj(yA.showSegmentDetailsDropdown(H))
                }),
                A.nrm(16, "span", 52),
                A.k0s()()()
            }
            if (2 & x) {
                const a = ZA.segments
                  , Y = ZA.segment
                  , H = ZA.i
                  , yA = A.XpG(5);
                A.Y8G("ngIf", "Self Transfer" === Y.travelService.name),
                A.R7$(5),
                A.Y8G("ngIf", !yA.isMultiSegment),
                A.R7$(),
                A.Y8G("ngIf", yA.isMultiSegment),
                A.R7$(),
                A.Y8G("ngIf", yA.isMultiSegment && !Y.isCollapsed),
                A.R7$(2),
                A.Y8G("ngIf", yA.isMultiSegment && a[H] && Y.isCollapsed && "CBN" !== a[H].origin.code && "CBN" !== a[H].destination.code),
                A.R7$(),
                A.Y8G("ngIf", yA.isMultiSegment && a[H] && Y.isCollapsed && "CBN" === a[H].origin.code),
                A.R7$(),
                A.Y8G("ngIf", yA.isMultiSegment && a[H] && Y.isCollapsed && "CBN" === a[H].destination.code),
                A.R7$(),
                A.Y8G("ngIf", !Y.isCollapsed && !Y.error),
                A.R7$(),
                A.Y8G("ngIf", !Y.isCollapsed && Y.error && !Y.isSelfTransfer),
                A.R7$(3),
                A.Y8G("ngClass", Y.isCollapsed ? "down toggle-arrow" : "up toggle-arrow")
            }
        }
        function kA(x, ZA) {
            1 & x && A.eu8(0)
        }
        function Jt(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 101),
            A.j41(1, "p", 69),
            A.EFF(2),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2).index
                  , Y = A.XpG(4);
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/transfer-default.svg", A.B4B),
                A.R7$(2),
                A.SpI(" ", Y.getConnection(a), " ")
            }
        }
        function ge(x, ZA) {
            if (1 & x && (A.j41(0, "div", 66),
            A.DNE(1, kA, 1, 0, "ng-container", 67)(2, Jt, 3, 3, "ng-template", null, 6, A.C5r),
            A.k0s()),
            2 & x) {
                const a = A.sdS(3)
                  , Y = A.XpG().$implicit;
                A.R7$(),
                A.Y8G("ngIf", Y.isSelfTransfer || "CBN" === Y.destination.code)("ngIfElse", a)
            }
        }
        function Ue(x, ZA) {
            if (1 & x && (A.j41(0, "div", 104),
            A.nrm(1, "span", 65),
            A.k0s()),
            2 & x) {
                const a = A.XpG(6);
                A.R7$(),
                A.Y8G("innerHTML", a.msg, A.npT)
            }
        }
        function ze(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div")(1, "span", 70)(2, "span", 102),
                A.nrm(3, "img", 47),
                A.j41(4, "span", 71)(5, "b"),
                A.EFF(6),
                A.k0s()()(),
                A.j41(7, "span", 38)(8, "button", 51),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG().index
                      , yA = A.XpG(4);
                    return A.Njj(yA.showCBNDropdown(H))
                }),
                A.nrm(9, "span", 52),
                A.k0s()(),
                A.DNE(10, Ue, 2, 1, "div", 103),
                A.k0s(),
                A.nrm(11, "div", 73),
                A.k0s()
            }
            if (2 & x) {
                const a = A.XpG(5);
                A.R7$(3),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/border-cross.svg", A.B4B),
                A.R7$(3),
                A.SpI("", null == a.aemLabels ? null : a.aemLabels.cbnheading, " "),
                A.R7$(3),
                A.Y8G("ngClass", a.showCBNmsg ? "up toggle-arrow" : "down toggle-arrow"),
                A.R7$(),
                A.Y8G("ngIf", a.showCBNmsg)
            }
        }
        function De(x, ZA) {
            if (1 & x && (A.j41(0, "div", 32),
            A.DNE(1, Ae, 1, 0, "ng-container", 33)(2, mA, 17, 10, "ng-template", null, 7, A.C5r)(4, ge, 4, 2, "div", 34)(5, ze, 12, 5, "div", 14),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = ZA.index
                  , H = A.sdS(3)
                  , yA = A.XpG(4);
                A.R7$(),
                A.Y8G("ngTemplateOutlet", H)("ngTemplateOutletContext", A.sMw(4, Ut, yA.journeySegments, a, Y)),
                A.R7$(3),
                A.Y8G("ngIf", (a.hasLayover || a.isSelfTransfer || "CBN" === !a.destination.code) && yA.segments.length > 1),
                A.R7$(),
                A.Y8G("ngIf", "CBN" === a.destination.code)
            }
        }
        function Xe(x, ZA) {
            if (1 & x && (A.j41(0, "div"),
            A.qex(1),
            A.j41(2, "tabset", 29)(3, "tab", 30),
            A.DNE(4, Vt, 6, 8, "div", 31)(5, Pt, 9, 4, "div", 25),
            A.k0s(),
            A.j41(6, "tab", 30),
            A.DNE(7, De, 6, 8, "div", 31),
            A.k0s()(),
            A.bVm(),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.Y8G("justified", !0),
                A.R7$(),
                A.FS9("heading", a.aemLabels.services),
                A.R7$(),
                A.Y8G("ngForOf", a.journeySegments),
                A.R7$(),
                A.Y8G("ngIf", a.train && !a.isPrint),
                A.R7$(),
                A.FS9("heading", a.aemLabels.route),
                A.R7$(),
                A.Y8G("ngForOf", a.journeySegments)
            }
        }
        function dr(x, ZA) {
            if (1 & x && (A.j41(0, "div", 28),
            A.DNE(1, Xe, 8, 6, "div", 14),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.Y8G("ngIf", !a.isScheduleView)
            }
        }
        function Ir(x, ZA) {
            if (1 & x && (A.j41(0, "li", 81)(1, "span", 82),
            A.EFF(2),
            A.k0s()()),
            2 & x) {
                const a = ZA.$implicit;
                A.R7$(2),
                A.JRh(a.rbdProductDescription)
            }
        }
        function br(x, ZA) {
            if (1 & x && (A.j41(0, "div", 76)(1, "p", 77),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "hr"),
            A.j41(4, "ul", 78),
            A.DNE(5, Ir, 3, 1, "li", 79),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.classText, " "),
                A.R7$(3),
                A.Y8G("ngForOf", a.classServices)
            }
        }
        function hr(x, ZA) {
            if (1 & x && (A.j41(0, "li", 84),
            A.nrm(1, "popup-tooltip", 63),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("modalTitle", a.rbdProductDescription)("text", a.rbdProductDescription)("content", Y.getAmenityUrl(a.rbdProductDescription))("customIcon", Y.env.damAssetPathForAmenities + Y.getAmenityIcon(a.rbdProductDescription))
            }
        }
        function Vr(x, ZA) {
            if (1 & x && (A.j41(0, "div", 76)(1, "p", 105),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "hr"),
            A.j41(4, "ul", 78),
            A.DNE(5, hr, 2, 4, "li", 83),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.journeyLegAddonText, " "),
                A.R7$(3),
                A.Y8G("ngForOf", a.ancillaryServices)
            }
        }
        function Xr(x, ZA) {
            if (1 & x && (A.j41(0, "li", 81),
            A.nrm(1, "popup-tooltip", 63),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(),
                A.Y8G("modalTitle", a.name)("text", a.name)("content", Y.getAmenityUrl(a.name))("customIcon", Y.env.damAssetPathForAmenities + Y.getAmenityIcon(a.name))
            }
        }
        function ii(x, ZA) {
            if (1 & x && (A.j41(0, "div"),
            A.DNE(1, Xr, 2, 4, "li", 79),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", a.train.travelService.Amenity)
            }
        }
        function Zr(x, ZA) {
            if (1 & x && (A.j41(0, "li", 81),
            A.nrm(1, "popup-tooltip", 63),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(),
                A.Y8G("modalTitle", a.name)("text", a.name)("content", Y.getAmenityUrl(a.name))("customIcon", Y.env.damAssetPathForAmenities + Y.getAmenityIcon(a.name))
            }
        }
        function qr(x, ZA) {
            if (1 & x && (A.j41(0, "div"),
            A.DNE(1, Zr, 2, 4, "li", 79),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", a.amenitiesExist)
            }
        }
        function ua(x, ZA) {
            if (1 & x && (A.j41(0, "div", 55)(1, "p", 77),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "hr"),
            A.j41(4, "ul", 78),
            A.DNE(5, ii, 2, 1, "div", 14)(6, qr, 2, 1, "div", 14),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.journeyLegAmenitiesText, " "),
                A.R7$(3),
                A.Y8G("ngIf", "Station" === a.schedulesData.type),
                A.R7$(),
                A.Y8G("ngIf", "Route" === a.schedulesData.type)
            }
        }
        function ri(x, ZA) {
            if (1 & x && (A.j41(0, "div", 28)(1, "div", 75),
            A.DNE(2, br, 6, 2, "div", 80)(3, Vr, 6, 2, "div", 80)(4, ua, 7, 3, "div", 54),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(2),
                A.Y8G("ngIf", a.classServices && a.classServices.length > 0),
                A.R7$(),
                A.Y8G("ngIf", a.ancillaryServices && a.ancillaryServices.length > 0),
                A.R7$(),
                A.Y8G("ngIf", a.train.travelService.Amenity)
            }
        }
        function gn(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "button", 110),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG(4);
                    return A.Njj(H.onPrint("all"))
                }),
                A.EFF(1),
                A.k0s()
            }
            if (2 & x) {
                const a = A.XpG(4);
                A.R7$(),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.printAllText, " ")
            }
        }
        function Ai(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div", 75)(1, "div", 107),
                A.DNE(2, gn, 2, 1, "button", 108),
                A.k0s(),
                A.j41(3, "div", 107)(4, "button", 109),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG(3);
                    return A.Njj(H.onPrint("selected"))
                }),
                A.EFF(5),
                A.k0s()()()
            }
            if (2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.Y8G("ngIf", !a.disablePrintAll),
                A.R7$(2),
                A.Y8G("disabled", 0 === a.activeTrain.length),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.printSelectedText, " ")
            }
        }
        function qn(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div", 75)(1, "div", 107),
                A.nrm(2, "img", 111),
                A.j41(3, "button", 110),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG(3);
                    return A.Njj(H.onOldPrint())
                }),
                A.EFF(4),
                A.k0s()()()
            }
            if (2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/am-print.svg", A.B4B),
                A.Y8G("alt", null == a.aemLabels ? null : a.aemLabels.printText),
                A.R7$(2),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.printText, " ")
            }
        }
        function $i(x, ZA) {
            if (1 & x && (A.j41(0, "div", 28),
            A.qex(1),
            A.DNE(2, Ai, 6, 3, "div", 106)(3, qn, 5, 4, "div", 106),
            A.bVm(),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(2),
                A.Y8G("ngIf", null == a.aemData ? null : a.aemData.printDropdownDevFlag),
                A.R7$(),
                A.Y8G("ngIf", !(null != a.aemData && a.aemData.printDropdownDevFlag))
            }
        }
        function fs(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div", 8)(1, "div", 19)(2, "div", 20),
                A.DNE(3, Ee, 2, 1, "h4", 21)(4, ot, 2, 1, "label", 22),
                A.j41(5, "button", 23),
                A.bIt("click", function() {
                    const H = A.eBV(a).actions;
                    return A.Njj(H.close())
                }),
                A.DNE(6, Ct, 1, 3, "img", 15)(7, Be, 1, 3, "img", 16),
                A.k0s()(),
                A.j41(8, "div", 24, 4),
                A.DNE(10, dr, 2, 1, "div", 25)(11, ri, 5, 3, "div", 25),
                A.k0s(),
                A.DNE(12, $i, 4, 2, "div", 25),
                A.k0s()()
            }
            if (2 & x) {
                const a = A.XpG();
                A.R7$(3),
                A.Y8G("ngIf", !a.isPrint),
                A.R7$(),
                A.Y8G("ngIf", a.isPrint),
                A.R7$(2),
                A.Y8G("ngIf", !a.isPrint),
                A.R7$(),
                A.Y8G("ngIf", a.isPrint),
                A.R7$(3),
                A.Y8G("ngIf", !a.train && !a.isPrint),
                A.R7$(),
                A.Y8G("ngIf", a.isScheduleView),
                A.R7$(),
                A.Y8G("ngIf", a.isPrint)
            }
        }
        sA.pdfMake && sA.pdfMake.vfs ? Et.vfs = sA.pdfMake.vfs : console.log("pdfMake vfs is not available.");
        let Aa = ( () => {
            class x {
                get disablePrintAll() {
                    let a = !1;
                    return this.schedules.forEach(Y => {
                        Y.length > 1 && (a = !0)
                    }
                    ),
                    a
                }
                get directionCode() {
                    return this.schedules[0][0].travelService.directionCode
                }
                constructor(a, Y, H, yA, Ft, wt, Qt) {
                    this.pwdService = a,
                    this.mappings = Y,
                    this.apiService = H,
                    this.headerConfig = yA,
                    this.scheduleResults = Ft,
                    this.pdfSvgService = wt,
                    this.ecomStorage = Qt,
                    this.filterSchedule = new A.bkB,
                    this.TransferUrl = c.D5.apiEndPtURL.TransferMsgURL,
                    this.AmenityType = "",
                    this.displayName = !1,
                    this.env = o.c,
                    this.FIELDNAMES = c.D5.FieldNames,
                    this.AMENITIES = c.D5.Amenities.AmenityNames,
                    this.segments = [],
                    this.popoverInfo = {},
                    this.classServices = [],
                    this.ancillaryServices = [],
                    this.footerPages = {},
                    this.routeType = "",
                    this.trains = [],
                    this.trainDetails = [],
                    this.isTrainSelected = !1,
                    this.trainsSolutionsSubset = [],
                    this.journeySegments = [],
                    this.m1 = "",
                    this.msg = "",
                    this.showCBNmsg = !1,
                    this.len = 0
                }
                ngOnInit() {
                    this.classServices = [],
                    this.ancillaryServices = [],
                    this.schedulesData = this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES, !0),
                    this.schedulesData && (this.schedules = this.schedulesData.data.data),
                    this.stationOrder = this.ecomStorage.getSessionStorage(c.D5.StorageName.STATION_ORDER, !0),
                    this.isPrint || (this.train || (this.segments = this.getSegments(),
                    this.len = this.segments.length),
                    this.train && (this.amenitiesExist = this.train.travelService?.Amenity,
                    this.reservationExist = this.train.travelService?.RBD,
                    this.amenitiesExist && this.reservationExist && (0 == this.amenitiesExist.length && 0 == this.reservationExist.length ? this.disabledDetails = !0 : (this.amenitiesExist.length > 0 || this.reservationExist.length > 0 || 0 == this.amenitiesExist.length || 0 == this.reservationExist.length) && (this.disabledDetails = !1)),
                    this.trainName = this.train.travelService.name.desc_40,
                    this.trainNumber = this.train.travelService.number,
                    null != this.train.travelService.RBD && this.train.travelService.RBD.forEach(a => {
                        a && a.serviceSubTypeName && "Ancillary" === a.serviceSubTypeName ? this.ancillaryServices.push(a) : this.classServices.push(a)
                    }
                    ))),
                    this.serviceOfferingsTracker = {
                        amenity: null,
                        reservation: null
                    },
                    this.aemData.stopListsJsonURL && this.getStationOrder().subscribe(a => {
                        this.stationOrderJson = a
                    }
                    )
                }
                ngOnChanges(a) {
                    if (this.pagination) {
                        const Y = this.pagination.previousPage
                          , H = this.pagination.itemsPerPage
                          , yA = this.pagination.currentPage;
                        1 === yA && (this.numberOfPaginationPages = Y / H % 1 != 0 ? Math.ceil(Y / H) : Y / H),
                        this.footerPages = {
                            currentPage: yA,
                            totalPages: this.numberOfPaginationPages
                        }
                    }
                    a.travelLegs && (this.travelLegs = a.travelLegs.currentValue,
                    this.ngOnInit()),
                    this.routeType = this.activeTrain && 1 === this.activeTrain.length ? "single-segment" : "multi-segment"
                }
                compileHeader(a) {
                    const Y = this.activeTrain.length - 1;
                    let H, yA;
                    return "single-segment" === this.routeType ? (H = this.activeTrain[0].stops[0].station.code,
                    yA = this.activeTrain[0].stops[this.activeTrain[0].stops.length - 1].station.code) : "multi-segment" === this.routeType && (H = this.activeTrain[0].stops[0].station.code,
                    yA = this.activeTrain[Y].stops[this.activeTrain[Y].stops.length - 1].station.code),
                    [{
                        columns: [{
                            width: 150,
                            svg: this.pdfSvgService.amtrakLogo
                        }, {
                            width: "*",
                            text: "***",
                            style: "spacer"
                        }, {
                            width: 200,
                            alignment: "right",
                            svg: this.pdfSvgService.buildToAndFromBlueBox(H, yA, this.directionCode)
                        }],
                        columnGap: 10
                    }, {
                        text: `${a.day}, ${a.month} ${a.date.getDate()}, ${a.date.getFullYear()}`,
                        margin: [10, 0, 0, 0],
                        style: "startDate"
                    }]
                }
                compileHeaderAllTrains(a) {
                    const Y = this.activeTrain.length - 1;
                    return [{
                        columns: [{
                            width: 150,
                            svg: this.pdfSvgService.amtrakLogo
                        }, {
                            width: "*",
                            text: "***",
                            style: "spacer"
                        }, {
                            width: 200,
                            alignment: "right",
                            svg: this.pdfSvgService.buildToAndFromBlueBox(this.activeTrain[0].stops[0].station.code, this.activeTrain[Y].stops[this.activeTrain[Y].stops.length - 1].station.code, this.directionCode)
                        }],
                        columnGap: 10
                    }, {
                        text: `${a.day}, ${a.month} ${a.date.getDate()}, ${a.date.getFullYear()}`,
                        margin: [10, 0, 0, 0],
                        style: "startDate"
                    }]
                }
                generateMultiSegmentBox(a) {
                    let Y = "";
                    const H = [[{
                        text: "Service",
                        fillColor: "#00537E",
                        color: "white",
                        fontSize: 9
                    }, {
                        text: "Class of Service",
                        fillColor: "#00537E",
                        color: "white",
                        fontSize: 9
                    }, {
                        text: "Amenities",
                        fillColor: "#00537E",
                        color: "white",
                        fontSize: 9
                    }]];
                    return a.forEach( (yA, Ft) => {
                        let wt = 1;
                        const Qt = [];
                        yA.reservations.forEach(Ur => {
                            Qt.push(Ur.serviceType)
                        }
                        );
                        const Lr = Qt.toString().replace(/,/g, ", ");
                        if (null !== yA.amenities) {
                            const Ur = (0,
                            s.g5)(yA.amenities);
                            yA.amenities.concat(...Ur),
                            yA.amenities.forEach( (dn, Nn) => {
                                const Ni = this.pdfSvgService.buildAmenityIcon({
                                    name: dn.amenityType,
                                    code: dn.code,
                                    location: "multi-segment-box"
                                }, {
                                    x: 1,
                                    xIncrement: 20,
                                    y: 6,
                                    yIncrement: 0
                                }, Nn);
                                Y = Y += Ni,
                                Nn >= 3 && (wt = 2)
                            }
                            )
                        }
                        H.push([{
                            text: yA.transport.name,
                            color: "#00537E",
                            fontSize: 9
                        }, {
                            text: Lr,
                            color: "#00537E",
                            fontSize: 8
                        }, {
                            svg: `<svg width="70px" height="${25 * wt}px" viewBox="0 0 70 ${25 * wt}" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">${null !== yA.amenities ? Y : ""} </svg>`
                        }]),
                        Y = ""
                    }
                    ),
                    H
                }
                generateMultipleSingleSegments(a) {
                    const Y = [];
                    return this.activeTrain.forEach( (H, yA) => {
                        this.routeType = "single-segment";
                        const Ft = this.compileServiceOfferings({
                            reservationText: {
                                x: 9,
                                y: 47,
                                xIncrement: 0,
                                yIncrement: 35
                            },
                            amenityIcons: {
                                x: 11,
                                y: 38,
                                xIncrement: 0,
                                yIncrement: 35
                            },
                            amenityText: {
                                x: 38,
                                y: 47,
                                xIncrement: 0,
                                yIncrement: 35
                            }
                        }, yA)
                          , wt = "" !== Ft.content ? this.pdfSvgService.buildServiceOfferings(Ft.content, Ft.rectHeight) : '<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300" version="1.1">\n    </svg>'
                          , Qt = [...this.compileHeaderAllTrains(a), {
                            columns: [{
                                width: 250,
                                alignment: "left",
                                svg: this.pdfSvgService.buildTripDepartureAndArrival([this.activeTrain[yA]])
                            }, {
                                alignment: "right",
                                svg: this.pdfSvgService.buildDepartsAndArrivesBox([H])
                            }],
                            margin: [10, 10, 0, 0],
                            columnGap: 10
                        }, {
                            columns: [{
                                svg: wt,
                                width: 250
                            }, {
                                layout: "routeMap",
                                pageBreak: this.activeTrain.length - 1 === yA ? "" : "after",
                                table: {
                                    headerRows: 0,
                                    widths: [14, "*"],
                                    body: this.compileTableRows(yA)
                                },
                                margin: [0, 0, 0, 0]
                            }],
                            margin: [10, 10, 0, 0],
                            columnGap: 10
                        }];
                        Y.push(...Qt)
                    }
                    ),
                    Y
                }
                getTime(a) {
                    return s.LD.getDuration(a)
                }
                onPrint(a) {
                    let Y;
                    this.routeType = 1 === this.activeTrain.length ? "single-segment" : "multi-segment";
                    const H = this.aemLabels.pdfFooterText
                      , yA = new Date(this.startDate)
                      , Ft = new Array(7);
                    Ft[0] = "Sun",
                    Ft[1] = "Mon",
                    Ft[2] = "Tue",
                    Ft[3] = "Wed",
                    Ft[4] = "Thu",
                    Ft[5] = "Fri",
                    Ft[6] = "Sat";
                    const wt = Ft[yA.getDay()]
                      , Qt = new Array(11);
                    Qt[0] = "Jan",
                    Qt[1] = "Feb",
                    Qt[2] = "Mar",
                    Qt[3] = "Apr",
                    Qt[4] = "May",
                    Qt[5] = "Jun",
                    Qt[6] = "Jul",
                    Qt[7] = "Aug",
                    Qt[8] = "Sep",
                    Qt[9] = "Oct",
                    Qt[10] = "Nov",
                    Qt[11] = "Dec";
                    const Lr = {
                        day: wt,
                        month: Qt[yA.getMonth()],
                        date: yA
                    }
                      , kr = this.compileServiceOfferings({
                        reservationText: {
                            x: 9,
                            y: 47,
                            xIncrement: 0,
                            yIncrement: 35
                        },
                        amenityIcons: {
                            x: 11,
                            y: 38,
                            xIncrement: 0,
                            yIncrement: 35
                        },
                        amenityText: {
                            x: 38,
                            y: 47,
                            xIncrement: 0,
                            yIncrement: 35
                        }
                    });
                    if ("all" === a) {
                        const Ur = "#e1f5fd";
                        Et.tableLayouts = {
                            scheduleLayout: {
                                hLineWidth: Nn => 0,
                                vLineWidth: Nn => 0,
                                fillColor: (Nn, tn) => 4 === Nn || Nn === tn.table.body.length - 1 ? Ur : ""
                            }
                        };
                        const dn = {
                            layout: "scheduleLayout",
                            style: "scheduleTable",
                            width: "auto",
                            table: {
                                body: [this.getServiceNumberTableHeader(), this.getServiceNameTableHeader(), this.getFrequencyTableHeader(), this.getDurationTableHeader(), ...this.getStationsTimesMatrix()]
                            },
                            pageBreak: "after"
                        };
                        Y = {
                            pageOrientation: "landscape",
                            content: [...this.compileHeaderAllTrains(Lr), ...this.paginateTableNode(dn, 10)],
                            footer: function(Nn, tn) {
                                return [{
                                    columns: [{
                                        width: "50%",
                                        text: H,
                                        margin: [20, 0, 0, 0],
                                        style: "legalText"
                                    }, {
                                        width: "50%",
                                        alignment: "right",
                                        text: `Page ${Nn} of ${tn}`,
                                        margin: [0, 0, 20, 0],
                                        style: "footerPages"
                                    }],
                                    columnGap: 10
                                }]
                            },
                            styles: {
                                logo: {},
                                toAndFrom: {},
                                spacer: {
                                    color: "white"
                                },
                                startDate: {
                                    color: "#286E92"
                                },
                                legalText: {
                                    color: "#286E92"
                                },
                                footerPages: {
                                    color: "#286E92"
                                },
                                scheduleTable: {
                                    fontSize: 10,
                                    alignment: "center"
                                },
                                headerTitles: {
                                    alignment: "right",
                                    italics: !0
                                }
                            },
                            defaultStyle: {}
                        }
                    }
                    "selected" === a && (Et.tableLayouts = {
                        routeMap: {
                            hLineWidth: function(Ur, _r) {
                                return 0 === Ur || Ur === _r.table.body.length ? 0 : Ur === _r.table.headerRows ? 2 : 1
                            },
                            vLineWidth: function(Ur) {
                                return 0
                            },
                            hLineColor: function(Ur) {
                                return "white"
                            },
                            paddingTop: function(Ur) {
                                return 6
                            },
                            paddingBottom: function(Ur) {
                                return 6
                            }
                        },
                        multiSegmentBox: {
                            hLineWidth: function(Ur, _r) {
                                return .5
                            },
                            vLineWidth: function(Ur, _r) {
                                return .5
                            },
                            hLineColor: function(Ur, _r) {
                                return "black"
                            },
                            vLineColor: function(Ur, _r) {
                                return "black"
                            },
                            hLineStyle: function(Ur, _r) {
                                return 0 === Ur || Ur === _r.table.body.length ? null : {
                                    solid: {
                                        length: 10,
                                        space: 4
                                    }
                                }
                            },
                            vLineStyle: function(Ur, _r) {
                                return 0 === Ur || Ur === _r.table.widths.length ? null : {
                                    solid: {
                                        length: 4
                                    }
                                }
                            }
                        }
                    },
                    "single-segment" === this.routeType ? Y = this.activeTrain && 0 !== Object.keys(this.activeTrain).length ? {
                        content: [...this.compileHeader(Lr), {
                            columns: [{
                                width: 200,
                                alignment: "left",
                                svg: this.pdfSvgService.buildTripDepartureAndArrival(this.activeTrain)
                            }, {
                                alignment: "right",
                                svg: this.pdfSvgService.buildDepartsAndArrivesBox(this.activeTrain.slice(0, 1))
                            }],
                            margin: [10, 10, 0, 0],
                            columnGap: 10
                        }, {
                            columns: [{
                                width: 250,
                                svg: this.pdfSvgService.buildServiceOfferings(kr.content, kr.rectHeight)
                            }, {
                                layout: "routeMap",
                                table: {
                                    headerRows: 0,
                                    widths: [14, "*"],
                                    body: this.compileTableRows()
                                },
                                margin: [10, 0, 0, 0]
                            }],
                            margin: [10, 10, 0, 0],
                            columnGap: 10
                        }],
                        footer: function(Ur, _r) {
                            return [{
                                columns: [{
                                    width: "50%",
                                    text: H,
                                    margin: [20, 0, 0, 0],
                                    style: "legalText"
                                }, {
                                    width: "50%",
                                    alignment: "right",
                                    text: `Page ${Ur} of ${_r}`,
                                    margin: [0, 0, 20, 0],
                                    style: "footerPages"
                                }],
                                columnGap: 10
                            }]
                        },
                        styles: {
                            logo: {},
                            toAndFrom: {},
                            spacer: {
                                color: "white"
                            },
                            startDate: {
                                color: "#286E92"
                            },
                            legalText: {
                                color: "#286E92"
                            },
                            footerPages: {
                                color: "#286E92"
                            },
                            serviceOfferings: {
                                background: "#FCF542"
                            }
                        },
                        defaultStyle: {}
                    } : {
                        content: [...this.compileHeader(Lr), {
                            text: "No train selected!",
                            fontSize: 15,
                            margin: [10, 20, 0, 0]
                        }],
                        footer: function(Ur, _r) {
                            return [{
                                columns: [{
                                    width: "50%",
                                    text: H,
                                    margin: [20, 0, 0, 0],
                                    style: "legalText"
                                }, {
                                    width: "50%",
                                    alignment: "right",
                                    text: `Page ${Ur} of ${_r}`,
                                    margin: [0, 0, 20, 0],
                                    style: "footerPages"
                                }],
                                columnGap: 10
                            }]
                        }
                    } : "multi-segment" === this.routeType && (Y = {
                        content: [...this.compileHeader(Lr), {
                            columns: [{
                                width: 250,
                                svg: this.pdfSvgService.buildTripDepartureAndArrival(this.activeTrain)
                            }, {
                                svg: this.activeTrain.length >= 1 ? this.pdfSvgService.buildDepartsAndArrivesBox([this.activeTrain[0]]) : '<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" version="1.1"></svg>'
                            }],
                            margin: [10, 10, 0, 0],
                            columnGap: 10
                        }, {
                            columns: [{
                                width: 250,
                                layout: "multiSegmentBox",
                                table: {
                                    headerRows: 1,
                                    widths: [60, "*", 60],
                                    body: this.generateMultiSegmentBox(this.activeTrain)
                                }
                            }, {
                                svg: this.activeTrain.length > 1 ? this.pdfSvgService.buildDepartsAndArrivesBox([...this.activeTrain.slice(1)]) : '<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" version="1.1"></svg>'
                            }],
                            margin: [10, 0, 0, 0],
                            columnGap: 10
                        }, {
                            pageBreak: "after",
                            columns: [{
                                width: 250,
                                svg: '<svg xmlns="http://www.w3.org/2000/svg" width="250" height="10" version="1.1"> </svg>',
                                margin: [10, 0, 0, 0]
                            }, {
                                layout: "routeMap",
                                table: {
                                    headerRows: 0,
                                    widths: [14, "*"],
                                    body: this.compileTableRows()
                                },
                                margin: [10, 0, 0, 0]
                            }],
                            margin: [0, 10, 0, 0],
                            columnGap: 10
                        }, ...this.generateMultipleSingleSegments(Lr)],
                        footer: function(Ur, _r) {
                            return [{
                                columns: [{
                                    width: "50%",
                                    text: H,
                                    margin: [20, 0, 0, 0],
                                    style: "legalText"
                                }, {
                                    width: "50%",
                                    alignment: "right",
                                    text: `Page ${Ur} of ${_r}`,
                                    margin: [0, 0, 20, 0],
                                    style: "footerPages"
                                }],
                                columnGap: 10
                            }]
                        },
                        styles: {
                            logo: {},
                            toAndFrom: {},
                            spacer: {
                                color: "white"
                            },
                            startDate: {
                                color: "#286E92"
                            },
                            legalText: {
                                color: "#286E92"
                            },
                            footerPages: {
                                color: "#286E92"
                            },
                            serviceOfferings: {
                                background: "#FCF542"
                            }
                        },
                        defaultStyle: {}
                    })),
                    Et.createPdf(Y).open()
                }
                compileTableRows(a) {
                    const Y = [];
                    if ("single-segment" === this.routeType) {
                        let H;
                        H = void 0 !== a ? this.activeTrain[a] : this.activeTrain[0],
                        H.stops.forEach( (yA, Ft) => {
                            let Ge;
                            if (0 === Ft || Ft === H.stops.length - 1)
                                Ge = [{
                                    svg: this.pdfSvgService.stopsBlueOval
                                }, {
                                    text: `${0 === Ft ? "Departs" : "Arrives"} ${yA.station.name} (${yA.station.code}) - ${0 === Ft ? `${H.departure.departureTime}${H.departure.amPm}` : `${H.arrival.arrivalTime}${H.arrival.amPm}`}`,
                                    bold: !0
                                }];
                            else {
                                const Lr = `${this.scheduleResults.convertMiltaryTimeToStandard(yA.timeInfo.arrival, "time")}${this.scheduleResults.convertMiltaryTimeToStandard(yA.timeInfo.arrival, "amPm")}`
                                  , kr = `${this.scheduleResults.convertMiltaryTimeToStandard(yA.timeInfo.departure, "time")}${this.scheduleResults.convertMiltaryTimeToStandard(yA.timeInfo.departure, "amPm")}`;
                                Ge = [{
                                    svg: this.pdfSvgService.stopsWhiteOval
                                }, {
                                    text: `${Lr} | ${kr} - ${yA.station.name} (${yA.station.code}) `,
                                    fontSize: 8,
                                    margin: [0, 2, 0, 0]
                                }]
                            }
                            Y.push(Ge),
                            Ge = []
                        }
                        )
                    } else
                        "multi-segment" === this.routeType && this.activeTrain.forEach( (H, yA) => {
                            H.stops.forEach( (wt, Qt) => {
                                const Ge = `${this.activeTrain[yA].departure.departureTime}${this.activeTrain[yA].departure.amPm}`
                                  , Lr = `${this.activeTrain[yA].arrival.arrivalTime}${this.activeTrain[yA].arrival.amPm}`
                                  , kr = 0 === yA && 0 === Qt
                                  , Ur = this.activeTrain.length - 1 === yA && this.activeTrain[this.activeTrain.length - 1].stops.length - 1 === Qt
                                  , _r = 0 === Qt
                                  , dn = this.activeTrain[yA].stops.length - 1 === Qt
                                  , ha = (this.scheduleResults.convertMiltaryTimeToStandard(wt.timeInfo.arrival, "time"),
                                this.scheduleResults.convertMiltaryTimeToStandard(wt.timeInfo.arrival, "amPm"),
                                this.scheduleResults.convertMiltaryTimeToStandard(wt.timeInfo.departure, "time"),
                                this.scheduleResults.convertMiltaryTimeToStandard(wt.timeInfo.departure, "amPm"),
                                [])
                                  , l0 = [{
                                    margin: [2, 0, 0, 0],
                                    svg: this.pdfSvgService.stopsWhiteOval
                                }, {
                                    text: "" + (_r ? `Departs ${wt.station.name} (${wt.station.code}) - ${Ge}` : dn ? `Arrival ${wt.station.name} (${wt.station.code}) - ${Lr}` : ""),
                                    fontSize: 8,
                                    margin: [0, 2, 0, 0]
                                }];
                                let go = "";
                                void 0 !== this.activeTrain[yA + 1] && (go = "MBS" === this.activeTrain[yA + 1].transport.type || "BUS" === this.activeTrain[yA + 1].transport.type ? "Bus" : "Train");
                                const Oo = [{
                                    margin: [0, 0, 0, 0],
                                    svg: this.pdfSvgService.stopsGoldenOval
                                }, {
                                    margin: [0, 5, 0, 0],
                                    text: `Transfer in ${wt.station.name} to ${go} - ${this.transferTimes[0]}`,
                                    fontSize: 8,
                                    lineHeight: 1
                                }];
                                (_r || dn) && (kr || Ur ? (ha.push([{
                                    margin: [2, 0, 0, 0],
                                    svg: this.pdfSvgService.stopsBlueOval
                                }, {
                                    text: `${wt.station.name} (${wt.station.code}) - ${0 === Qt ? Ge : Lr}`,
                                    bold: !0
                                }]),
                                this.lastOvalColor = "blue") : (ha.push(l0),
                                this.lastOvalColor = "white",
                                dn ? (ha.push(Oo),
                                this.lastOvalColor = "gold",
                                this.transferTimes.shift()) : Ur && "gold" === this.lastOvalColor && Y.pop())),
                                0 !== ha.length && ha.forEach(yo => {
                                    Y.push(yo)
                                }
                                )
                            }
                            )
                        }
                        );
                    return Y
                }
                filterReservationsAndAmenities(a, Y) {
                    let H = [];
                    a.forEach(wt => {
                        null !== wt[Y] && (H = H.concat(wt[Y]))
                    }
                    );
                    const yA = new Set;
                    return H.filter(wt => {
                        const Qt = "reservations" === Y ? "serviceType" : "amenityType"
                          , Ge = yA.has(wt[Qt]);
                        return yA.add(wt[Qt]),
                        !Ge
                    }
                    )
                }
                compileServiceOfferings(a, Y) {
                    let H = ""
                      , yA = ""
                      , Ft = ""
                      , wt = []
                      , Qt = []
                      , Lr = !1;
                    null == Y ? (wt = this.filterReservationsAndAmenities(this.activeTrain, "reservations"),
                    Qt = this.filterReservationsAndAmenities(this.activeTrain, "amenities")) : (wt = this.activeTrain[Y].reservations,
                    Qt = this.activeTrain[Y].amenities);
                    let kr = 0;
                    return wt.forEach( (Ur, _r) => {
                        this.serviceOfferingsTracker.reservation = _r,
                        Lr = !0;
                        const Nn = this.pdfSvgService.buildServiceConfirmationText({
                            subject: Ur,
                            subjectIndex: _r
                        }, a.reservationText, 12, kr);
                        kr = Nn.yCord,
                        yA = yA += Nn.text
                    }
                    ),
                    null !== Qt && Qt.forEach( (Ur, _r) => {
                        this.serviceOfferingsTracker.amenity = _r;
                        const Nn = this.pdfSvgService.buildServiceConfirmationText({
                            subject: Ur,
                            subjectIndex: _r
                        }, a.amenityText, 12, kr)
                          , tn = Nn.text
                          , da = this.pdfSvgService.buildAmenityIcon({
                            name: Ur.amenityType,
                            code: Ur.code,
                            location: "serviceOfferings"
                        }, a.amenityIcons, _r, kr);
                        kr = Nn.yCord,
                        Ft = Ft += tn,
                        Ft = Ft += da,
                        Lr && 0 === _r && (kr += 10)
                    }
                    ),
                    H = H += yA,
                    H = H += Ft,
                    {
                        content: H,
                        rectHeight: kr
                    }
                }
                onOldPrint() {
                    window.print()
                }
                getScheduleFromStorage() {
                    return this.schedules.map(a => a[0])
                }
                getServiceNumberTableHeader() {
                    const a = this.getScheduleFromStorage()
                      , Y = [{
                        text: "Service Number",
                        style: "headerTitles"
                    }];
                    return a.forEach(H => {
                        Y.push(H.travelService.number)
                    }
                    ),
                    Y
                }
                getServiceNameTableHeader() {
                    const a = this.getScheduleFromStorage()
                      , Y = [{
                        text: "Service Names",
                        style: "headerTitles"
                    }];
                    return a.forEach(H => {
                        Y.push(H.travelService.name.desc_40.replace(" ", "\n"))
                    }
                    ),
                    Y
                }
                getFrequencyTableHeader() {
                    const a = this.getScheduleFromStorage()
                      , Y = [{
                        text: "Frequency",
                        style: "headerTitles"
                    }];
                    return a.forEach(H => {
                        let yA = H.schedulesAndStops.schedule.daysOfOperation;
                        Array.isArray(yA) && yA.every( (Ft, wt) => Ft === ["MON", "TUE", "WED", "THU", "FRI"][wt]) ? Y.push("Mo-Fr") : Array.isArray(yA) && yA.every( (Ft, wt) => Ft === ["SUN", "MON", "TUE", "WED", "THU"][wt]) ? Y.push("Su-Th") : Array.isArray(yA) && 7 === yA.length ? Y.push("Daily") : (yA = yA.map(Ft => {
                            switch (Ft) {
                            case "MON":
                                return "Mo";
                            case "TUE":
                                return "Tu";
                            case "WED":
                                return "We";
                            case "THU":
                                return "Th";
                            case "FRI":
                                return "Fr";
                            case "SAT":
                                return "Sa";
                            case "SUN":
                                return "Su";
                            default:
                                return ""
                            }
                        }
                        ),
                        Y.push(yA.join(", ")))
                    }
                    ),
                    Y
                }
                getDurationTableHeader() {
                    const a = this.getScheduleFromStorage()
                      , Y = [{
                        text: "Duration",
                        style: "headerTitles"
                    }];
                    return a.forEach(H => {
                        Y.push(H.schedulesAndStops.schedule.elapsedTime.match(RegExp(/([1-9]+0?H|\d+0?M)/g)).map(Ft => Ft.replace(/^0+/g, "").toLowerCase()).join(""))
                    }
                    ),
                    Y
                }
                getStationsTimesMatrix() {
                    const a = this.getScheduleFromStorage()
                      , Y = this.ecomStorage.getSessionStorage(c.D5.StorageName.STATION_ORDER, !0).stations
                      , H = (0,
                    V.findIndex)(Y, Ge => {
                        let Lr = !1;
                        return a.forEach(kr => {
                            (0,
                            V.indexOf)(Ge.RouteName, kr.travelService.name.desc_40) > -1 && (Lr = !0)
                        }
                        ),
                        Lr
                    }
                    );
                    let yA;
                    yA = H > -1 ? Y[H].stops.map(Ge => Ge.toUpperCase()) : a[0].schedulesAndStops.stops.map(Ge => Ge.station.code.toUpperCase());
                    const Ft = a.map(Ge => Ge.schedulesAndStops.stops);
                    let wt = [];
                    const Qt = this.schedulesData.fromStation;
                    return yA.forEach( (Ge, Lr) => {
                        const kr = [Ge].concat(a.map(Ur => "-"));
                        Ft.forEach( (Ur, _r) => {
                            const dn = Ur.filter(Nn => Nn.station.code === Ge);
                            dn.length > 0 && (kr[_r + 1] = Qt === dn[0].station.code ? MA(dn[0].timeInfo.departure, "HH:mm:ss").format("h:mma").slice(0, -1) : MA(dn[0].timeInfo.arrival, "HH:mm:ss").format("h:mma").slice(0, -1),
                            kr[0] = {
                                text: `${dn[0].station.name} ${dn[0].station.facility ? " - " + dn[0].station.facility + " " : " "}(${dn[0].station.code})`,
                                alignment: "left"
                            })
                        }
                        ),
                        wt.push(kr)
                    }
                    ),
                    wt = wt.filter(Ge => Ge.filter(Lr => "-" !== Lr).length > 1),
                    H > -1 && MA(wt[0][1], "h:mma").isAfter(MA(wt[wt.length - 1][1], "h:mma")) && (wt = wt.reverse()),
                    wt
                }
                paginateTableNode(a, Y) {
                    const yA = a.table.body.map(Qt => this.chunkBodyRow(Qt, Y))
                      , Ft = yA[0].map( (Qt, Ge) => yA.map(Lr => Lr[Ge]))
                      , wt = [];
                    return Ft.forEach(Qt => {
                        wt.push(this.spliceTableShell(a, Qt))
                    }
                    ),
                    delete wt[wt.length - 1].pageBreak,
                    wt
                }
                spliceTableShell(a, Y) {
                    const H = QA().cloneDeep(a)
                      , yA = QA().cloneDeep(Y);
                    return H.table.body = yA,
                    H
                }
                chunkBodyRow(a, Y) {
                    const H = a[0];
                    return a.slice(1).reduce( (wt, Qt, Ge) => {
                        const Lr = Math.floor(Ge / Y);
                        return wt[Lr] || (wt[Lr] = [H]),
                        wt[Lr].push(Qt),
                        wt
                    }
                    , [])
                }
                getStationOrder() {
                    const a = this.ecomStorage.getSessionStorage(c.D5.StorageName.STATION_ORDER, !0);
                    return a ? new e.c(Y => {
                        Y.next(a),
                        Y.complete()
                    }
                    ) : this.apiService.get(this.aemData.stopListsJsonURL).pipe((0,
                    l.T)(H => {
                        this.ecomStorage.updateSessionStorage(c.D5.StorageName.STATION_ORDER, JSON.stringify(H)),
                        this.stationOrderJson = H
                    }
                    ), (0,
                    n.u)())
                }
                getSegments() {
                    let a = 0
                      , Y = [];
                    return this.travelLegs.forEach( (H, yA) => {
                        "Self Transfer" !== H.travelService.name && (Y.push(H),
                        Y[a].hasLayover = this.travelLegs[yA] && this.travelLegs[yA + 1] && !this.travelLegs[yA + 1].isSelfTransfer || !1,
                        Y[a].isSelfTransfer = this.travelLegs[yA] && this.travelLegs[yA + 1] && this.travelLegs[yA + 1].isSelfTransfer || !1,
                        Y[a].layover = Y[a].hasLayover ? s.LD.getLayover(this.travelLegs[yA].destination.schedule.arrivalDateTime, this.travelLegs[yA + 1].origin.schedule.departureDateTime) + " " : "",
                        Y[a].transferStation = Y[a].isSelfTransfer ? this.travelLegs[yA + 1].destination.code : this.travelLegs[yA].destination.code,
                        0 == a ? (Y[a].isCollapsed = !1,
                        this.showCBNmsg = !1) : Y[a].isCollapsed = !0,
                        Y[a].popoverInfo = Y[a].isSelfTransfer ? {
                            title: this.aemLabels.selfTransfer.popoverTitle,
                            message: this.aemLabels.selfTransfer.popoverContent
                        } : {
                            title: this.aemLabels.transfer.popoverTitle,
                            message: this.aemLabels.transfer.popoverContent
                        },
                        H.segmentNumber = a + 1,
                        a++)
                    }
                    ),
                    this.journeySegments = JSON.parse(JSON.stringify(this.travelLegs)),
                    Y
                }
                getTransferTime(a) {
                    return this.segments[a].layover
                }
                getConnection(a) {
                    return this.aemLabels.transfer.type + " " + this.travelLegs[a].destination.name + " | " + this.travelLegs[a].layover + " " + this.aemLabels.transfer.layover
                }
                getFormattedFacilityName(a) {
                    const Y = new DA.x(this.ecomStorage).transform(a, this.FIELDNAMES.FacilityName32);
                    if (Y)
                        return "- " + Y
                }
                getTransferText(a) {
                    return this.segments[a].isSelfTransfer ? this.aemLabels.selfTransfer.type : this.aemLabels.transfer.type
                }
                getConnectionText(a) {
                    return this.segments[a].isSelfTransfer ? this.aemLabels.selfTransfer.label : this.aemLabels.transfer.label
                }
                getSegmentDuration(a) {
                    return "(" + s.LD.getDuration(a) + ")"
                }
                getContentFromHTMLString(a) {
                    const Y = document.createElement("span");
                    return Y.innerHTML = a,
                    Y.textContent || Y.innerText
                }
                getAmenityIcon(a) {
                    return "/" + a.replace(/ /g, "") + ".svg"
                }
                getAmenityUrl(a) {
                    let Y = "";
                    return this.mappings.contentPath().pipe((0,
                    v.s)(1)).subscribe(yA => {
                        Y = yA["accommodation-path"]
                    }
                    ),
                    Y + a.toLowerCase().replace(/ /g, "-") + ".html"
                }
                hasCheckedBaggage(a) {
                    let Y = !1;
                    return a.forEach(H => {
                        H.name === this.AMENITIES.Checked_Baggage && (Y = !0)
                    }
                    ),
                    Y
                }
                getDayInRange(a, Y, H) {
                    const yA = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"].indexOf(H.toLowerCase())
                      , Ft = new Date(a)
                      , wt = new Date(Y);
                    for (; Ft <= wt; ) {
                        if (Ft.getDay() === yA)
                            return Ft.toISOString().split("T")[0] + "T00:00:00";
                        Ft.setDate(Ft.getDate() + 1)
                    }
                    return a
                }
                getPopoverInfo() {
                    if (this.isScheduleView && "Route" == this.schedulesData.type) {
                        const yA = this.getDayInRange(this.schedulesData.startDate, this.schedulesData.endDate, this.train.schedulesAndStops.schedule.daysOfOperation[0]);
                        this.getTrainStations(this.train.travelService.number, this.train.origin.code, this.train.destination.code, yA).subscribe(wt => {
                            this.classServices = [],
                            this.ancillaryServices = [],
                            !wt.error && (this.amenitiesExist = wt.data.travelService?.Amenity,
                            this.reservationExist = wt.data.travelService?.RBD,
                            this.amenitiesExist && this.reservationExist && (0 == this.amenitiesExist.length && 0 == this.reservationExist.length ? this.disabledDetails = !0 : (this.amenitiesExist.length > 0 || this.reservationExist.length > 0 || 0 == this.amenitiesExist.length || 0 == this.reservationExist.length) && (this.disabledDetails = !1)),
                            this.trainName = wt.data.travelService.name.desc_40,
                            this.trainNumber = wt.data.travelService.number,
                            null != wt.data.travelService.RBD && wt.data.travelService.RBD.forEach(Qt => {
                                Qt && Qt.serviceSubTypeName && "Ancillary" === Qt.serviceSubTypeName ? this.ancillaryServices.push(Qt) : this.classServices.push(Qt)
                            }
                            ))
                        }
                        )
                    }
                    let a = !1
                      , Y = !1
                      , H = 0;
                    if (this.journeySegments && (this.trainsSolutionsSubset = this.travelLegs,
                    this.trains = [],
                    this.journeySegments.forEach( (yA, Ft) => {
                        yA.error = !0,
                        yA.isSelfTransfer && (a = !0,
                        H = Ft),
                        "CBN" === yA.destination.code && (Y = !0,
                        H = Ft),
                        this.isScheduleView || (this.classServices = [],
                        this.ancillaryServices = [],
                        yA.ancillaryServices = [],
                        yA.classServices = [],
                        yA.trainStops = [],
                        yA.travelService.number && this.getTrainStations(yA.travelService.number, yA.origin.code, yA.destination.code, yA.origin.schedule.departureDateTime).subscribe(Qt => {
                            if (this.classServices = [],
                            this.ancillaryServices = [],
                            Qt.error)
                                return;
                            yA.error = !1,
                            Qt.data.hasLayover = this.travelLegs[Ft] && this.travelLegs[Ft + 1] && !this.travelLegs[Ft + 1].isSelfTransfer || !1,
                            yA.isSelfTransfer = this.travelLegs[Ft] && this.travelLegs[Ft + 1] && this.travelLegs[Ft + 1].isSelfTransfer || !1,
                            yA.layover = Qt.data.hasLayover ? s.LD.getLayover(this.travelLegs[Ft].destination.schedule.arrivalDateTime, this.travelLegs[Ft + 1].origin.schedule.departureDateTime) + " " : "",
                            Qt.data.transferStation = Qt.data.isSelfTransfer ? this.travelLegs[Ft + 1].destination.code : this.travelLegs[Ft].destination.code,
                            this.destinationCode = Qt.data.transferStation;
                            const Ge = yA.travelService.type
                              , Lr = yA.travelService.carrierName
                              , kr = yA.travelService.carrierNumber
                              , Ur = yA.travelService.name;
                            yA.travelService = Qt.data.travelService,
                            yA.travelService.type = Ge,
                            yA.travelService.carrierName = Lr,
                            yA.travelService.carrierNumber = kr,
                            yA.travelService.name = Ur,
                            this.trains = [],
                            this.trains.push(Qt.data),
                            this.trainDetails = [],
                            this.trainDetails.push(...this.trains),
                            yA.trainDetails = this.trainDetails,
                            yA.trainStops = [],
                            yA.trainStops = Qt.data.schedulesAndStops.stops,
                            this.isMultiSegment = !1,
                            this.isTransferSelected = !1,
                            !this.isTrainSelected && (0 === this.trainsSolutionsSubset.length || this.cancelledTrain) && (this.initialRoute = !0),
                            this.checkMultiSegmentDisplay(),
                            !this.isMultiSegment && this.trainDetails[0].Restricted && (this.isRestricted = !0),
                            Qt.data.travelService.RBD.forEach(_r => {
                                _r && _r.serviceSubTypeName && "Ancillary" === _r.serviceSubTypeName ? this.ancillaryServices.some(dn => dn.serviceTypeName == _r.serviceTypeName) || (this.ancillaryServices.push(_r),
                                yA.ancillaryServices = this.ancillaryServices) : this.classServices.some(dn => dn.serviceTypeName == _r.serviceTypeName) || (this.classServices.push(_r),
                                yA.classServices = this.classServices)
                            }
                            )
                        }
                        ))
                    }
                    , yA => console.log(yA))),
                    a) {
                        const yA = this.TransferUrl.replace("{{stationCode}}", this.segments[H].origin.code.toLowerCase())
                          , Ft = this.headerConfig.appTypeHeader();
                        let wt = "";
                        return this.apiService.get(yA, Ft).pipe((0,
                        v.s)(1)).subscribe(Qt => {
                            wt = Qt.content,
                            this.popoverInfo = {
                                title: "Self Transfer",
                                message: wt
                            };
                            const Ge = this.getContentFromHTMLString(Qt.content)
                              , Lr = Ge.indexOf("<p>")
                              , kr = Ge.indexOf("</p>");
                            this.m1 = Ge.substring(Lr, kr)
                        }
                        , Qt => wt = ""),
                        void (this.popoverInfo = {
                            title: "Self Transfer",
                            message: wt
                        })
                    }
                    if (Y) {
                        const yA = this.TransferUrl.replace("{{stationCode}}", this.segments[H].destination.code.toLowerCase())
                          , Ft = this.headerConfig.appTypeHeader();
                        let wt = "";
                        return this.apiService.get(yA, Ft).pipe((0,
                        v.s)(1)).subscribe(Qt => {
                            wt = Qt.content,
                            this.popoverInfo = {
                                title: "Customs Inspection",
                                message: wt
                            };
                            const Ge = this.getContentFromHTMLString(Qt.content)
                              , Lr = Ge.indexOf("<p>")
                              , kr = Ge.indexOf("</p>");
                            this.msg = Ge.substring(Lr, kr)
                        }
                        , Qt => wt = ""),
                        void (this.popoverInfo = {
                            title: "Customs Inspection",
                            message: wt
                        })
                    }
                }
                getTrainStations(a, Y, H, yA) {
                    const Ft = this.aemData.trainStaionsUrl + `/${a}/train/stops?origin=${Y}&destination=${H}&startDate=${yA}`
                      , wt = this.headerConfig.appTypeHeader()
                      , Qt = new wA.B7;
                    return this.apiService.get(Ft, wt).pipe((0,
                    v.s)(1)).subscribe(Ge => {
                        Qt.next(Ge)
                    }
                    , Ge => console.log("error in getting train stations", Ge)),
                    Qt.asObservable()
                }
                checkMultiSegmentDisplay() {
                    this.isMultiSegment = this.travelLegs.length > 1
                }
                showSegmentDetailsDropdown(a) {
                    this.modalBody.nativeElement.scrollTop = 0,
                    this.showCBNmsg = !1;
                    const Y = this.journeySegments[a].isCollapsed;
                    this.journeySegments.forEach(H => {
                        H.isCollapsed = !0
                    }
                    ),
                    this.journeySegments[a].isCollapsed = !Y
                }
                showCBNDropdown(a) {
                    if (this.journeySegments[a].isCollapsed)
                        return this.showCBNmsg ? void (this.showCBNmsg = !1) : (this.showCBNmsg = !0,
                        void this.journeySegments.forEach(Y => {
                            Y.isCollapsed = !0
                        }
                        ));
                    this.showCBNmsg = !0,
                    this.journeySegments.forEach(Y => {
                        Y.isCollapsed = !0
                    }
                    )
                }
                getTrainName(a) {
                    return a.name.desc_40 ? a.name.desc_40 : a.name
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(zA.Q),A.rXU(at.I),A.rXU(t.G),A.rXU(S.H),A.rXU(u),A.rXU(E),A.rXU(i.x))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["schedule-trip-details-dropdown"]],
                    viewQuery: function(Y, H) {
                        if (1 & Y && (A.GBs(ct, 5),
                        A.GBs(mt, 7),
                        A.GBs(OA, 7)),
                        2 & Y) {
                            let yA;
                            A.mGM(yA = A.lsd()) && (H.modalBody = yA.first),
                            A.mGM(yA = A.lsd()) && (H.allPdf = yA.first),
                            A.mGM(yA = A.lsd()) && (H.selectedPdf = yA.first)
                        }
                    },
                    inputs: {
                        isMultiSegment: "isMultiSegment",
                        travelLegs: "travelLegs",
                        aemLabels: "aemLabels",
                        aemData: "aemData",
                        journeySolution: "journeySolution",
                        train: "train",
                        isPrint: "isPrint",
                        aemContent: "aemContent",
                        isScheduleView: "isScheduleView",
                        transferTimes: "transferTimes",
                        pagination: "pagination",
                        startDate: "startDate",
                        activeTrain: "activeTrain"
                    },
                    outputs: {
                        filterSchedule: "filterSchedule"
                    },
                    features: [A.OA$],
                    decls: 13,
                    vars: 13,
                    consts: [["tripDetailsBtn", ""], ["tripDetails", ""], ["allPdf", ""], ["selectedPdf", ""], ["modalBody", ""], ["servicesTmpl", ""], ["layover", ""], ["routeTmpl", ""], [1, "trip-details"], [1, "mt-sm-3"], ["position", "bottom-right", "className", "d-flex", "btnClassName", "", "inlineClassName", "am-modal--inline", "modalClassName", "am-modal--inline modal-dialog-centered modal-xs modal-inner-scroll ", 3, "buttonTpl", "contentTpl", "openModalInMobile", "openModalInTablet", "keepOpenOnBreakpointChange"], [1, "pdfDivs"], [3, "pdfType", "aemLabels", "footerPages", "startDate"], ["amt-auto-test-id", "trip-details-link", "mdbDropdownToggle", "", "tabindex", "-1", 1, "am-link", "dropdown-toggle", "p-0", 3, "click"], [4, "ngIf"], ["class", "dropdown-arrow", 3, "src", "alt", 4, "ngIf"], ["class", "img-style-box", 3, "src", "alt", 4, "ngIf"], [1, "dropdown-arrow", 3, "src", "alt"], [1, "img-style-box", 3, "src", "alt"], [1, "details-modal-container"], [1, "modal-header"], ["class", "modal-title text-left w-100", 4, "ngIf"], ["class", "schedule-modal-title text-left", 4, "ngIf"], ["type", "button", "aria-label", "Close", "amt-auto-test-id", "search-sort-filter-collapse-button", 1, "close", "pull-right", 3, "click"], [1, "modal-body", "p-0", "pt-0"], ["class", "dropdown-container", 4, "ngIf"], [1, "modal-title", "text-left", "w-100"], [1, "schedule-modal-title", "text-left"], [1, "dropdown-container"], ["role", "tablist", "ariaLabel", "aemLabels.viewTripDetails", 1, "am-tabs", "am-tabs--dark", "bordered-tabs", 3, "justified"], ["role", "tab", "aria-selected", "true", 3, "heading"], ["role", "tabpanel", 4, "ngFor", "ngForOf"], ["role", "tabpanel"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "transfer", 4, "ngIf"], [1, "row", "segment-details"], [1, "col-11", "col-lg-11"], [1, "travel-type"], [1, "col-1", "col-lg-1", "col-md-1", "pl-0", "pt-2", "pull-right"], ["class", "ml-4", 4, "ngIf"], ["class", "col-11 col-lg-11 ml-4 selfTrancontent", 4, "ngIf"], ["alt", "Bus icon", 1, "train-img", "ml-2", 3, "src"], [1, "train-name", "ml-2"], [1, "pl-5"], ["alt", "Train icon", 1, "train-img", "ml-2", 3, "src"], ["alt", "Ferry icon", 1, "train-img", "ml-2", 3, "src"], [1, "travel-type-service"], ["alt", "Self transfer icon", 1, "train-img", 3, "src"], ["class", "pl-5 ml-1", 4, "ngIf"], [1, "pl-5", "ml-1"], ["alt", "Taxi icon", 1, "train-img", "ml-2", 3, "src"], ["aria-label", "toggle summary", "data-ada", "button", "tabindex", "0", 1, "button-style", 3, "click"], [3, "ngClass"], [1, "ml-4"], ["class", "amenities mb-2", 4, "ngIf"], [1, "amenities", "mb-2"], [1, "amenities-title", "pt-2"], [1, "amenities-details"], ["class", "d-inline", 4, "ngFor", "ngForOf"], [1, "d-inline"], [3, "modalTitle", "text", "content"], ["class", "d-inline w-100", 4, "ngFor", "ngForOf"], [1, "d-inline", "w-100"], [3, "modalTitle", "text", "content", "altText", "customIcon"], [1, "col-11", "col-lg-11", "ml-4", "selfTrancontent"], [3, "innerHTML"], [1, "transfer"], [4, "ngIf", "ngIfElse"], ["alt", "self transfer icon", 1, "selfTransferIcon", 3, "src"], [1, "transfer-text", "mr-2"], [1, "row", "segment-details", "cbn"], [1, "pl-2"], ["class", "col-11 col-lg-11 ml-4 pt-4 selfTrancontent", 4, "ngIf"], [1, "cbnbottom"], [1, "col-11", "col-lg-11", "ml-4", "pt-4", "selfTrancontent"], [1, "dropdown-body"], [1, "amenities"], [1, "amenities-title", "pt-2", "text-left", "mb-0"], [1, "amenities-details", "m-0"], ["class", "d-inline text-left", 4, "ngFor", "ngForOf"], ["class", "amenities", 4, "ngIf"], [1, "d-inline", "text-left"], [1, "class-style"], ["class", "d-inline text-left w-100", 4, "ngFor", "ngForOf"], [1, "d-inline", "text-left", "w-100"], [1, "row"], [1, "travel-type", "pl-2"], ["class", "mt-4", 4, "ngIf"], ["class", "modal-title title", 4, "ngIf"], ["class", "train-stopbar", 4, "ngIf"], [1, "mt-4"], ["class", "selfTrancontent1", 4, "ngIf"], [1, "selfTrancontent1"], [1, "modal-title", "title"], [3, "trainsSolutionsSubset", "trainDetails", "isTrainSelected", "initialRoute", "cancelledTrain", "content", "isMobileView", "destinationCode", "isRestricted"], [1, "train-stopbar"], [1, "stops-list"], [1, "stops-list-item", "first-ele", "initial-route"], [1, "stop-name"], [1, "line-style"], [1, "mt-18", "stops-list-item", "last-ele"], ["alt", "self transfer icon", 1, "test", 3, "src"], [1, "col-11", "col-lg-11", "travel-type", "pl-2"], ["class", "col-11 col-lg-11 ml-4 pt-2 selfTrancontent", 4, "ngIf"], [1, "col-11", "col-lg-11", "ml-4", "pt-2", "selfTrancontent"], [1, "amenities-title", "pt-2", "text-left", "mb-0", "ml-2"], ["class", "dropdown-body", 4, "ngIf"], [1, "row", "mb-4", "pl-4"], ["class", "print-button text-left", 3, "click", 4, "ngIf"], [1, "print-button", "text-left", 3, "click", "disabled"], [1, "print-button", "text-left", 3, "click"], ["alt", "Menu icon", 1, "menu-icon", 3, "src", "alt"]],
                    template: function(Y, H) {
                        if (1 & Y && (A.j41(0, "div", 8)(1, "div", 9),
                        A.nrm(2, "am-dropdown", 10),
                        A.k0s()(),
                        A.DNE(3, Gt, 4, 3, "ng-template", null, 0, A.C5r)(5, fs, 13, 7, "ng-template", null, 1, A.C5r),
                        A.j41(7, "div", 11, 2),
                        A.nrm(9, "app-pdf", 12),
                        A.k0s(),
                        A.j41(10, "div", 11, 3),
                        A.nrm(12, "app-pdf", 12),
                        A.k0s()),
                        2 & Y) {
                            const yA = A.sdS(4)
                              , Ft = A.sdS(6);
                            A.R7$(2),
                            A.Y8G("buttonTpl", yA)("contentTpl", Ft)("openModalInMobile", !0)("openModalInTablet", !0)("keepOpenOnBreakpointChange", !0),
                            A.R7$(7),
                            A.Y8G("pdfType", "all")("aemLabels", H.aemLabels)("footerPages", H.footerPages)("startDate", H.startDate),
                            A.R7$(3),
                            A.Y8G("pdfType", "selected")("aemLabels", H.aemLabels)("footerPages", H.footerPages)("startDate", H.startDate)
                        }
                    },
                    dependencies: [Jr.YU, Jr.Sq, Jr.bT, Jr.T3, h.V6, h.fw, HA.UL, F.Ps, it.T, m.t, XA, DA.x],
                    styles: ['@charset "UTF-8";.trip-details[_ngcontent-%COMP%]{position:relative;background-color:#fff}.trip-details[_ngcontent-%COMP%]   .list-box-style[_ngcontent-%COMP%]{box-sizing:border-box;border:1px solid #d4d8d9;background-color:#fff;width:280px}.trip-details[_ngcontent-%COMP%]   .segment-details[_ngcontent-%COMP%]{border:1px solid #d4d8d9;border-radius:.3rem;word-wrap:break-word;width:100%;margin-right:0;margin-left:0}.trip-details[_ngcontent-%COMP%]   .modal-body[_ngcontent-%COMP%]{overflow-y:overlay}.trip-details[_ngcontent-%COMP%]   .details-modal-container[_ngcontent-%COMP%]{width:100%;min-width:300px}.trip-details[_ngcontent-%COMP%]   .details-modal-container[_ngcontent-%COMP%]   .img-style-box[_ngcontent-%COMP%]{width:18px;height:18px}@media (min-width: 992px){.trip-details[_ngcontent-%COMP%]   .details-modal-container[_ngcontent-%COMP%]{margin-bottom:4rem}}.trip-details[_ngcontent-%COMP%]   .modal-title[_ngcontent-%COMP%]{font-weight:400}.trip-details[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{float:left;width:100%;margin-bottom:2px;margin-left:5px}.trip-details[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]{font-size:1.2rem;text-decoration:none;background:transparent!important}.trip-details[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{display:none}.trip-details[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:5px}.trip-details[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]   .dropdown-arrow[_ngcontent-%COMP%]{width:10px;margin-bottom:-4px;transition:all .1s ease-in-out}.trip-details[_ngcontent-%COMP%]   .dropdown-toggle[aria-expanded=true][_ngcontent-%COMP%]   .dropdown-arrow[_ngcontent-%COMP%]{transform:rotate(180deg)}.trip-details[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{left:auto;right:30px;width:280px;padding-bottom:11px;margin:0 0 100px;transform:translateZ(0);box-shadow:0 4px 8px #0c00331a;background-color:#fff;border:none}@media (min-width: 576px){.trip-details[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{right:-1px}}@media (min-width: 768px){.trip-details[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{right:30px}}.trip-details[_ngcontent-%COMP%]   .dropdown-container[_ngcontent-%COMP%]{padding:0 15px 15px;line-height:17px;max-height:500px}.trip-details[_ngcontent-%COMP%]   .dropdown-header[_ngcontent-%COMP%]{padding:0 0 10px;border-bottom:1px solid #d4d8d9}.trip-details[_ngcontent-%COMP%]   .dropdown-header[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#002436;font-size:16px;font-weight:700}.trip-details[_ngcontent-%COMP%]   .dropdown-header[_ngcontent-%COMP%]   .dropdown-arrow[_ngcontent-%COMP%]{width:12px;margin-top:6px;transform:rotate(180deg);float:right}.trip-details[_ngcontent-%COMP%]   .separator-before[_ngcontent-%COMP%]{border-left:3px dashed #f9a13f;position:relative;margin-left:5px}.trip-details[_ngcontent-%COMP%]   .separator-after[_ngcontent-%COMP%]{position:relative;left:8px}.trip-details[_ngcontent-%COMP%]   .selfTrancontent[_ngcontent-%COMP%]{padding-left:2.5rem}.trip-details[_ngcontent-%COMP%]   .selfTrancontent1[_ngcontent-%COMP%]{float:right;margin-left:22px}.trip-details[_ngcontent-%COMP%]   .cbnbottom[_ngcontent-%COMP%]{position:relative;margin-left:18px;border-left:3px dashed #f9a13f;padding:9px 0}.trip-details[_ngcontent-%COMP%]   .cbn[_ngcontent-%COMP%]{padding:8px 0 8px 2px}.trip-details[_ngcontent-%COMP%]   .transfer[_ngcontent-%COMP%]{position:relative;margin-left:18px;border-left:3px dashed #f9a13f;padding:9px 0}.trip-details[_ngcontent-%COMP%]   .transfer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:24px;color:#f9a13f;margin-left:-14px;background-color:#fff;margin-top:2px}.trip-details[_ngcontent-%COMP%]   .transfer[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{padding:2px 4px}.trip-details[_ngcontent-%COMP%]   .transfer[_ngcontent-%COMP%]   .transfer-text[_ngcontent-%COMP%]{font-size:1.2rem;margin-left:10px;margin-top:-22px;margin-bottom:2px;text-align:left}.trip-details[_ngcontent-%COMP%]   .test[_ngcontent-%COMP%]{margin-left:2px}.trip-details[_ngcontent-%COMP%]   .separator-before[_ngcontent-%COMP%]:before, .trip-details[_ngcontent-%COMP%]   .separator-after[_ngcontent-%COMP%]:before{content:"";position:absolute;width:12px;height:12px;background:#f9a13f;border-radius:50%;left:-7px}.trip-details[_ngcontent-%COMP%]   .travel-type[_ngcontent-%COMP%], .trip-details[_ngcontent-%COMP%]   .travel-type-service[_ngcontent-%COMP%]{padding:6px 0;color:#002436;font-size:1.2rem}.trip-details[_ngcontent-%COMP%]   .station-details[_ngcontent-%COMP%]{padding:0 0 20px 15px}.trip-details[_ngcontent-%COMP%]   .station-details[_ngcontent-%COMP%]   .station[_ngcontent-%COMP%]{font-family:OpenSans,Helvetica,Arial,"sans-serif";color:#002436;font-size:14px;font-weight:600}.trip-details[_ngcontent-%COMP%]   .station-details[_ngcontent-%COMP%]   .train[_ngcontent-%COMP%], .trip-details[_ngcontent-%COMP%]   .station-details[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{color:#002436;opacity:.75;font-size:12px}.trip-details[_ngcontent-%COMP%]   .amenities-divider[_ngcontent-%COMP%]{margin:0;border:1px solid #d4d8d9}.trip-details[_ngcontent-%COMP%]   .amenities-title[_ngcontent-%COMP%]{color:#002436;font-size:14px;margin:0}.trip-details[_ngcontent-%COMP%]   .amenities-details[_ngcontent-%COMP%]{padding:5px 0;color:#002436;font-size:12px;overflow:hidden}.trip-details[_ngcontent-%COMP%]   .amenities-details[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{position:relative;float:left;width:50%;margin-top:5px}.trip-details[_ngcontent-%COMP%]   .amenities-details[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .amenities-details-text[_ngcontent-%COMP%]{margin-left:20px;line-height:18px;margin-top:.7em}.trip-details[_ngcontent-%COMP%]   .class-style[_ngcontent-%COMP%]{height:14px;width:47px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:10px;letter-spacing:0;line-height:14px;text-align:center}.trip-details[_ngcontent-%COMP%]   .img-style-box[_ngcontent-%COMP%]{width:18px;height:18px}.trip-details[_ngcontent-%COMP%]   .schedule-modal-title[_ngcontent-%COMP%]{font-size:10px;font-weight:600;line-height:28px}.trip-details[_ngcontent-%COMP%]   .print-button[_ngcontent-%COMP%]{font-weight:600;background-color:#fff}.trip-details[_ngcontent-%COMP%]   .menu-icon[_ngcontent-%COMP%]{width:25px;height:25px;margin-right:10px}.trip-details[_ngcontent-%COMP%]   .pdfTemplates[_ngcontent-%COMP%], .pdfDivs[_ngcontent-%COMP%]{visibility:hidden!important;height:0!important;width:0!important;overflow:hidden}.toggle-arrow[_ngcontent-%COMP%]{content:"";border:solid #002436;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.toggle-white-arrow[_ngcontent-%COMP%]{content:"";border:solid #fff;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-white-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-white-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.button-style[_ngcontent-%COMP%]{border:none;background-color:transparent;outline:none!important;float:right}.change-background[_ngcontent-%COMP%]{background-color:#00537e;border-radius:8px 8px 0 0;border-bottom:0px}.dropdown-box[_ngcontent-%COMP%]{box-sizing:border-box;height:102%;width:357px;border:1px solid #d4d8d9;background-color:#fff;border-radius:0 0 8px 8px;border-top:0px}.duration-style[_ngcontent-%COMP%]{height:14px;width:50px;color:#002436;font-size:10px;line-height:14px}.train-img[_ngcontent-%COMP%]{height:25px;width:25px}.train-stopbar[_ngcontent-%COMP%]{display:block}ul.stops-list[_ngcontent-%COMP%]{display:block;list-style:none;margin-left:10px;padding-left:0}li.stops-list-item[_ngcontent-%COMP%]{display:flex}li.stops-list-item[_ngcontent-%COMP%]:before{display:block;width:18px;height:18px;min-width:18px;border-radius:50%;background-color:#00537e;line-height:20px;text-align:center;content:""}.stop-name[_ngcontent-%COMP%]{margin-left:7px;min-height:19px;font-size:14px;letter-spacing:.1px;line-height:19px}.line-style[_ngcontent-%COMP%]{position:relative;margin-left:8px;border-left:2px solid #00537e;padding:11px 0 22px;top:-5px}.inner-line-style[_ngcontent-%COMP%]{position:relative;margin-left:-10px;border-left:2px solid #00537e;padding:11px 0 24px;top:-24px}.inner-stops-line-style[_ngcontent-%COMP%]{position:relative;margin-left:-10px;border-left:2px solid #00537e;padding:11px 0 26px;top:-37px}.train-name[_ngcontent-%COMP%]{font-size:12px}@media (min-width: 768px){.train-name[_ngcontent-%COMP%]{font-size:14px}}.serviceBox[_ngcontent-%COMP%]{width:85px}']
                })
                }
            }
            return x
        }
        )();
        const Ma = (x, ZA) => ({
            "change-background": x,
            "change-background-color": ZA
        })
          , io = (x, ZA) => ({
            "px-md-2 px-lg-2 px-0": x,
            "mt-4": ZA
        })
          , Vi = x => ({
            "text-style-color": x
        })
          , Os = (x, ZA) => ({
            "text-style-color": x,
            "w-60": ZA
        })
          , qo = (x, ZA) => ({
            "text-style-color": x,
            "w-114": ZA
        })
          , bo = x => ({
            details: x
        })
          , Co = (x, ZA, a) => ({
            "up toggle-white-arrow": x,
            "down toggle-arrow": ZA,
            "toggle-white-arrow": a
        })
          , ka = (x, ZA, a) => ({
            "mb-3": x,
            "pl-20": ZA,
            "pl-30": a
        });
        function _o(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 24),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40), ".svg", A.B4B)
            }
        }
        function js(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 24),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.FCK("alt", "", null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40, " ", null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.type ? null : a.trainData.travelService.type.code, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/route_", A.bMT(1, 6, null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.type ? null : a.trainData.travelService.type.code), ".svg", A.B4B)
            }
        }
        function Ta(x, ZA) {
            if (1 & x && A.nrm(0, "img", 25),
            2 & x) {
                const a = A.XpG();
                A.Mz_("src", "", a.env.damAssetPath, "/icons/train-routes/route_train.svg", A.B4B)
            }
        }
        function Xi(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 26),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.name), "-white.svg", A.B4B)
            }
        }
        function As(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 24),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), ".svg", A.B4B)
            }
        }
        function aa(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 26),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), "-white.svg", A.B4B)
            }
        }
        function ai(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 24),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40), ".svg", A.B4B)
            }
        }
        function sa(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 26),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.name), "-white.svg", A.B4B)
            }
        }
        function To(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 24),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), ".svg", A.B4B)
            }
        }
        function po(x, ZA) {
            if (1 & x && (A.nrm(0, "img", 26),
            A.nI1(1, "urlEncoderFriendly")),
            2 & x) {
                const a = A.XpG();
                A.Mz_("alt", "", a.name, " Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(1, 5, a.icon), "-white.svg", A.B4B)
            }
        }
        function ao(x, ZA) {
            if (1 & x && (A.j41(0, "label", 27),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("ngClass", A.eq3(2, Vi, a.showSummary || a.selectedTrain)),
                A.R7$(),
                A.JRh(null == a.trainData || null == a.trainData.travelService ? null : a.trainData.travelService.number)
            }
        }
        function Ka(x, ZA) {
            if (1 & x && (A.j41(0, "label", 28),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("hidden", a.mobile)("ngClass", A.eq3(3, Vi, a.showSummary || a.selectedTrain)),
                A.R7$(),
                A.JRh(null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40)
            }
        }
        function Js(x, ZA) {
            if (1 & x && (A.j41(0, "label", 27),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("ngClass", A.eq3(2, Vi, a.showSummary || a.selectedTrain)),
                A.R7$(),
                A.JRh(null == a.trainData || null == a.trainData.travelService ? null : a.trainData.travelService.number)
            }
        }
        function hs(x, ZA) {
            if (1 & x && (A.j41(0, "label", 28),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("hidden", a.mobile)("ngClass", A.eq3(3, Vi, a.showSummary || a.selectedTrain)),
                A.R7$(),
                A.JRh(null == a.trainData || null == a.trainData.travelService || null == a.trainData.travelService.name ? null : a.trainData.travelService.name.desc_40)
            }
        }
        function Dr(x, ZA) {
            if (1 & x && (A.j41(0, "label", 29),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("hidden", a.mobile)("ngClass", A.l_i(3, Os, a.showSummary || a.selectedTrain, a.isMultiSegment)),
                A.R7$(),
                A.JRh(a.name)
            }
        }
        function bc(x, ZA) {
            if (1 & x && (A.j41(0, "label", 29),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("hidden", !a.mobile)("ngClass", A.l_i(3, qo, a.showSummary || a.selectedTrain, a.isMultiSegment)),
                A.R7$(),
                A.JRh(a.noOfSegment)
            }
        }
        function ya(x, ZA) {
            if (1 & x && (A.j41(0, "label", 30),
            A.nrm(1, "span", 31),
            A.EFF(2),
            A.nI1(3, "titlecase"),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("ngClass", A.eq3(4, Vi, a.showSummary || a.selectedTrain)),
                A.R7$(2),
                A.JRh(A.bMT(3, 2, a.trainStatus))
            }
        }
        function z0(x, ZA) {
            if (1 & x && A.nrm(0, "img", 32),
            2 & x) {
                const a = A.XpG();
                A.FCK("src", "", a.env.damAssetPath, "/icons/", a.getArrowIconPath((null == a.trainData ? null : a.trainData.nightFlag) || (null == a.trainData[0] || null == a.trainData[0].schedulesAndStops || null == a.trainData[0].schedulesAndStops.schedule ? null : a.trainData[0].schedulesAndStops.schedule.nightFlag)), ".svg", A.B4B)
            }
        }
        function so(x, ZA) {
            if (1 & x && A.nrm(0, "img", 32),
            2 & x) {
                const a = A.XpG();
                A.FCK("src", "", a.env.damAssetPath, "/icons/", a.getArrowIconPath((null == a.trainData ? null : a.trainData.nightFlag) || (null == a.trainData[0] || null == a.trainData[0].schedulesAndStops || null == a.trainData[0].schedulesAndStops.schedule ? null : a.trainData[0].schedulesAndStops.schedule.nightFlag)), "-white.svg", A.B4B)
            }
        }
        function $o(x, ZA) {
            if (1 & x && (A.j41(0, "label", 34),
            A.EFF(1),
            A.nI1(2, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.Y8G("ngClass", A.eq3(5, Vi, a.showSummary || a.selectedTrain)),
                A.R7$(),
                A.JRh(A.i5U(2, 2, a.endDate, "E, MMM d"))
            }
        }
        function yi(x, ZA) {
            if (1 & x && (A.j41(0, "div"),
            A.DNE(1, $o, 3, 7, "label", 33),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.R7$(),
                A.Y8G("ngIf", a.isOverNightTrain(null == a.trainData ? null : a.trainData.nightFlag))
            }
        }
        function uc(x, ZA) {
            if (1 & x && A.nrm(0, "schedule-trip-details-dropdown", 35),
            2 & x) {
                const a = A.XpG();
                A.Y8G("travelLegs", a.travelLegs)("isMultiSegment", a.multiSegment)("aemLabels", a.aemLabels)("aemData", a.aemData)("aemContent", a.aemContent)("isScheduleView", !0)("journeySolution", a.journeySolution)("train", a.trainData)("ngClass", A.eq3(11, bo, a.selectedTrain))("activeTrain", a.activeTrainInfo)("transferTimes", a.transferTimes)
            }
        }
        function fc(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "button", 36),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG();
                    return A.Njj(H.showSummaryDropdown())
                }),
                A.nrm(1, "span", 37),
                A.k0s()
            }
            if (2 & x) {
                const a = A.XpG();
                A.R7$(),
                A.Y8G("ngClass", A.sMw(1, Co, a.showSummary, !a.showSummary, a.selectedTrain))
            }
        }
        function H0(x, ZA) {
            if (1 & x && (A.j41(0, "div", 49),
            A.nrm(1, "img", 50),
            A.j41(2, "div", 51)(3, "span", 52),
            A.EFF(4),
            A.k0s(),
            A.j41(5, "span", 53),
            A.EFF(6),
            A.k0s()()()),
            2 & x) {
                const a = A.XpG(2).index
                  , Y = A.XpG(2);
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/transfer-default.svg", A.B4B),
                A.R7$(3),
                A.SpI("", Y.aemLabels.transferText, " "),
                A.R7$(2),
                A.SpI(" ", Y.getTransferTime(a - 1), " ")
            }
        }
        function O0(x, ZA) {
            if (1 & x && (A.j41(0, "div", 49),
            A.nrm(1, "img", 54),
            A.j41(2, "div", 55)(3, "b"),
            A.EFF(4),
            A.k0s()(),
            A.j41(5, "div"),
            A.nrm(6, "span", 56),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(4);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/border-cross.svg", A.B4B),
                A.R7$(3),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.cbnheading),
                A.R7$(2),
                A.Y8G("innerHTML", a.msg, A.npT)
            }
        }
        function Q0(x, ZA) {
            if (1 & x && (A.j41(0, "div", 47),
            A.DNE(1, H0, 7, 4, "div", 48)(2, O0, 7, 4, "div", 48),
            A.k0s()),
            2 & x) {
                const a = A.XpG().$implicit;
                A.R7$(),
                A.Y8G("ngIf", "CBN" !== a.travelService.origin.code),
                A.R7$(),
                A.Y8G("ngIf", "CBN" === a.travelService.origin.code)
            }
        }
        function hc(x, ZA) {
            if (1 & x && (A.j41(0, "div", 40),
            A.DNE(1, Q0, 3, 2, "div", 41),
            A.j41(2, "div", 42)(3, "label", 43),
            A.EFF(4),
            A.k0s(),
            A.j41(5, "span"),
            A.EFF(6),
            A.k0s(),
            A.j41(7, "div", 44),
            A.nrm(8, "img", 45),
            A.k0s(),
            A.j41(9, "span"),
            A.EFF(10),
            A.k0s()(),
            A.nrm(11, "app-schedule-trip-details-multisegment", 46),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = ZA.index
                  , H = A.XpG(2);
                A.Y8G("ngClass", A.sMw(9, ka, Y === H.train.length - 1, H.mobile, !H.mobile)),
                A.R7$(),
                A.Y8G("ngIf", 0 !== Y),
                A.R7$(3),
                A.JRh(H.getSegment(Y)),
                A.R7$(2),
                A.JRh(null == a || null == a.schedulesAndStops || null == a.schedulesAndStops.schedule || null == a.schedulesAndStops.schedule.origin ? null : a.schedulesAndStops.schedule.origin.code),
                A.R7$(2),
                A.Mz_("src", "", H.env.damAssetPath, "/icons/trip_type_one-way_blue.svg", A.B4B),
                A.R7$(2),
                A.JRh(null == a || null == a.schedulesAndStops || null == a.schedulesAndStops.schedule || null == a.schedulesAndStops.schedule.destination ? null : a.schedulesAndStops.schedule.destination.code),
                A.R7$(),
                A.Y8G("train", a)("content", H.aemContent)
            }
        }
        function wc(x, ZA) {
            if (1 & x && (A.j41(0, "div", 38),
            A.DNE(1, hc, 12, 13, "div", 39),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.R7$(),
                A.Y8G("ngForOf", a.train)
            }
        }
        let ws = ( () => {
            class x {
                constructor(a, Y, H, yA) {
                    this.ecomStorage = a,
                    this.scheduleResultsService = Y,
                    this.apiService = H,
                    this.headerConfig = yA,
                    this.createActiveTrainInfo = new A.bkB,
                    this.activeshowSummary = new A.bkB,
                    this.TransferUrl = c.D5.apiEndPtURL.TransferMsgURL,
                    this.env = o.c,
                    this.isMultiSegment = !1,
                    this.overNightFlag = !1,
                    this.showSummary = !1,
                    this.collapseArray = [],
                    this.msg = "",
                    this.popoverInfo = {},
                    this.cbnCross = !1,
                    this.appConstants = c.D5
                }
                ngOnInit() {
                    this.scheduleData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES)),
                    this.type = this.scheduleData.type,
                    this.activeTrain = [],
                    this.activeTrainInfo = [],
                    this.train[0] ? (this.trainData = this.train[0],
                    this.segments = this.getSegments(),
                    this.train.forEach(a => {
                        a.origin = a.travelService.origin,
                        a.origin.schedule = {},
                        a.origin.schedule.departureDateTime = a.schedulesAndStops.schedule.startDate,
                        a.destination = a.travelService.destination
                    }
                    ),
                    this.travelLegs = this.train) : (this.train.origin = this.train.travelService.origin,
                    this.train.origin.schedule = {},
                    this.train.origin.schedule.departureDateTime = this.train.schedulesAndStops.schedule.startDate,
                    this.train.destination = this.train.travelService.destination,
                    this.trainData = this.train,
                    this.travelLegs = [],
                    this.travelLegs.push(this.trainData)),
                    this.aemData = (0,
                    g.CU)(this.aemContent),
                    this.aemLabels = (0,
                    g.Q0)(this.aemContent),
                    this.train[0] && this.train.length > 1 ? (this.isMultiSegment = !0,
                    this.checkOverNightFlag(this.train),
                    this.getTransType(this.train),
                    this.startDate = this.train[0].schedulesAndStops.schedule.startDate,
                    this.endDate = this.train[this.train.length - 1].schedulesAndStops.schedule.endDate,
                    this.duration = this.getTime(this.trainData.duration)) : (this.startDate = this.trainData.schedulesAndStops.schedule.startDate,
                    this.endDate = this.trainData.schedulesAndStops.schedule.endDate,
                    this.frequency = this.getFrequency(this.trainData.schedulesAndStops.schedule.daysOfOperation),
                    this.checkOverNightFlag([this.train]),
                    this.duration = this.getTime(this.trainData.schedulesAndStops.schedule.elapsedTime),
                    (this.trainData.schedulesAndStops.schedule.status === c.D5.TrainStatusStatus.CANCELLED || this.trainData.schedulesAndStops.schedule.status === c.D5.TrainStatusStatus.PARTIALLY_CANCELLED) && (this.trainCanceled = !0,
                    this.trainStatus = c.D5.TrainStatusStatus.CANCELLED),
                    this.name = this.trainData.travelService.type.code !== c.D5.SearchResults.transType.BUS.type ? this.trainData.travelService.name.desc_26 : "Connecting Bus"),
                    this.name.includes(" ") || (this.shortName = !0),
                    this.mobile = window.screen.width < 768,
                    this.isMultiSegment && this.mobile && (this.noOfSegment = this.aemLabels.noOfSegment.replace("%1", this.train.length))
                }
                getContentFromHTMLString(a) {
                    const Y = document.createElement("span");
                    return Y.innerHTML = a,
                    Y.textContent || Y.innerText
                }
                ngOnChanges(a) {
                    if (a.currentSelectedIndex && this.activeIndex != a.currentSelectedIndex.currentValue && (this.showSummary = !1,
                    this.selectedTrain = !1),
                    this.activeTrainInfo = [],
                    this.train[0] ? (this.trainData = this.train[0],
                    this.segments = this.getSegments()) : this.trainData = this.train,
                    this.activeTrain) {
                        JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES));
                        const yA = 1 === this.activeTrain.length ? "single-segment" : "multi-segment";
                        this.activeTrain.forEach( (wt, Qt) => {
                            const Ge = wt.travelService.origin
                              , Lr = wt.travelService.destination;
                            let kr = [];
                            null != this.activeTrain[Qt].travelService.RBD && (kr = this.activeTrain[Qt].travelService.RBD.map( (Nn, tn) => ({
                                serviceType: Nn.serviceTypeName,
                                content: this.assignReservationContent(Nn.serviceTypeName)
                            })));
                            const Ur = this.activeTrain[Qt].travelService.Amenity
                              , _r = null != Ur ? Ur.map(Nn => ({
                                amenityType: Nn.name,
                                code: Nn.code,
                                content: this.assignAmenityContent(Nn.name)
                            })) : null
                              , dn = this.activeTrain[Qt].schedulesAndStops.stops;
                            "single-segment" === yA ? this.activeTrainInfo.push({
                                transport: {
                                    name: this.activeTrain[Qt].travelService.name.desc_40,
                                    number: this.activeTrain[Qt].travelService.number,
                                    type: this.activeTrain[Qt].travelService.type.code
                                },
                                departure: {
                                    departureTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[0].timeInfo.departure, "time"),
                                    location: Ge.name,
                                    station: Ge.facility,
                                    code: Ge.code,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[0].timeInfo.departure, "amPm")
                                },
                                arrival: {
                                    arrivalTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[this.activeTrain[Qt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "time"),
                                    location: Lr.name,
                                    station: Lr.facility,
                                    code: Lr.code,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[this.activeTrain[Qt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "amPm")
                                },
                                frequency: [...this.activeTrain[Qt].schedulesAndStops.schedule.daysOfOperation],
                                tripLength: this.getTripLength(this.activeTrain[Qt].schedulesAndStops.schedule.elapsedTime),
                                stops: dn,
                                reservations: kr,
                                amenities: _r
                            }) : "multi-segment" === yA && this.activeTrainInfo.push({
                                transport: {
                                    name: this.activeTrain[Qt].travelService.name.desc_40,
                                    number: this.activeTrain[Qt].travelService.number,
                                    type: this.activeTrain[Qt].travelService.type.code
                                },
                                departure: {
                                    departureTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[0].timeInfo.departure, "time"),
                                    location: dn[0].station.name,
                                    station: dn[0].station.facility,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[0].timeInfo.departure, "amPm"),
                                    code: wt.schedulesAndStops.schedule.origin.code
                                },
                                arrival: {
                                    arrivalTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[this.activeTrain[Qt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "time"),
                                    location: dn[dn.length - 1].station.name,
                                    station: dn[dn.length - 1].station.facility,
                                    amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[Qt].schedulesAndStops.stops[this.activeTrain[Qt].schedulesAndStops.stops.length - 1].timeInfo.arrival, "amPm"),
                                    code: wt.schedulesAndStops.schedule.destination.code
                                },
                                frequency: [...this.activeTrain[Qt].schedulesAndStops.schedule.daysOfOperation],
                                tripLength: this.getTripLength(this.activeTrain[Qt].schedulesAndStops.schedule.elapsedTime),
                                stops: dn,
                                reservations: kr,
                                amenities: _r
                            })
                        }
                        )
                    }
                    this.createActiveTrainInfo.emit(this.activeTrainInfo)
                }
                trimZeros(a) {
                    return 0 == +a ? "" : a.replace(/^0+/, "")
                }
                getTripLength(a) {
                    return a ? `${0 == +this.trimZeros(a.slice(1, 3)) ? "" : `${this.trimZeros(a.slice(1, 3))}d`} ${0 == +this.trimZeros(a.slice(5, 7)) ? "" : `${this.trimZeros(a.slice(5, 7))}h`} ${0 == +this.trimZeros(a.slice(8, 10)) ? "" : `${this.trimZeros(a.slice(8, 10))}m`}` : ""
                }
                assignReservationContent(a) {
                    if (this.aemLabels) {
                        const Y = this.aemLabels.reservationsText;
                        switch (a) {
                        case "Pet":
                            return Y.pet;
                        case "Bicycle":
                            return Y.bicycle;
                        case "Coach":
                            return Y.coach;
                        case "Business":
                            return Y.business;
                        case "Bedroom":
                            return Y.bedroom;
                        case "Roomette":
                            return Y.roomette;
                        case "First":
                            return Y.first;
                        case "Family":
                            return Y.family;
                        default:
                            return
                        }
                    }
                }
                assignAmenityContent(a) {
                    if (this.aemLabels) {
                        const Y = this.aemLabels.amenitiesText;
                        switch (a) {
                        case "WiFi":
                            return Y.wifi;
                        case "Quiet Car":
                            return Y.quietCar;
                        case "Snack Car":
                            return Y.snackCar;
                        case "Checked Baggage":
                            return Y.checkedBaggage;
                        case "Flexible Dining":
                            return Y.flexibleDining;
                        case "Seat Assignment":
                            return "Seat Assignment";
                        default:
                            return
                        }
                    }
                }
                onResize(a) {
                    this.mobile = window.innerWidth < 768,
                    this.isMultiSegment && this.mobile && (this.noOfSegment = this.aemLabels.noOfSegment.replace("%1", this.train.length))
                }
                checkOverNightFlag(a) {
                    if (a) {
                        let Y;
                        "Station" === this.type ? Y = a.some(H => !0 === H?.nightFlag) : "Route" === this.type && (Y = a.some(H => 1 == H[0]?.schedulesAndStops?.schedule?.nightFlag)),
                        this.overNightFlag = Y
                    }
                    return !1
                }
                getTransType(a) {
                    this.isMixed = !1,
                    a.forEach(Y => {
                        Y.travelService.type.code !== c.D5.SearchResults.transType.TRN.type && (this.isMixed = !0)
                    }
                    ),
                    this.isMixed ? (this.name = this.aemLabels.mixedCombinationText,
                    this.icon = this.getIcon(c.D5.SearchResults.transType.MIXED.type)) : (this.name = this.aemLabels.multipleTrainsText,
                    this.icon = this.getIcon(c.D5.SearchResults.transType.TRAINS.type))
                }
                getIcon(a) {
                    let Y;
                    const H = c.D5.SearchResults.transType[a];
                    return Y = a !== c.D5.SearchResults.transType.TRAIN.type && H ? H.icon : this.train[0].travelService.name.desc_40,
                    Y
                }
                showSummaryDropdown() {
                    this.showSummary = !this.showSummary,
                    this.activeshowSummary.emit(this.showSummary ? this.activeIndex : null)
                }
                getSegment(a) {
                    return this.aemLabels.segmentText.replace("%1", a + 1)
                }
                getTime(a) {
                    return s.LD.getDuration(a)
                }
                getSegments() {
                    let a = 0
                      , Y = [];
                    return this.train.forEach( (H, yA) => {
                        if (Y.push(H),
                        Y[a].hasLayover = this.train[yA] && this.train[yA + 1] && !this.train[yA + 1].IsSelfTransfer || !1,
                        Y[a].IsSelfTransfer = this.train[yA] && this.train[yA + 1] && this.train[yA + 1].IsSelfTransfer || !1,
                        Y[a].layover = Y[a].hasLayover ? s.LD.getLayover(this.train[yA].schedulesAndStops.schedule.endDate, this.train[yA + 1].schedulesAndStops.schedule.startDate) + " " : "",
                        "CBN" === this.train[yA].travelService.origin.code) {
                            const Ft = this.TransferUrl.replace("{{stationCode}}", this.train[yA].travelService.origin.code.toLowerCase())
                              , wt = this.headerConfig.appTypeHeader();
                            let Qt = "";
                            return this.apiService.get(Ft, wt).pipe((0,
                            v.s)(1)).subscribe(Ge => {
                                Qt = Ge.content,
                                this.popoverInfo = {
                                    title: "Customs Inspection",
                                    message: Qt
                                };
                                const Lr = this.getContentFromHTMLString(Ge.content)
                                  , kr = Lr.indexOf("<p>")
                                  , Ur = Lr.indexOf("</p>");
                                this.msg = Lr.substring(kr, Ur)
                            }
                            , Ge => Qt = ""),
                            void (this.popoverInfo = {
                                title: "Customs Inspection",
                                message: Qt
                            })
                        }
                        a++
                    }
                    ),
                    2 === this.train.length && this.train[0].travelService.name.desc_40 === this.appConstants.CBN.MAPLE_LEAF && (this.cbnCross = !0),
                    Y
                }
                getTransferTime(a) {
                    return this.segments[a].layover
                }
                getArrowIconPath(a) {
                    return a || this.overNightFlag || this.isMultiSegment && this.overNightFlag ? "overnight-icon" : "travel-arrow"
                }
                isOverNightTrain(a) {
                    return !!(a || this.overNightFlag || this.isMultiSegment && this.overNightFlag)
                }
                arrayEquals(a, Y) {
                    return Array.isArray(a) && Array.isArray(Y) && a.length === Y.length && a.every( (H, yA) => H === Y[yA])
                }
                getFrequency(a) {
                    const Y = ["MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"];
                    a.sort( (Ge, Lr) => Y.indexOf(Ge) - Y.indexOf(Lr));
                    const H = (new Map).set("SUN", {
                        abv: "Su",
                        order: 1
                    }).set("MON", {
                        abv: "Mo",
                        order: 2
                    }).set("TUE", {
                        abv: "Tu",
                        order: 3
                    }).set("WED", {
                        abv: "We",
                        order: 4
                    }).set("THU", {
                        abv: "Th",
                        order: 5
                    }).set("FRI", {
                        abv: "Fr",
                        order: 6
                    }).set("SAT", {
                        abv: "Sa",
                        order: 7
                    });
                    let Ft, yA = "";
                    return 7 === a.length ? "Daily" : this.arrayEquals(a, ["MON", "TUE", "WED", "THU", "FRI"]) ? "Mo-Fr" : this.arrayEquals(a, ["SAT", "SUN"]) ? "Weekend" : (a.forEach( (Ge, Lr) => {
                        Ft && H.get(Ge).order === Ft + 1 ? (Lr !== a.length - 1 && H.get(Ge).order + 1 === H.get(a[Lr + 1]).order ? yA += "-" : yA += H.get(Ge).abv,
                        Ft = H.get(Ge).order) : (yA += H.get(Ge).abv,
                        Ft = H.get(Ge).order)
                    }
                    ),
                    yA.replace(/(-)+/g, "-"))
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(i.x),A.rXU(u),A.rXU(t.G),A.rXU(S.H))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-schedule-trip-details"]],
                    hostBindings: function(Y, H) {
                        1 & Y && A.bIt("resize", function(Ft) {
                            return H.onResize(Ft)
                        }, !1, A.tSv)
                    },
                    inputs: {
                        train: "train",
                        selectedTrain: "selectedTrain",
                        aemContent: [0, "content", "aemContent"],
                        activeTrain: "activeTrain",
                        transferTimes: "transferTimes",
                        activeSelectedTrain: "activeSelectedTrain",
                        activeIndex: [0, "index", "activeIndex"],
                        currentSelectedIndex: "currentSelectedIndex"
                    },
                    outputs: {
                        createActiveTrainInfo: "createActiveTrainInfo",
                        activeshowSummary: "activeshowSummary"
                    },
                    features: [A.OA$],
                    decls: 53,
                    vars: 75,
                    consts: [["data-html2canvas-ignore", "", 1, "row", "list-box-style", "center-row", 3, "ngClass"], [1, "w-47"], ["class", "train-icon-style", 3, "alt", "src", 4, "ngIf"], ["class", "train-icon-style", "alt", "Schedule Train Icon", 3, "src", 4, "ngIf"], ["class", "train-icon-style-white", 3, "alt", "src", 4, "ngIf"], [1, "number-name", "mt-2", "col-1", "col-md-2", "p-0", 3, "ngClass"], ["class", "w-75", 3, "ngClass", 4, "ngIf"], ["class", "name-style", 3, "hidden", "ngClass", 4, "ngIf"], [3, "hidden", "ngClass", 4, "ngIf"], [1, "box-size", "col-2", "pl-3", "pl-lg-2", "pr-0", "ml-4"], [1, "depart-style", 3, "ngClass"], [1, "time", "mt-0", "pt-1", "d-flex", "align-items-baseline"], [1, "time-style", 3, "ngClass"], [1, "time-period", 3, "ngClass"], ["class", "canceled-status", 3, "ngClass", 4, "ngIf"], [1, "col-2", "pr-0", "pl-4", "text-center"], [1, "duration-style", 3, "ngClass"], ["alt", "Arrow Icon", 3, "src", 4, "ngIf"], [1, "box-size", "col-2", "pl-md-3", "pl-lg-4"], [4, "ngIf"], [1, "col-2", "col-lg-2", "col-md-1", "text-right", "pt-md-2", "pt-4", "pr-0", "pl-md-2", "pl-lg-4"], [3, "travelLegs", "isMultiSegment", "aemLabels", "aemData", "aemContent", "isScheduleView", "journeySolution", "train", "ngClass", "activeTrain", "transferTimes", 4, "ngIf"], ["class", "col-1 button-style mt-md-3 ml-md-3 ml-5", "data-ada", "button", "tabindex", "0", "aria-label", "toggle summary", 3, "click", 4, "ngIf"], ["class", "row dropdown-box", 4, "ngIf"], [1, "train-icon-style", 3, "alt", "src"], ["alt", "Schedule Train Icon", 1, "train-icon-style", 3, "src"], [1, "train-icon-style-white", 3, "alt", "src"], [1, "w-75", 3, "ngClass"], [1, "name-style", 3, "hidden", "ngClass"], [3, "hidden", "ngClass"], [1, "canceled-status", 3, "ngClass"], [1, "circle-icon"], ["alt", "Arrow Icon", 3, "src"], ["class", "arrival-date", 3, "ngClass", 4, "ngIf"], [1, "arrival-date", 3, "ngClass"], [3, "travelLegs", "isMultiSegment", "aemLabels", "aemData", "aemContent", "isScheduleView", "journeySolution", "train", "ngClass", "activeTrain", "transferTimes"], ["data-ada", "button", "tabindex", "0", "aria-label", "toggle summary", 1, "col-1", "button-style", "mt-md-3", "ml-md-3", "ml-5", 3, "click"], [3, "ngClass"], [1, "row", "dropdown-box"], ["class", "segment col-12 mt-3", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "segment", "col-12", "mt-3", 3, "ngClass"], ["class", "row", 4, "ngIf"], [1, "row", "segment-style"], [1, "separator", "mr-2"], [1, "img-box", "img-wrapper"], ["alt", "oneway-arrow-icon", 1, "img-style", 3, "src"], [3, "train", "content"], [1, "row"], ["class", "mb-1 transfer", 4, "ngIf"], [1, "mb-1", "transfer"], ["alt", "self transfer icon", 3, "src"], [1, "mr-2", "ml-2", "d-inline-block"], [1, "transfer-text"], [1, "transfer-text", "d-block"], ["alt", "Self transfer icon", 3, "src"], [1, "mr-2", "ml-2", "d-inline-block", "pb-2"], [1, "mr-2", "ml-4", "d-inline-block", 3, "innerHTML"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div")(1, "div", 0)(2, "div", 1),
                        A.DNE(3, _o, 2, 7, "img", 2)(4, js, 2, 8, "img", 2)(5, Ta, 1, 2, "img", 3)(6, Xi, 2, 7, "img", 4)(7, As, 2, 7, "img", 2)(8, aa, 2, 7, "img", 4)(9, ai, 2, 7, "img", 2)(10, sa, 2, 7, "img", 4)(11, To, 2, 7, "img", 2)(12, po, 2, 7, "img", 4),
                        A.k0s(),
                        A.j41(13, "div", 5),
                        A.DNE(14, ao, 2, 4, "label", 6)(15, Ka, 2, 5, "label", 7)(16, Js, 2, 4, "label", 6)(17, hs, 2, 5, "label", 7)(18, Dr, 2, 6, "label", 8)(19, bc, 2, 6, "label", 8),
                        A.k0s(),
                        A.j41(20, "div", 9)(21, "label", 10),
                        A.EFF(22),
                        A.k0s(),
                        A.j41(23, "div", 11)(24, "span", 12),
                        A.EFF(25),
                        A.nI1(26, "date"),
                        A.k0s(),
                        A.j41(27, "span", 13),
                        A.EFF(28),
                        A.nI1(29, "date"),
                        A.k0s()(),
                        A.DNE(30, ya, 4, 6, "label", 14),
                        A.k0s(),
                        A.j41(31, "div", 15)(32, "label", 16),
                        A.EFF(33),
                        A.k0s(),
                        A.DNE(34, z0, 1, 3, "img", 17)(35, so, 1, 3, "img", 17),
                        A.j41(36, "label", 16),
                        A.EFF(37),
                        A.k0s()(),
                        A.j41(38, "div", 18)(39, "label", 10),
                        A.EFF(40),
                        A.k0s(),
                        A.j41(41, "div", 11)(42, "span", 12),
                        A.EFF(43),
                        A.nI1(44, "date"),
                        A.k0s(),
                        A.j41(45, "span", 13),
                        A.EFF(46),
                        A.nI1(47, "date"),
                        A.k0s()(),
                        A.DNE(48, yi, 2, 1, "div", 19),
                        A.k0s(),
                        A.j41(49, "div", 20),
                        A.DNE(50, uc, 1, 13, "schedule-trip-details-dropdown", 21)(51, fc, 2, 5, "button", 22),
                        A.k0s()(),
                        A.DNE(52, wc, 2, 1, "div", 23),
                        A.k0s()),
                        2 & Y && (A.R7$(),
                        A.Y8G("ngClass", A.l_i(53, Ma, H.showSummary, H.selectedTrain)),
                        A.R7$(2),
                        A.Y8G("ngIf", !H.isMultiSegment && !H.selectedTrain && (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40) && "Amtrak Thruway Connecting Service" !== (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment && !H.selectedTrain && "Amtrak Thruway Connecting Service" === (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment && !H.selectedTrain && null == (null == H.trainData || null == H.trainData.travelService || null == H.trainData.travelService.name ? null : H.trainData.travelService.name.desc_40)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment && H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMixed && !H.cbnCross && H.isMultiSegment && !H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMixed && !H.cbnCross && H.isMultiSegment && H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMixed && H.isMultiSegment && !H.selectedTrain && H.cbnCross),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMixed && H.isMultiSegment && H.selectedTrain && H.cbnCross),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMixed && H.isMultiSegment && !H.selectedTrain && !H.cbnCross),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMixed && H.isMultiSegment && H.selectedTrain && !H.cbnCross),
                        A.R7$(),
                        A.Y8G("ngClass", A.l_i(56, io, H.shortName, H.mobile)),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment),
                        A.R7$(),
                        A.Y8G("ngIf", !H.isMultiSegment),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMultiSegment && H.cbnCross),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMultiSegment && H.cbnCross),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMultiSegment && !H.cbnCross),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMultiSegment && !H.cbnCross),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(59, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(H.aemLabels.departText),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(61, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(A.i5U(26, 41, H.startDate, "h:mm")),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(63, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(A.i5U(29, 44, H.startDate, "aaaaa")),
                        A.R7$(2),
                        A.Y8G("ngIf", H.trainCanceled && "Station" === H.type),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(65, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.SpI(" ", H.frequency, " "),
                        A.R7$(),
                        A.Y8G("ngIf", !H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngIf", H.selectedTrain),
                        A.R7$(),
                        A.Y8G("ngClass", A.eq3(67, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(H.duration),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(69, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.JRh(H.aemLabels.arriveText),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(71, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.SpI(" ", A.i5U(44, 47, H.endDate, "h:mm"), " "),
                        A.R7$(2),
                        A.Y8G("ngClass", A.eq3(73, Vi, H.showSummary || H.selectedTrain)),
                        A.R7$(),
                        A.SpI(" ", A.i5U(47, 50, H.endDate, "aaaaa"), " "),
                        A.R7$(2),
                        A.Y8G("ngIf", "Route" !== H.type),
                        A.R7$(2),
                        A.Y8G("ngIf", !H.isMultiSegment),
                        A.R7$(),
                        A.Y8G("ngIf", H.isMultiSegment),
                        A.R7$(),
                        A.Y8G("ngIf", H.showSummary))
                    },
                    dependencies: [Jr.YU, Jr.Sq, Jr.bT, NA, Aa, Jr.PV, Jr.vh, P.d],
                    styles: ['@charset "UTF-8";.list-box-style[_ngcontent-%COMP%]{box-sizing:border-box;min-height:70px;width:340px;border:1px solid #d4d8d9;border-radius:8px;background-color:#fff;padding-top:10px}.number-name[_ngcontent-%COMP%]{color:#167fa6!important;font-size:12px;line-height:17px;text-align:center}.mt-8[_ngcontent-%COMP%]{margin-top:8px}.depart-style[_ngcontent-%COMP%]{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}.arrival-date[_ngcontent-%COMP%]{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}.time-style[_ngcontent-%COMP%]{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}.time-period[_ngcontent-%COMP%]{color:#002436;font-size:14px;font-weight:300;line-height:19px}.box-size[_ngcontent-%COMP%]{height:33px;width:56px}.w-47[_ngcontent-%COMP%]{width:47px}.w-63[_ngcontent-%COMP%]{width:63px}.w-60[_ngcontent-%COMP%]{max-width:60px}.toggle-arrow[_ngcontent-%COMP%]{content:"";border:solid #002436;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.toggle-white-arrow[_ngcontent-%COMP%]{content:"";border:solid #fff;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-white-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-white-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.button-style[_ngcontent-%COMP%]{border:none;background-color:transparent;outline:none!important}.change-background[_ngcontent-%COMP%]{background-color:#00537e;border-radius:8px 8px 0 0;border-bottom:0px;transition:all .1s ease-in-out}.dropdown-box[_ngcontent-%COMP%]{box-sizing:border-box;height:102%;width:340px;margin-left:-5px;border:1px solid #d4d8d9;background-color:#fff;border-radius:0 0 8px 8px;border-top:0px}.duration-style[_ngcontent-%COMP%]{height:14px;width:50px;color:#002436;font-size:10px;line-height:14px}@media only screen and (max-width: 600px){.duration-style[_ngcontent-%COMP%]{max-width:50px;word-wrap:break-word}}  .segment .list-box-style{width:310px;min-height:65px;height:auto;padding-top:4px;margin-top:10px}  .segment .name-style{margin-top:5px;margin-bottom:5px}  .segment .number-name{min-height:26px;width:35px;font-size:10px;line-height:1rem;height:auto}  .segment .arrival-date{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}  .segment .time-style{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}  .segment .time-period{color:#002436;font-size:12px;font-weight:300;line-height:19px}  .segment .box-size{height:33px;width:56px}.pl-20[_ngcontent-%COMP%]{padding-left:20px}.pl-30[_ngcontent-%COMP%]{padding-left:30px}.segment-style[_ngcontent-%COMP%]{height:17px;width:186px;color:#00537e;font-size:12px;line-height:17px}.separator[_ngcontent-%COMP%]{border-right:1px solid #00537e;width:64px}.img-style[_ngcontent-%COMP%]{height:7px;width:20px}.img-box[_ngcontent-%COMP%]{width:30px;padding-left:5px;line-height:1.25}.text-style-color[_ngcontent-%COMP%]{color:#fff!important}.train-icon-style[_ngcontent-%COMP%]{height:5rem;width:5rem;margin-top:0;margin-left:10px}.train-icon-style-white[_ngcontent-%COMP%]{height:5rem;width:5rem;margin-left:10px}.transfer[_ngcontent-%COMP%]{position:relative;margin-left:22px;border-left:3px dashed #ff9933;padding:10px 0;top:-5px}.transfer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:27px;color:#f93;margin-left:-15px;background-color:#fff;vertical-align:baseline}.transfer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:2px 4px;color:#002436;font-size:10px;font-weight:300}.change-background-color[_ngcontent-%COMP%]{background-color:#00537e}.border-white-style[_ngcontent-%COMP%]{border:solid #fff}.w-114[_ngcontent-%COMP%]{width:114%}.circle-icon[_ngcontent-%COMP%]{border-radius:8px;height:10px;width:10px;display:inline-flex;margin-right:5px;background-color:#d52b1e}.canceled-status[_ngcontent-%COMP%]{height:17px;width:114px;color:#002436;font-size:10px;line-height:17px}  .details .trip-details .am-dropdown-btn{background-color:#00537e!important}  .details .trip-details .am-dropdown{background-color:#00537e!important}  .details .trip-details .dropdown-toggle{color:#fff!important}@media (min-width: 768px){.list-box-style[_ngcontent-%COMP%]{width:462px;padding-top:10px}.depart-style[_ngcontent-%COMP%]{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}.arrival-date[_ngcontent-%COMP%]{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}.time-style[_ngcontent-%COMP%]{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}.time-period[_ngcontent-%COMP%]{color:#002436;font-size:12px;font-weight:300;line-height:19px}.box-size[_ngcontent-%COMP%]{height:33px;width:56px}.w-47[_ngcontent-%COMP%]{width:47px}.w-63[_ngcontent-%COMP%]{width:63px}.w-60[_ngcontent-%COMP%]{max-width:60px}.toggle-arrow[_ngcontent-%COMP%]{content:"";border:solid #002436;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.toggle-white-arrow[_ngcontent-%COMP%]{content:"";border:solid #fff;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-white-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-white-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.button-style[_ngcontent-%COMP%]{border:none;background-color:transparent;outline:none!important;transition:all .1s ease-in-out}.change-background[_ngcontent-%COMP%]{background-color:#00537e;border-radius:8px 8px 0 0;border-bottom:0px}.dropdown-box[_ngcontent-%COMP%]{box-sizing:border-box;height:102%;width:357px;border:1px solid #d4d8d9;background-color:#fff;border-radius:0 0 8px 8px;border-top:0px}.duration-style[_ngcontent-%COMP%]{height:14px;width:50px;color:#002436;font-size:10px;line-height:14px}  .segment .list-box-style{width:324px;padding-top:4px;margin-top:10px}  .segment .depart-style{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}  .segment .time-style{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}  .segment .time-period{color:#002436;font-size:12px;font-weight:300;line-height:19px}  .segment .box-size{height:33px;width:56px}.pl-65[_ngcontent-%COMP%]{padding-left:35px}.segment-style[_ngcontent-%COMP%]{height:17px;width:186px;color:#00537e;font-size:12px;line-height:17px}.separator[_ngcontent-%COMP%]{border-right:1px solid #00537e;width:64px}.img-style[_ngcontent-%COMP%]{height:7px;width:20px}.img-box[_ngcontent-%COMP%]{width:30px;padding-left:5px;line-height:1.25}.text-style-color[_ngcontent-%COMP%]{color:#fff!important}.border-white-style[_ngcontent-%COMP%]{border:solid #fff}.canceled-status[_ngcontent-%COMP%]{height:17px;width:114px;color:#002436;font-size:10px;line-height:17px}  .details .trip-details .am-dropdown-btn{background-color:#00537e!important}  .details .trip-details .am-dropdown{background-color:#00537e!important}  .details .trip-details .dropdown-toggle{color:#fff!important}}@media (min-width: 992px){.list-box-style[_ngcontent-%COMP%]{width:462px}.depart-style[_ngcontent-%COMP%]{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}.arrival-date[_ngcontent-%COMP%]{height:14px;width:70px;color:#002436;font-size:10px;line-height:14px}.time-style[_ngcontent-%COMP%]{color:#002436!important;font-size:24px;font-weight:300;line-height:19px}.time-period[_ngcontent-%COMP%]{color:#002436;font-size:14px;font-weight:300;line-height:19px}.box-size[_ngcontent-%COMP%]{height:33px;width:56px}.w-47[_ngcontent-%COMP%]{width:47px}.w-63[_ngcontent-%COMP%]{width:63px}.w-60[_ngcontent-%COMP%]{max-width:60px}.toggle-arrow[_ngcontent-%COMP%]{content:"";border:solid #002436;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.row[_ngcontent-%COMP%]{margin-left:-5px!important}.toggle-white-arrow[_ngcontent-%COMP%]{content:"";border:solid #fff;border-width:0 2px 2px 0;padding:4px;display:inline-block}.toggle-white-arrow.down[_ngcontent-%COMP%]{transform:rotate(45deg);-webkit-transform:rotate(45deg);margin-bottom:4px}.toggle-white-arrow.up[_ngcontent-%COMP%]{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);vertical-align:middle}.button-style[_ngcontent-%COMP%]{border:none;background-color:transparent;outline:none!important;transition:all .1s ease-in-out}.change-background[_ngcontent-%COMP%]{background-color:#00537e;border-radius:8px 8px 0 0;border-bottom:0px}.dropdown-box[_ngcontent-%COMP%]{box-sizing:border-box;height:102%;width:462px;border:1px solid #d4d8d9;background-color:#fff;border-radius:0 0 8px 8px;border-top:0px}.duration-style[_ngcontent-%COMP%]{height:14px;width:50px;color:#002436;font-size:10px;line-height:14px}  .segment .list-box-style{width:399px;min-height:65px;padding-top:4px;margin-top:10px}  .segment .depart-style{height:14px;width:43px;color:#737575;font-size:10px;line-height:14px}  .segment .time-style{color:#002436!important;font-size:18px;font-weight:300;line-height:19px}  .segment .time-period{color:#002436;font-size:12px;font-weight:300;line-height:19px}  .segment .box-size{height:33px;width:56px}.pl-65[_ngcontent-%COMP%]{padding-left:65px}.segment-style[_ngcontent-%COMP%]{height:17px;width:186px;color:#00537e;font-size:12px;line-height:17px}.separator[_ngcontent-%COMP%]{border-right:1px solid #00537e;width:64px}.img-style[_ngcontent-%COMP%]{height:7px;width:20px}.img-box[_ngcontent-%COMP%]{width:30px;padding-left:5px;line-height:1.25}.text-style-color[_ngcontent-%COMP%]{color:#fff!important}.border-white-style[_ngcontent-%COMP%]{border:solid #fff}.canceled-status[_ngcontent-%COMP%]{height:17px;width:114px;color:#002436;font-size:12px;line-height:17px}  .details .trip-details .am-dropdown-btn{background-color:#00537e!important}  .details .trip-details .am-dropdown{background-color:#00537e!important}  .details .trip-details .dropdown-toggle{color:#fff!important}}@media (min-width: 0px) and (max-width: 940px){.center-row[_ngcontent-%COMP%]{margin:0 10px 0 -5px!important}}']
                })
                }
            }
            return x
        }
        )();
        var oo = mr(7605)
          , vo = mr(83360)
          , oa = mr(9310)
          , ms = mr(85956)
          , Ec = mr(43684)
          , j0 = mr(64742)
          , C0 = mr(63797);
        function Mo(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "li")(1, "mat-checkbox", 17),
                A.bIt("change", function(H) {
                    const yA = A.eBV(a).$implicit
                      , Ft = A.XpG(2);
                    return A.Njj(Ft.setFilters(H, "trains", yA))
                }),
                A.mxI("ngModelChange", function(H) {
                    const yA = A.eBV(a).index
                      , Ft = A.XpG(2);
                    return A.DH7(Ft.checks[yA], H) || (Ft.checks[yA] = H),
                    A.Njj(H)
                }),
                A.EFF(2),
                A.k0s()()
            }
            if (2 & x) {
                const a = ZA.$implicit
                  , Y = ZA.index
                  , H = A.XpG(2);
                A.R7$(),
                A.FCK("aria-label", "filter trains by ", null == H.aemLabels ? null : H.aemLabels.trainText, ": ", a, ""),
                A.R50("ngModel", H.checks[Y]),
                A.Y8G("value", a),
                A.R7$(),
                A.SpI(" ", a, " ")
            }
        }
        function J0(x, ZA) {
            if (1 & x && (A.j41(0, "mat-radio-button", 18),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit;
                A.Y8G("tabindex", 0)("value", a),
                A.R7$(),
                A.SpI(" ", a, " ")
            }
        }
        function A0(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div"),
                A.nrm(1, "hr", 7),
                A.j41(2, "div", 8)(3, "label", 9),
                A.EFF(4),
                A.k0s(),
                A.j41(5, "ul", 10),
                A.DNE(6, Mo, 3, 6, "li", 11),
                A.k0s()(),
                A.nrm(7, "hr", 7),
                A.j41(8, "div", 12)(9, "label", 13),
                A.EFF(10),
                A.k0s(),
                A.j41(11, "div", 14),
                A.EFF(12),
                A.k0s(),
                A.j41(13, "mat-radio-group", 15),
                A.mxI("ngModelChange", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.DH7(yA.trip, H) || (yA.trip = H),
                    A.Njj(H)
                }),
                A.bIt("change", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.setFilters(H, "trips", yA.trip))
                }),
                A.DNE(14, J0, 2, 3, "mat-radio-button", 16),
                A.k0s()()()
            }
            if (2 & x) {
                const a = A.XpG();
                A.R7$(4),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.trainText),
                A.R7$(2),
                A.Y8G("ngForOf", a.trains),
                A.R7$(4),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.tripOptionsText),
                A.R7$(2),
                A.Lme(" Sort search results by: ", null == a.aemLabels ? null : a.aemLabels.tripOptionsText, " : ", a.trip, " "),
                A.R7$(),
                A.R50("ngModel", a.trip),
                A.R7$(),
                A.Y8G("ngForOf", a.trips)
            }
        }
        function ks(x, ZA) {
            if (1 & x && (A.j41(0, "mat-radio-button", 18),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = ZA.$implicit;
                A.Y8G("tabindex", 0)("value", a),
                A.R7$(),
                A.SpI(" ", a, " ")
            }
        }
        function Tc(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div"),
                A.nrm(1, "hr", 7),
                A.j41(2, "div", 12)(3, "label", 13),
                A.EFF(4),
                A.k0s(),
                A.j41(5, "div", 14),
                A.EFF(6),
                A.k0s(),
                A.j41(7, "mat-radio-group", 15),
                A.mxI("ngModelChange", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.DH7(yA.trip, H) || (yA.trip = H),
                    A.Njj(H)
                }),
                A.bIt("change", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.setFilters(H, "tripsRoute", yA.trip))
                }),
                A.DNE(8, ks, 2, 3, "mat-radio-button", 16),
                A.k0s()()()
            }
            if (2 & x) {
                const a = A.XpG();
                A.R7$(4),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.tripOptionsText),
                A.R7$(2),
                A.Lme(" Sort search results by: ", null == a.aemLabels ? null : a.aemLabels.tripOptionsText, " : ", a.trip, " "),
                A.R7$(),
                A.R50("ngModel", a.trip),
                A.R7$(),
                A.Y8G("ngForOf", a.tripsRoute)
            }
        }
        let Ks = ( () => {
            class x {
                constructor(a, Y) {
                    this.ecomStorage = a,
                    this.store = Y,
                    this.filterSelection = new A.bkB,
                    this.doneEvent = new A.bkB,
                    this.changeAllTimesDefault = new A.bkB,
                    this.rangeSliderData = {
                        range_start: 0,
                        range_end: 4
                    },
                    this.timeSelection = (0,
                    s.g5)(c.D5.TimeSelection),
                    this.env = o.c,
                    this.allowPoints = !0,
                    this.unsubscribe = new wA.B7
                }
                ngOnInit() {
                    const a = this.ecomStorage.getSessionStorage(c.D5.StorageName.ADVANCED_SEARCH, !0) || (0,
                    s.g5)(c.D5.TimeSelection);
                    this.scheduleData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES)),
                    this.trips = this.aemLabels.tripsStation,
                    this.tripsRoute = this.aemLabels.tripsRoute,
                    "E" == this.scheduleData.data.data[0][0].travelService.directionCode || "W" == this.scheduleData.data.data[0][0].travelService.directionCode ? (this.directions = this.aemLabels.directionsEtoW,
                    this.direction = this.scheduleSortFilters.direction || "Eastbound") : ("N" == this.scheduleData.data.data[0][0].travelService.directionCode || "S" == this.scheduleData.data.data[0][0].travelService.directionCode) && (this.directions = this.aemLabels.directionsNtoS,
                    this.direction = this.scheduleSortFilters.direction || "Northbound"),
                    this.type = this.scheduleData.type,
                    this.timeSelection = a || this.scheduleSortFilters.time,
                    this.train = this.scheduleSortFilters.train || [],
                    this.trip = this.scheduleSortFilters.trip,
                    this.redeemPoints = this.scheduleSortFilters.redeemPoints || !1,
                    this.uncheckAll(),
                    this.checks = this.trains.map(H => this.train.indexOf(H) >= 0),
                    parseFloat(this.ecomStorage.getSessionStorage(c.D5.StorageName.CURRENT_PAGE)) === c.D5.Pages.MODIFY_SELECT_TRAINS && (this.allowPoints = !1),
                    this.subscriptionToIbSessionStore()
                }
                setAllTimes(a) {
                    this.changeAllTimesDefault.emit(a)
                }
                ngOnChanges(a) {
                    const Y = [];
                    a.trains && (a.trains.currentValue.filter( (H, yA) => {
                        -1 === Y.indexOf(H) && Y.push(H)
                    }
                    ),
                    this.trains = Y)
                }
                ngOnDestroy() {
                    this.unsubscribe.next(!0),
                    this.unsubscribe.complete()
                }
                subscriptionToIbSessionStore() {
                    this.store.select(vo._j).pipe((0,
                    oo.Q)(this.unsubscribe)).subscribe(a => {
                        a.store.state === c.jE.state.reset && this.resetFilters()
                    }
                    )
                }
                timeSelected(a) {
                    this.setFilters(a, "time")
                }
                setFilters(a, Y, H) {
                    if (a && Y) {
                        switch (Y) {
                        case "trains":
                            if (a.checked)
                                this.train.push(H);
                            else {
                                const yA = this.train.indexOf(H);
                                yA > -1 && this.train.splice(yA, 1)
                            }
                            break;
                        case "trips":
                        case "tripsRoute":
                            this.trip = H;
                            break;
                        case "directions":
                            this.direction = H;
                            break;
                        case "time":
                            this.timeSelection = a,
                            this.ecomStorage.updateSessionStorage(c.D5.StorageName.ADVANCED_SEARCH, JSON.stringify(this.timeSelection))
                        }
                        this.emitChange()
                    }
                }
                emitChange() {
                    this.scheduleSortFilters = {
                        redeemPoints: this.redeemPoints,
                        time: this.timeSelection,
                        train: this.train,
                        trip: this.trip,
                        direction: this.direction
                    },
                    this.filterSelection.emit({
                        filters: this.scheduleSortFilters
                    })
                }
                resetFilters() {
                    this.timeSelection = (0,
                    s.g5)(c.D5.TimeSelection),
                    this.trip = "Departure Time",
                    "E" == this.scheduleData.data.data[0][0].travelService.directionCode || "W" == this.scheduleData.data.data[0][0].travelService.directionCode ? this.direction = "Eastbound" : ("N" == this.scheduleData.data.data[0][0].travelService.directionCode || "S" == this.scheduleData.data.data[0][0].travelService.directionCode) && (this.direction = "Northbound"),
                    this.train = [],
                    this.trains = this.trains || [],
                    this.uncheckAll(),
                    this.emitChange()
                }
                uncheckAll() {
                    this.checks = this.trains && this.trains.length ? Array(this.trains.length) : []
                }
                toggleFilter(a) {
                    this.redeemPoints = "true" === this.ecomStorage.getSessionStorage(c.D5.StorageName.REDEEM_POINTS),
                    a.stopPropagation()
                }
                done() {
                    this.doneEvent.emit()
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(i.x),A.rXU(oa.il))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-schedule-sort-filter"]],
                    inputs: {
                        scheduleSortFilters: "scheduleSortFilters",
                        aemLabels: "aemLabels",
                        trains: "trains",
                        aemInput: "aemInput",
                        allowAllTimes: "allowAllTimes"
                    },
                    outputs: {
                        filterSelection: "filterSelection",
                        doneEvent: "doneEvent",
                        changeAllTimesDefault: "changeAllTimesDefault"
                    },
                    features: [A.OA$],
                    decls: 10,
                    vars: 12,
                    consts: [[1, "schedule-sort-filter"], [1, "filter-dropdown"], [3, "timeSelected", "changeAllTimesDefault", "aemLabels", "aemInput", "TimeFilterChange", "component", "allowAllTimes"], [4, "ngIf"], [1, "my-3", "d-flex", "justify-content-end"], ["mat-flat-button", "", "disableRipple", "true", 1, "btn-clear-all", "mr-2", 3, "click"], ["amBtn", "", "btnstyle", "secondary", "aria-label", "Close", 1, "ml-2", 3, "click"], [1, "divider", "dropdown-divider"], [1, "trainSelection"], ["id", "train-group-label", 1, "mb-2"], [1, "m-0", "p-0"], [4, "ngFor", "ngForOf"], [1, "tripSelection"], ["id", "trip-group-label", 1, "mb-2"], ["id", "ada-label", 1, "visually-hidden"], ["aria-labelledby", "ada-label", 1, "trip-radio-group", 3, "ngModelChange", "change", "ngModel"], ["class", "form-check-label small font-weight-normal train-radio-button", "amt-auto-test-id", "sort-filter-train-radio2-button", 3, "tabindex", "value", 4, "ngFor", "ngForOf"], [1, "d-block", "train-check-box", "font-regular", 3, "change", "ngModelChange", "aria-label", "ngModel", "value"], ["amt-auto-test-id", "sort-filter-train-radio2-button", 1, "form-check-label", "small", "font-weight-normal", "train-radio-button", 3, "tabindex", "value"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div", 0)(1, "div", 1)(2, "time-of-day", 2),
                        A.bIt("timeSelected", function(Ft) {
                            return H.timeSelected(Ft)
                        })("changeAllTimesDefault", function(Ft) {
                            return H.setAllTimes(Ft)
                        }),
                        A.k0s(),
                        A.DNE(3, A0, 15, 7, "div", 3)(4, Tc, 9, 5, "div", 3),
                        A.k0s()(),
                        A.j41(5, "div", 4)(6, "button", 5),
                        A.bIt("click", function() {
                            return H.resetFilters()
                        }),
                        A.EFF(7),
                        A.k0s(),
                        A.j41(8, "button", 6),
                        A.bIt("click", function() {
                            return H.done()
                        }),
                        A.EFF(9),
                        A.k0s()()),
                        2 & Y && (A.R7$(2),
                        A.Y8G("aemLabels", H.aemLabels)("aemInput", H.aemInput)("TimeFilterChange", H.timeSelection)("component", "schedule")("allowAllTimes", H.allowAllTimes),
                        A.R7$(),
                        A.Y8G("ngIf", "Station" === H.type),
                        A.R7$(),
                        A.Y8G("ngIf", "Route" === H.type),
                        A.R7$(2),
                        A.qtP("aria-label", "", null == H.aemLabels ? null : H.aemLabels.clearAllText, " ", null == H.aemLabels ? null : H.aemLabels.sortAndFilterText, ""),
                        A.R7$(),
                        A.SpI(" ", null == H.aemLabels ? null : H.aemLabels.clearAllText, " "),
                        A.R7$(2),
                        A.SpI(" ", null == H.aemLabels ? null : H.aemLabels.done, " "))
                    },
                    dependencies: [Jr.Sq, Jr.bT, ms.iV, Ec.NZ, j0.Ku, j0.No, F.a7, G.BC, G.vS, C0.I],
                    styles: ['@charset "UTF-8";.schedule-sort-filter[_ngcontent-%COMP%]{display:flex;height:100%;justify-content:flex-end;align-items:flex-end;padding-bottom:15px}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]{width:100%}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .dropdown-divider[_ngcontent-%COMP%]{width:100%;margin:10px 0 0;border-color:#d8d8d8}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .tod[_ngcontent-%COMP%]{padding-top:1px;padding-bottom:1px;margin-bottom:10px;margin-top:10px}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .redeen-points[_ngcontent-%COMP%]{clear:both;margin-bottom:15px}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .trainSelection[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .trainSelection[_ngcontent-%COMP%], .schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .tripSelection[_ngcontent-%COMP%]{margin-top:15px;flex-wrap:nowrap}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .trainSelection[_ngcontent-%COMP%]   .train-radio-group[_ngcontent-%COMP%], .schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .tripSelection[_ngcontent-%COMP%]   .train-radio-group[_ngcontent-%COMP%], .schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .trainSelection[_ngcontent-%COMP%]   .trip-radio-group[_ngcontent-%COMP%], .schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .tripSelection[_ngcontent-%COMP%]   .trip-radio-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:5px}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .trainSelection[_ngcontent-%COMP%]   .train-radio-button[_ngcontent-%COMP%], .schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .tripSelection[_ngcontent-%COMP%]   .train-radio-button[_ngcontent-%COMP%], .schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .trainSelection[_ngcontent-%COMP%]   .trip-radio-button[_ngcontent-%COMP%], .schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]   .tripSelection[_ngcontent-%COMP%]   .trip-radio-button[_ngcontent-%COMP%]{margin:2px 0;text-transform:capitalize}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]     .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element{opacity:0!important}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]     .mat-radio-button.mat-accent .mat-radio-inner-circle{background-color:#00344d!important}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]     .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#00344d!important}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]     .mat-radio-button label{font-size:1.4rem}.schedule-sort-filter[_ngcontent-%COMP%]   .filter-dropdown[_ngcontent-%COMP%]     .mat-radio-checked .mat-radio-inner-circle{transform:scale(.5)!important}.btn-clear-all[_ngcontent-%COMP%]{color:#167fa6;padding:0rem 4rem}.btn-clear-all[_ngcontent-%COMP%]:hover, .btn-clear-all[_ngcontent-%COMP%]:focus, .btn-clear-all[_ngcontent-%COMP%]:active{background-color:transparent;text-decoration:underline}.btn-clear-all[_ngcontent-%COMP%]     .mat-button-focus-overlay{display:none}.redeem-point[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{font-size:1.4rem;font-family:OpenSans,Helvetica,Arial,"sans-serif"}']
                })
                }
            }
            return x
        }
        )();
        var ts = mr(84310);
        let t0 = ( () => {
            class x {
                constructor(a, Y, H, yA, Ft) {
                    this.store = a,
                    this.ecomStorage = Y,
                    this.datepipe = H,
                    this.selectTrainsService = yA,
                    this.locale = Ft,
                    this.dateSelected = new A.bkB,
                    this.filterSchedule = new A.bkB,
                    this.selected = "option1",
                    this.isScheduleData = !1,
                    this.availableDates = [],
                    this.FIELDNAMES = c.D5.FieldNames,
                    this.isPrint = !0,
                    this.env = o.c,
                    this.unsubcribe = new wA.B7,
                    this.journeyRequest = {},
                    this.journeySolutionOption = {},
                    this.journeyLegs = [],
                    this.scheduleHeaderFilters = {},
                    this.showFilters = !1,
                    this.loading = !0,
                    this.pointsloading = !1,
                    this.ancillaryLoading = !1,
                    this.destinationCode = "",
                    this.originCode = "",
                    this.destinationCity = "",
                    this.originCity = "",
                    this.currencySelector = c.YM.dollars,
                    this.cities = [],
                    this.alerts = [],
                    this.accordionConfig = [{
                        isCollapsed: !1,
                        isDisabled: !1
                    }, {
                        isCollapsed: !0,
                        isDisabled: !0
                    }],
                    this.isLoggedIn = !1,
                    this.stationDataAvailable = !1
                }
                ngOnInit() {
                    this.aemLabels = (0,
                    g.Q0)(this.aemContent),
                    this.aemInput = (0,
                    g.B4)(this.aemContent),
                    this.aemData = (0,
                    g.CU)(this.aemContent),
                    this.currentPage = parseFloat(this.ecomStorage.getSessionStorage(c.D5.StorageName.CURRENT_PAGE)),
                    this.stationData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES)),
                    this.scheduleData = this.stationData.data,
                    this.scheduleData && (this.isScheduleData = !0,
                    this.destinationStationCode = this.stationData.toStation,
                    this.originStationCode = this.stationData.fromStation,
                    this.getAvailableDates()),
                    this.updateFilters()
                }
                ngOnChanges(a) {}
                updateFilters() {
                    this.scheduleHeaderFilters.time = this.selectTrainsService.getTimeSelectionData(),
                    this.scheduleHeaderFilters.trip = "Departure Time"
                }
                getAvailableDates() {
                    const Y = this.stationData.endDate.length > 10 ? this.stationData.endDate : this.stationData.endDate + "T00:00:00"
                      , H = new Date(this.stationData.startDate.length > 10 ? this.stationData.startDate : this.stationData.startDate + "T00:00:00")
                      , wt = (new Date(Y).getTime() - H.getTime()) / 864e5;
                    this.availableDates.push(H);
                    for (let Qt = 1; Qt <= wt; Qt++) {
                        const Ge = new Date(H);
                        this.availableDates.push(Ge.setDate(H.getDate() + Qt))
                    }
                    this.selected = this.availableDates[0],
                    this.selectDate()
                }
                selectDate() {
                    this.dateSelected.emit(this.selected)
                }
                filterSelection(a) {
                    this.scheduleHeaderFilters = a.filters,
                    this.filterSchedule.emit(this.scheduleHeaderFilters)
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(oa.il),A.rXU(i.x),A.rXU(Jr.vh),A.rXU(ts.N),A.rXU(A.xe9))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-schedule-print-pdf"]],
                    inputs: {
                        aemContent: [0, "content", "aemContent"],
                        isMultiSegment: "isMultiSegment",
                        pagination: "pagination",
                        activeTrain: "activeTrain",
                        transferTimes: "transferTimes",
                        selectDates: "selectDates"
                    },
                    outputs: {
                        dateSelected: "dateSelected",
                        filterSchedule: "filterSchedule"
                    },
                    features: [A.OA$],
                    decls: 2,
                    vars: 8,
                    consts: [[1, "d-flex", "flex-column", "pl-4", "pt-4"], [3, "isPrint", "aemLabels", "aemData", "isMultiSegment", "pagination", "startDate", "activeTrain", "transferTimes"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div", 0),
                        A.nrm(1, "schedule-trip-details-dropdown", 1),
                        A.k0s()),
                        2 & Y && (A.R7$(),
                        A.Y8G("isPrint", H.isPrint)("aemLabels", H.aemLabels)("aemData", H.aemData)("isMultiSegment", H.isMultiSegment)("pagination", H.pagination)("startDate", H.selected)("activeTrain", H.activeTrain)("transferTimes", H.transferTimes))
                    },
                    dependencies: [Aa],
                    styles: ['@charset "UTF-8";[_nghost-%COMP%]     .mat-form-field{width:217px;height:33px}[_nghost-%COMP%]     .mat-select-arrow{margin:6px 4px 0 0}[_nghost-%COMP%]     .mat-form-field-infix{border-top:0em solid transparent;border-bottom:1px solid #002436;height:28px;padding:6px 0 0}[_nghost-%COMP%]     .trip-details{min-width:2rem}[_nghost-%COMP%]     .mat-select-panel-wrap{top:39px;left:16px;position:relative}[_nghost-%COMP%]     .mat-select-panel{min-width:0px!important;border-radius:0!important;box-shadow:none!important}[_nghost-%COMP%]     .mat-form-field-flex{padding:0;font-size:16px;background:transparent}.box-style[_ngcontent-%COMP%]{width:217px;height:33px;border-bottom:1px solid #002436}.label-style[_ngcontent-%COMP%]{height:14px;width:137px;color:#167fa6;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:10px;letter-spacing:.33px;line-height:14px}.date-style[_ngcontent-%COMP%]{height:18px;width:103px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:16px;letter-spacing:.53px;line-height:16px}.title[_ngcontent-%COMP%]{height:38px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:28px;letter-spacing:0;line-height:38px;padding-left:10px}@media (min-width: 768px){.title[_ngcontent-%COMP%]{padding-left:0}}.see-your-timetable[_ngcontent-%COMP%]{height:24px;color:#167fa6;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:14px;letter-spacing:.1px;line-height:24px}.img-style[_ngcontent-%COMP%]{height:10px;width:24px}.pl-7px[_ngcontent-%COMP%]{padding-left:7px}.img-box[_ngcontent-%COMP%]{width:44px;padding-left:10px;line-height:1.25}.station-color[_ngcontent-%COMP%]{color:#002436}.mt-36[_ngcontent-%COMP%]{margin-top:36.2px}.w-37[_ngcontent-%COMP%]{width:37%}.sort-and-filter-btn[_ngcontent-%COMP%]   .am-dropdown-caret[_ngcontent-%COMP%]{width:2.5rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{right:.3rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:2.2rem}']
                })
                }
            }
            return x
        }
        )();
        var dc = mr(7895);
        let ys = ( () => {
            class x {
                constructor(a, Y, H, yA, Ft) {
                    this.store = a,
                    this.ecomStorage = Y,
                    this.datepipe = H,
                    this.selectTrainsService = yA,
                    this.locale = Ft,
                    this.dateSelected = new A.bkB,
                    this.filterSchedule = new A.bkB,
                    this.selected = "option1",
                    this.isScheduleData = !1,
                    this.availableDates = [],
                    this.FIELDNAMES = c.D5.FieldNames,
                    this.isPrint = !0,
                    this.env = o.c,
                    this.unsubcribe = new wA.B7,
                    this.journeyRequest = {},
                    this.journeySolutionOption = {},
                    this.journeyLegs = [],
                    this.scheduleHeaderFilters = {},
                    this.showFilters = !1,
                    this.loading = !0,
                    this.pointsloading = !1,
                    this.ancillaryLoading = !1,
                    this.destinationCode = "",
                    this.originCode = "",
                    this.destinationCity = "",
                    this.originCity = "",
                    this.currencySelector = c.YM.dollars,
                    this.cities = [],
                    this.alerts = [],
                    this.accordionConfig = [{
                        isCollapsed: !1,
                        isDisabled: !1
                    }, {
                        isCollapsed: !0,
                        isDisabled: !0
                    }],
                    this.isLoggedIn = !1,
                    this.stationDataAvailable = !1
                }
                ngOnInit() {
                    this.aemLabels = (0,
                    g.Q0)(this.aemContent),
                    this.aemInput = (0,
                    g.B4)(this.aemContent),
                    this.aemData = (0,
                    g.CU)(this.aemContent),
                    this.currentPage = parseFloat(this.ecomStorage.getSessionStorage(c.D5.StorageName.CURRENT_PAGE)),
                    this.stationData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES)),
                    this.scheduleData = this.stationData.data,
                    this.scheduleData && (this.isScheduleData = !0,
                    this.destinationStationCode = this.stationData.toStation,
                    this.originStationCode = this.stationData.fromStation,
                    this.getAvailableDates()),
                    this.updateFilters()
                }
                ngOnChanges(a) {}
                updateFilters() {
                    this.scheduleHeaderFilters.time = this.selectTrainsService.getTimeSelectionData(),
                    this.scheduleHeaderFilters.trip = "departure time"
                }
                getAvailableDates() {
                    const Y = this.stationData.endDate.length > 10 ? this.stationData.endDate : this.stationData.endDate + "T00:00:00"
                      , H = new Date(this.stationData.startDate.length > 10 ? this.stationData.startDate : this.stationData.startDate + "T00:00:00")
                      , wt = (new Date(Y).getTime() - H.getTime()) / 864e5;
                    this.availableDates.push(H);
                    for (let Qt = 1; Qt <= wt; Qt++) {
                        const Ge = new Date(H);
                        this.availableDates.push(Ge.setDate(H.getDate() + Qt))
                    }
                    this.selected = this.availableDates[0],
                    this.selectDate()
                }
                selectDate() {
                    this.dateSelected.emit(this.selected)
                }
                filterSelection(a) {
                    this.scheduleHeaderFilters = a.filters,
                    this.filterSchedule.emit(this.scheduleHeaderFilters)
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(oa.il),A.rXU(i.x),A.rXU(Jr.vh),A.rXU(ts.N),A.rXU(A.xe9))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["schedule-header"]],
                    inputs: {
                        aemContent: [0, "content", "aemContent"],
                        isMultiSegment: "isMultiSegment",
                        pagination: "pagination",
                        activeTrain: "activeTrain",
                        transferTimes: "transferTimes",
                        selectDates: "selectDates"
                    },
                    outputs: {
                        dateSelected: "dateSelected",
                        filterSchedule: "filterSchedule"
                    },
                    features: [A.OA$],
                    decls: 3,
                    vars: 4,
                    consts: [[1, "mt-36"], ["role", "region", "aria-label", "select trains"], [3, "aemLabels", "originCode", "destinationCode", "isSchedule"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div", 0)(1, "div", 1),
                        A.nrm(2, "train-stations", 2),
                        A.k0s()()),
                        2 & Y && (A.R7$(2),
                        A.Y8G("aemLabels", H.aemLabels)("originCode", H.originStationCode)("destinationCode", H.destinationStationCode)("isSchedule", H.isScheduleData))
                    },
                    dependencies: [dc.Z],
                    styles: ['@charset "UTF-8";[_nghost-%COMP%]     .mat-form-field{width:217px;height:33px}@media (min-width: 0px) and (max-width: 940px){[_nghost-%COMP%]     .mat-form-field{width:175px}}[_nghost-%COMP%]     .mat-select-arrow{margin:6px 4px 0 0}[_nghost-%COMP%]     .mat-form-field-infix{border-top:0em solid transparent;border-bottom:1px solid #002436;height:28px;padding:6px 0 0}@media (min-width: 0px) and (max-width: 940px){[_nghost-%COMP%]     .trip-details-block{padding-left:.5rem!important;padding-top:1.5rem}}[_nghost-%COMP%]     .trip-details{min-width:2rem}[_nghost-%COMP%]     .mat-select-panel-wrap{top:39px;left:16px;position:relative}[_nghost-%COMP%]     .mat-select-panel{min-width:0px!important;border-radius:0!important;box-shadow:none!important}[_nghost-%COMP%]     .mat-form-field-flex{padding:0;font-size:16px;background:transparent}.box-style[_ngcontent-%COMP%]{width:217px;height:33px;border-bottom:1px solid #002436}.label-style[_ngcontent-%COMP%]{height:14px;width:137px;color:#167fa6;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:10px;letter-spacing:.33px;line-height:14px}.date-style[_ngcontent-%COMP%]{height:18px;width:103px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:16px;letter-spacing:.53px;line-height:16px}.title[_ngcontent-%COMP%]{height:38px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:28px;letter-spacing:0;line-height:38px;padding-left:10px}@media (min-width: 768px){.title[_ngcontent-%COMP%]{padding-left:0}}.see-your-timetable[_ngcontent-%COMP%]{height:24px;color:#167fa6;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:14px;letter-spacing:.1px;line-height:24px}.img-style[_ngcontent-%COMP%]{height:10px;width:24px}.pl-7px[_ngcontent-%COMP%]{padding-left:7px}.img-box[_ngcontent-%COMP%]{width:44px;padding-left:10px;line-height:1.25}.station-color[_ngcontent-%COMP%]{color:#002436}.mt-36[_ngcontent-%COMP%]{margin-top:36.2px}.w-37[_ngcontent-%COMP%]{width:37%}.sort-and-filter-btn[_ngcontent-%COMP%]   .am-dropdown-caret[_ngcontent-%COMP%]{width:2.5rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{right:.3rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:2.2rem}']
                })
                }
            }
            return x
        }
        )();
        var Es = mr(83269)
          , ds = mr(44613)
          , Io = mr(28056);
        function qc(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "mat-option", 8),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG(3);
                    return A.Njj(H.selectDate())
                }),
                A.EFF(1),
                A.nI1(2, "date"),
                A.k0s()
            }
            if (2 & x) {
                const a = ZA.$implicit;
                A.FS9("aria-label", a),
                A.Y8G("value", a),
                A.R7$(),
                A.JRh(A.i5U(2, 3, a, "E, MMM d"))
            }
        }
        function k0(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "mat-form-field", 5)(1, "mat-select", 6),
                A.mxI("ngModelChange", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(2);
                    return A.DH7(yA.selected, H) || (yA.selected = H),
                    A.Njj(H)
                }),
                A.DNE(2, qc, 3, 6, "mat-option", 7),
                A.k0s()()
            }
            if (2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.FS9("aria-label", a.selected),
                A.R50("ngModel", a.selected),
                A.R7$(),
                A.Y8G("ngForOf", a.availableDates)
            }
        }
        function Ws(x, ZA) {
            if (1 & x && (A.j41(0, "div", 9)(1, "p", 10),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(2),
                A.SpI(" ", A.i5U(3, 1, null == a.scheduleData ? null : a.scheduleData.data[0][0].schedulesAndStops.schedule.startDate, "E, MMM d"), " ")
            }
        }
        function Pc(x, ZA) {
            if (1 & x && (A.j41(0, "div")(1, "label", 3),
            A.EFF(2),
            A.k0s(),
            A.DNE(3, k0, 3, 3, "mat-form-field", 4)(4, Ws, 4, 4, "ng-template", null, 0, A.C5r),
            A.k0s()),
            2 & x) {
                const a = A.sdS(5)
                  , Y = A.XpG();
                A.R7$(2),
                A.JRh(Y.aemLabels.selectedDateText),
                A.R7$(),
                A.Y8G("ngIf", (null == Y.stationData ? null : Y.stationData.endDate) && "Invalid date" !== (null == Y.stationData ? null : Y.stationData.endDate))("ngIfElse", a)
            }
        }
        function Qc(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "mat-option", 8),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG(3);
                    return A.Njj(H.selectDate())
                }),
                A.EFF(1),
                A.k0s()
            }
            if (2 & x) {
                const a = ZA.$implicit;
                A.FS9("aria-label", a),
                A.Y8G("value", a),
                A.R7$(),
                A.JRh(a)
            }
        }
        function Cc(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "mat-form-field", 5)(1, "mat-select", 6),
                A.mxI("ngModelChange", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(2);
                    return A.DH7(yA.selected, H) || (yA.selected = H),
                    A.Njj(H)
                }),
                A.DNE(2, Qc, 2, 3, "mat-option", 7),
                A.k0s()()
            }
            if (2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.FS9("aria-label", a.selected),
                A.R50("ngModel", a.selected),
                A.R7$(),
                A.Y8G("ngForOf", a.newAvailableDays)
            }
        }
        function Nc(x, ZA) {
            if (1 & x && (A.j41(0, "div", 9)(1, "p", 10),
            A.EFF(2),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(2),
                A.SpI(" ", a.Sunday, " ")
            }
        }
        function Rc(x, ZA) {
            if (1 & x && (A.j41(0, "div")(1, "label", 3),
            A.EFF(2),
            A.k0s(),
            A.DNE(3, Cc, 3, 3, "mat-form-field", 4)(4, Nc, 3, 1, "ng-template", null, 0, A.C5r),
            A.k0s()),
            2 & x) {
                const a = A.sdS(5)
                  , Y = A.XpG();
                A.R7$(2),
                A.JRh(Y.aemLabels.selectedDayText),
                A.R7$(),
                A.Y8G("ngIf", (null == Y.stationData ? null : Y.stationData.endDate) && "Invalid date" !== (null == Y.stationData ? null : Y.stationData.endDate))("ngIfElse", a)
            }
        }
        let Lc = ( () => {
            class x {
                constructor(a, Y, H, yA, Ft) {
                    this.store = a,
                    this.ecomStorage = Y,
                    this.datepipe = H,
                    this.selectTrainsService = yA,
                    this.locale = Ft,
                    this.dateSelected = new A.bkB,
                    this.filterSchedule = new A.bkB,
                    this.selected = "option1",
                    this.isScheduleData = !1,
                    this.availableDates = [],
                    this.availableDays = [],
                    this.newAvailableDays = [],
                    this.FIELDNAMES = c.D5.FieldNames,
                    this.isPrint = !0,
                    this.env = o.c,
                    this.unsubcribe = new wA.B7,
                    this.journeyRequest = {},
                    this.journeySolutionOption = {},
                    this.journeyLegs = [],
                    this.scheduleHeaderFilters = {},
                    this.showFilters = !1,
                    this.loading = !0,
                    this.pointsloading = !1,
                    this.ancillaryLoading = !1,
                    this.destinationCode = "",
                    this.originCode = "",
                    this.destinationCity = "",
                    this.originCity = "",
                    this.currencySelector = c.YM.dollars,
                    this.cities = [],
                    this.alerts = [],
                    this.accordionConfig = [{
                        isCollapsed: !1,
                        isDisabled: !1
                    }, {
                        isCollapsed: !0,
                        isDisabled: !0
                    }],
                    this.isLoggedIn = !1,
                    this.stationDataAvailable = !1
                }
                ngOnInit() {
                    this.aemLabels = (0,
                    g.Q0)(this.aemContent),
                    this.aemInput = (0,
                    g.B4)(this.aemContent),
                    this.aemData = (0,
                    g.CU)(this.aemContent),
                    this.availableDays = this.aemLabels.daysOftheWeek,
                    this.currentPage = parseFloat(this.ecomStorage.getSessionStorage(c.D5.StorageName.CURRENT_PAGE)),
                    this.stationData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES)),
                    this.scheduleData = this.stationData.data,
                    this.type = this.stationData.type,
                    this.scheduleData && (this.isScheduleData = !0,
                    this.destinationStationCode = this.stationData.toStation,
                    this.originStationCode = this.stationData.fromStation,
                    "Station" == this.type ? this.getAvailableDates() : (this.direction = this.direction.slice(0, 1).toUpperCase(),
                    this.getAvailableDays())),
                    this.updateFilters()
                }
                ngOnChanges(a) {
                    a.direction && a.direction.currentValue && !a.direction.firstChange && (this.newAvailableDays = [],
                    this.direction = this.direction.slice(0, 1).toUpperCase(),
                    this.getAvailableDays())
                }
                updateFilters() {
                    this.scheduleHeaderFilters.time = this.selectTrainsService.getTimeSelectionData(),
                    this.scheduleHeaderFilters.trip = "Departure Time"
                }
                getAvailableDates() {
                    const Y = this.stationData.endDate.length > 10 ? this.stationData.endDate : this.stationData.endDate + "T00:00:00"
                      , H = new Date(this.stationData.startDate.length > 10 ? this.stationData.startDate : this.stationData.startDate + "T00:00:00")
                      , wt = (new Date(Y).getTime() - H.getTime()) / 864e5;
                    this.availableDates.push(H);
                    for (let Qt = 1; Qt <= wt; Qt++) {
                        const Ge = new Date(H);
                        this.availableDates.push(Ge.setDate(H.getDate() + Qt))
                    }
                    this.selected = this.availableDates[0],
                    this.selectDate()
                }
                getAvailableDays() {
                    const a = ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]
                      , Y = [];
                    this.scheduleData.data.filter(H => {
                        H[0].travelService.directionCode == this.direction && H[0].schedulesAndStops.schedule.daysOfOperation.forEach(yA => {
                            Y.includes(yA) || Y.push(yA)
                        }
                        )
                    }
                    ),
                    Y.sort( (H, yA) => a.indexOf(H) - a.indexOf(yA)),
                    this.availableDays.find( (H, yA) => {
                        Y.includes(H.slice(0, 3).toUpperCase()) && (this.newAvailableDays.push(H),
                        H.slice(0, 3).toUpperCase() === Y[0] && (this.selected = H))
                    }
                    ),
                    this.selectDate()
                }
                selectDate() {
                    this.dateSelected.emit(this.selected)
                }
                filterSelection(a) {
                    this.scheduleHeaderFilters = a.filters,
                    this.filterSchedule.emit(this.scheduleHeaderFilters)
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(oa.il),A.rXU(i.x),A.rXU(Jr.vh),A.rXU(ts.N),A.rXU(A.xe9))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["app-schedule-depature-date-dropdown"]],
                    inputs: {
                        aemContent: [0, "content", "aemContent"],
                        isMultiSegment: "isMultiSegment",
                        pagination: "pagination",
                        activeTrain: "activeTrain",
                        direction: "direction",
                        transferTimes: "transferTimes",
                        selectDates: "selectDates"
                    },
                    outputs: {
                        dateSelected: "dateSelected",
                        filterSchedule: "filterSchedule"
                    },
                    features: [A.OA$],
                    decls: 3,
                    vars: 2,
                    consts: [["depart", ""], ["id", "departureDateDropdown", 1, "d-flex", "flex-row", "bd-highlight", "mt-5", "w-37"], [4, "ngIf"], ["for", "selectDepartureDate", 1, "label-style"], ["appearance", "ouline", 4, "ngIf", "ngIfElse"], ["appearance", "ouline"], [1, "panel-style", 3, "ngModelChange", "ngModel", "aria-label"], [3, "value", "aria-label", "click", 4, "ngFor", "ngForOf"], [3, "click", "value", "aria-label"], [1, "box-style", "pt-3"], [1, "date-style"]],
                    template: function(Y, H) {
                        1 & Y && (A.j41(0, "div", 1),
                        A.DNE(1, Pc, 6, 3, "div", 2)(2, Rc, 6, 3, "div", 2),
                        A.k0s()),
                        2 & Y && (A.R7$(),
                        A.Y8G("ngIf", "Station" === H.type),
                        A.R7$(),
                        A.Y8G("ngIf", "Route" === H.type))
                    },
                    dependencies: [Jr.Sq, Jr.bT, Es.d1, ds.Ky, Io.cu, G.BC, G.vS, Jr.vh],
                    styles: ['@charset "UTF-8";[_nghost-%COMP%]     .mat-form-field{width:217px;height:33px}@media (min-width: 0px) and (max-width: 940px){[_nghost-%COMP%]     .mat-form-field{width:170px}[_nghost-%COMP%]     .mat-form-field-flex{font-size:14px}}[_nghost-%COMP%]     .mat-select-arrow{margin:6px 4px 0 0}[_nghost-%COMP%]     .mat-form-field-infix{border-top:0em solid transparent;border-bottom:1px solid #002436;height:28px;padding:6px 0 0}[_nghost-%COMP%]     .trip-details{min-width:2rem}[_nghost-%COMP%]     .mat-select-panel-wrap{top:39px;left:16px;position:relative}[_nghost-%COMP%]     .mat-select-panel{min-width:0px!important;border-radius:0!important;box-shadow:none!important}[_nghost-%COMP%]     .mat-form-field-flex{width:217px;padding:0;font-size:16px;background:transparent}.box-style[_ngcontent-%COMP%]{width:217px;height:33px;border-bottom:1px solid #002436}@media (min-width: 0px) and (max-width: 940px){.box-style[_ngcontent-%COMP%]{width:175px}}.label-style[_ngcontent-%COMP%]{height:14px;width:137px;color:#167fa6;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:10px;letter-spacing:.33px;line-height:14px}.date-style[_ngcontent-%COMP%]{height:18px;width:105px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:16px;letter-spacing:.53px;line-height:16px}.title[_ngcontent-%COMP%]{height:38px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:28px;letter-spacing:0;line-height:38px;padding-left:10px}@media (min-width: 768px){.title[_ngcontent-%COMP%]{padding-left:0}}.see-your-timetable[_ngcontent-%COMP%]{height:24px;color:#167fa6;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:14px;letter-spacing:.1px;line-height:24px}.img-style[_ngcontent-%COMP%]{height:10px;width:24px}.pl-7px[_ngcontent-%COMP%]{padding-left:7px}.img-box[_ngcontent-%COMP%]{width:44px;padding-left:10px;line-height:1.25}.station-color[_ngcontent-%COMP%]{color:#002436}.mt-36[_ngcontent-%COMP%]{margin-top:36.2px}.w-37[_ngcontent-%COMP%]{width:37%}.sort-and-filter-btn[_ngcontent-%COMP%]   .am-dropdown-caret[_ngcontent-%COMP%]{width:2.5rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{right:.3rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:2.2rem}']
                })
                }
            }
            return x
        }
        )();
        const Gc = ["routePdfHiddenContainer"]
          , zc = ["routeSelectedPdf"]
          , K0 = x => ({
            "mt-4": x
        })
          , p0 = x => ({
            "text-style-color": x
        })
          , pc = x => ({
            portraitContainer: x
        })
          , e0 = x => ({
            currentPage: x
        })
          , v0 = x => ({
            highlightElement: x
        })
          , Do = x => ({
            "change-background": x
        })
          , Hc = x => ({
            portrait: x
        })
          , _c = x => ({
            portraitFooter: x
        })
          , C = x => ({
            portraitSymbols: x
        });
        function w(x, ZA) {
            if (1 & x && (A.j41(0, "p", 29),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.SpI(" ", a.aemLabels.selectTrainText, " ")
            }
        }
        function Q(x, ZA) {}
        function L(x, ZA) {
            1 & x && A.DNE(0, Q, 0, 0, "ng-template")
        }
        function W(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div", 31)(1, "app-schedule-trip-details", 32),
                A.bIt("click", function() {
                    const H = A.eBV(a).index
                      , yA = A.XpG(3);
                    return A.Njj(yA.selectTrain(H))
                })("createActiveTrainInfo", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(3);
                    return A.Njj(yA.activeTrainInfo = H)
                })("activeshowSummary", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(3);
                    return A.Njj(yA.activeshowSummary(H))
                }),
                A.k0s(),
                A.DNE(2, L, 1, 0, null, 28),
                A.k0s()
            }
            if (2 & x) {
                const a = ZA.$implicit
                  , Y = ZA.index;
                A.XpG(2);
                const H = A.sdS(21)
                  , yA = A.XpG();
                A.Y8G("ngClass", A.eq3(10, K0, 0 !== Y)),
                A.R7$(),
                A.Y8G("train", a)("content", yA.aemContent)("selectedTrain", yA.selectedTrains[Y])("activeTrain", yA.trainsSolutionsSubset[yA.activeSelectedTrain])("index", Y)("currentSelectedIndex", yA.currentSelectedIndex)("transferTimes", yA.transferTimes),
                A.R7$(),
                A.Y8G("ngIf", yA.isMobileView && yA.selectedTrains[Y])("ngIfThen", H)
            }
        }
        function j(x, ZA) {
            if (1 & x && (A.j41(0, "div"),
            A.DNE(1, W, 3, 12, "div", 30),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.Y8G("ngForOf", a.trainsSolutionsSubset)
            }
        }
        function eA(x, ZA) {
            if (1 & x && (A.j41(0, "div", 33)(1, "div", 34),
            A.nrm(2, "img", 35),
            A.k0s(),
            A.j41(3, "div", 36)(4, "p", 37),
            A.EFF(5),
            A.k0s(),
            A.j41(6, "p", 38),
            A.EFF(7),
            A.k0s()()()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(2),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/no-trains-avail.svg", A.B4B),
                A.R7$(3),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.noResults),
                A.R7$(2),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.noTrainsText)
            }
        }
        function cA(x, ZA) {}
        function gA(x, ZA) {
            1 & x && A.DNE(0, cA, 0, 0, "ng-template")
        }
        function RA(x, ZA) {
            if (1 & x && (A.j41(0, "div", 22)(1, "p", 43),
            A.EFF(2),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.JRh(a.aemLabels.seeYourRoute)
            }
        }
        function _A(x, ZA) {
            if (1 & x && (A.j41(0, "div", 22)(1, "p", 43),
            A.EFF(2),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.JRh(a.aemLabels.yourRoute)
            }
        }
        function $A(x, ZA) {
            if (1 & x && (A.j41(0, "div", 22)(1, "p", 44),
            A.EFF(2),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.JRh(a.aemLabels.seeYourRouteText)
            }
        }
        function gt(x, ZA) {
            if (1 & x && (A.j41(0, "span", 31),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4);
                A.Y8G("ngClass", A.eq3(3, p0, a.showSummary)),
                A.R7$(),
                A.Lme("", null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService ? null : a.selectedTrainDetails[0].travelService.number, " ", null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService || null == a.selectedTrainDetails[0].travelService.name ? null : a.selectedTrainDetails[0].travelService.name.desc_40, "")
            }
        }
        function TA(x, ZA) {
            if (1 & x && (A.j41(0, "div", 45)(1, "div", 46),
            A.nrm(2, "img", 47),
            A.nI1(3, "urlEncoderFriendly"),
            A.k0s(),
            A.j41(4, "div", 48),
            A.DNE(5, gt, 2, 5, "span", 49),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.Mz_("alt", "", null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService || null == a.selectedTrainDetails[0].travelService.name ? null : a.selectedTrainDetails[0].travelService.name.desc_26, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(3, 6, null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService || null == a.selectedTrainDetails[0].travelService.name ? null : a.selectedTrainDetails[0].travelService.name.desc_26), ".svg", A.B4B),
                A.R7$(3),
                A.Y8G("ngIf", !a.isMultiSegment)
            }
        }
        function Nt(x, ZA) {
            if (1 & x && (A.j41(0, "label", 51),
            A.nrm(1, "span", 52),
            A.EFF(2),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4);
                A.R7$(2),
                A.JRh(a.aemLabels.cancelledText)
            }
        }
        function St(x, ZA) {
            if (1 & x && (A.j41(0, "div", 22),
            A.DNE(1, Nt, 3, 1, "label", 50),
            A.k0s()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(),
                A.Y8G("ngIf", !a.initialRoute && a.cancelledTrain)
            }
        }
        function zt(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div", 39),
                A.DNE(1, RA, 3, 1, "div", 40)(2, _A, 3, 1, "div", 40)(3, $A, 3, 1, "div", 40)(4, TA, 6, 8, "div", 41)(5, St, 2, 1, "div", 40),
                A.j41(6, "div")(7, "app-train-route", 42),
                A.mxI("trainsSolutionsSubsetChange", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(2);
                    return A.DH7(yA.trainsSolutionsSubset, H) || (yA.trainsSolutionsSubset = H),
                    A.Njj(H)
                }),
                A.bIt("emitTransferTimes", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(2);
                    return A.Njj(yA.assignTransferTimes(H))
                }),
                A.k0s()()()
            }
            if (2 & x) {
                const a = A.XpG(2);
                A.Y8G("ngClass", A.eq3(15, K0, a.isMobileView)),
                A.R7$(),
                A.Y8G("ngIf", a.initialRoute),
                A.R7$(),
                A.Y8G("ngIf", !a.initialRoute),
                A.R7$(),
                A.Y8G("ngIf", a.initialRoute),
                A.R7$(),
                A.Y8G("ngIf", !a.initialRoute && !a.isMultiSegment),
                A.R7$(),
                A.Y8G("ngIf", !a.initialRoute && a.cancelledTrain),
                A.R7$(2),
                A.R50("trainsSolutionsSubset", a.trainsSolutionsSubset),
                A.Y8G("trainDetails", a.selectedTrainDetails)("isTrainSelected", a.isTrainSelected)("initialRoute", a.initialRoute)("cancelledTrain", a.cancelledTrain)("content", a.aemContent)("isMobileView", a.isMobileView)("destinationCode", a.destinationCode)("isRestricted", a.isRestricted)
            }
        }
        function ht(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.qex(0),
                A.j41(1, "div", 13)(2, "schedule-header", 14),
                A.bIt("dateSelected", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.filterTrainDetails(H))
                }),
                A.k0s(),
                A.j41(3, "div", 15)(4, "div", 16)(5, "div", 17)(6, "app-schedule-depature-date-dropdown", 14),
                A.bIt("dateSelected", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.filterTrainDetails(H))
                }),
                A.k0s()(),
                A.j41(7, "div", 18),
                A.nrm(8, "am-dropdown", 19),
                A.k0s()()(),
                A.j41(9, "div", 20)(10, "div", 21)(11, "div", 22)(12, "div", 23),
                A.EFF(13),
                A.k0s(),
                A.j41(14, "div", 24)(15, "app-schedule-print-pdf", 25),
                A.bIt("dateSelected", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.filterTrainDetails(H))
                }),
                A.k0s()(),
                A.DNE(16, w, 2, 1, "p", 26)(17, j, 2, 1, "div", 8)(18, eA, 8, 4, "div", 27),
                A.k0s()(),
                A.DNE(19, gA, 1, 0, null, 28)(20, zt, 8, 17, "ng-template", null, 7, A.C5r),
                A.k0s()(),
                A.bVm()
            }
            if (2 & x) {
                const a = A.sdS(21)
                  , Y = A.XpG()
                  , H = A.sdS(16)
                  , yA = A.sdS(18);
                A.R7$(2),
                A.Y8G("content", Y.aemContent)("isMultiSegment", Y.isMultiSegment)("pagination", Y.pagination)("activeTrain", Y.activeTrainInfo),
                A.R7$(4),
                A.Y8G("content", Y.aemContent)("isMultiSegment", Y.isMultiSegment)("pagination", Y.pagination)("activeTrain", Y.activeTrainInfo),
                A.R7$(2),
                A.Y8G("buttonTpl", H)("contentTpl", yA)("openModalInMobile", !0)("openModalInTablet", !0)("keepOpenOnBreakpointChange", !0),
                A.R7$(5),
                A.SpI(" ", Y.aemLabels.availableText, " "),
                A.R7$(2),
                A.Y8G("content", Y.aemContent)("isMultiSegment", Y.isMultiSegment)("pagination", Y.pagination)("activeTrain", Y.activeTrainInfo)("transferTimes", Y.transferTimes),
                A.R7$(),
                A.Y8G("ngIf", Y.aemLabels.selectTrainText && "" === !Y.aemLabels.selectTrainText),
                A.R7$(),
                A.Y8G("ngIf", Y.trainsSolutionsSubset && Y.trainsSolutionsSubset.length > 0),
                A.R7$(),
                A.Y8G("ngIf", Y.scheduleData.data.data && 0 === Y.scheduleData.data.data.length),
                A.R7$(),
                A.Y8G("ngIf", !Y.isMobileView)("ngIfThen", a)
            }
        }
        function Rt(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "tab", 66),
                A.bIt("selectTab", function(H) {
                    const yA = A.eBV(a).$implicit
                      , Ft = A.XpG(2);
                    return A.Njj(Ft.showTermsAndRequest(H, yA))
                }),
                A.k0s()
            }
            if (2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(2);
                A.FS9("heading", a),
                A.Y8G("tabindex", 0)("active", Y.filtersData.direction === a)
            }
        }
        function de(x, ZA) {
            1 & x && (A.qex(0),
            A.j41(1, "div", 67),
            A.nrm(2, "am-spinner"),
            A.k0s(),
            A.bVm())
        }
        function Se(x, ZA) {
            if (1 & x && (A.j41(0, "p", 29),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.SpI(" ", a.aemLabels.selectTrainRouteText, " ")
            }
        }
        function Ke(x, ZA) {}
        function ar(x, ZA) {
            1 & x && A.DNE(0, Ke, 0, 0, "ng-template")
        }
        function be(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div", 31)(1, "app-schedule-trip-details", 68),
                A.bIt("click", function() {
                    const H = A.eBV(a).index
                      , yA = A.XpG(3);
                    return A.Njj(yA.selectTrain(H))
                })("createActiveTrainInfo", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(3);
                    return A.Njj(yA.activeTrainInfo = H)
                }),
                A.k0s(),
                A.DNE(2, ar, 1, 0, null, 28),
                A.k0s()
            }
            if (2 & x) {
                const a = ZA.$implicit
                  , Y = ZA.index;
                A.XpG(2);
                const H = A.sdS(26)
                  , yA = A.XpG();
                A.Y8G("ngClass", A.eq3(7, K0, 0 !== Y)),
                A.R7$(),
                A.Y8G("train", a)("content", yA.aemContent)("selectedTrain", yA.selectedTrains[Y])("activeTrain", yA.trainsSolutionsSubset[yA.activeSelectedTrain]),
                A.R7$(),
                A.Y8G("ngIf", yA.isMobileView && yA.selectedTrains[Y])("ngIfThen", H)
            }
        }
        function ne(x, ZA) {
            if (1 & x && (A.j41(0, "div"),
            A.DNE(1, be, 3, 9, "div", 30),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.Y8G("ngForOf", a.trainsSolutionsSubset)
            }
        }
        function Re(x, ZA) {
            if (1 & x && (A.j41(0, "div", 33)(1, "div", 34),
            A.nrm(2, "img", 35),
            A.k0s(),
            A.j41(3, "div", 36)(4, "p", 37),
            A.EFF(5),
            A.k0s(),
            A.j41(6, "p", 38),
            A.EFF(7),
            A.k0s()()()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(2),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/no-trains-avail.svg", A.B4B),
                A.R7$(3),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.noResults),
                A.R7$(2),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.noTrainsText)
            }
        }
        function tr(x, ZA) {}
        function yt(x, ZA) {
            1 & x && A.DNE(0, tr, 0, 0, "ng-template")
        }
        function bt(x, ZA) {
            if (1 & x && (A.j41(0, "span", 31),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG(4);
                A.Y8G("ngClass", A.eq3(3, p0, a.showSummary)),
                A.R7$(),
                A.Lme("", null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService ? null : a.selectedTrainDetails[0].travelService.number, " ", null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService || null == a.selectedTrainDetails[0].travelService.name ? null : a.selectedTrainDetails[0].travelService.name.desc_40, "")
            }
        }
        function Ce(x, ZA) {
            if (1 & x && (A.j41(0, "div", 45)(1, "div", 46),
            A.nrm(2, "img", 47),
            A.nI1(3, "urlEncoderFriendly"),
            A.k0s(),
            A.j41(4, "div", 48),
            A.DNE(5, bt, 2, 5, "span", 49),
            A.k0s()()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(2),
                A.Mz_("alt", "", null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService || null == a.selectedTrainDetails[0].travelService.name ? null : a.selectedTrainDetails[0].travelService.name.desc_26, " Train Icon"),
                A.FCK("src", "", a.env.damAssetPath, "/icons/train-routes/", A.bMT(3, 6, null == a.selectedTrainDetails[0] || null == a.selectedTrainDetails[0].travelService || null == a.selectedTrainDetails[0].travelService.name ? null : a.selectedTrainDetails[0].travelService.name.desc_26), ".svg", A.B4B),
                A.R7$(3),
                A.Y8G("ngIf", !a.isMultiSegment && a.selectedTrainDetails)
            }
        }
        function ae(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div")(1, "app-train-route", 69),
                A.mxI("trainsSolutionsSubsetChange", function(H) {
                    A.eBV(a);
                    const yA = A.XpG(3);
                    return A.DH7(yA.trainsSolutionsSubset, H) || (yA.trainsSolutionsSubset = H),
                    A.Njj(H)
                }),
                A.k0s()()
            }
            if (2 & x) {
                const a = A.XpG(3);
                A.R7$(),
                A.R50("trainsSolutionsSubset", a.trainsSolutionsSubset),
                A.Y8G("trainDetails", a.selectedTrainDetails)("isTrainSelected", a.isTrainSelected)("initialRoute", a.initialRoute)("content", a.aemContent)("isMobileView", a.isMobileView)("destinationCode", a.destinationCode)("isRestricted", a.isRestricted)
            }
        }
        function We(x, ZA) {
            if (1 & x && (A.j41(0, "div", 39),
            A.DNE(1, Ce, 6, 8, "div", 41)(2, ae, 2, 8, "div", 8),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2);
                A.Y8G("ngClass", A.eq3(3, K0, a.isMobileView)),
                A.R7$(),
                A.Y8G("ngIf", !a.initialRoute && !a.isMultiSegment && a.selectedTrainDetails),
                A.R7$(),
                A.Y8G("ngIf", a.isTrainSelected)
            }
        }
        function je(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.qex(0),
                A.j41(1, "div", 53)(2, "h1", 54),
                A.EFF(3),
                A.k0s(),
                A.j41(4, "h4", 55),
                A.EFF(5),
                A.k0s(),
                A.j41(6, "tabset", 56),
                A.DNE(7, Rt, 1, 3, "tab", 57),
                A.k0s(),
                A.j41(8, "div", 20)(9, "div", 58)(10, "div", 59)(11, "app-schedule-depature-date-dropdown", 60),
                A.bIt("dateSelected", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.filterTrainDetailsByDay(H))
                }),
                A.k0s()()()(),
                A.j41(12, "div", 20)(13, "div", 61)(14, "div", 62)(15, "div", 23),
                A.EFF(16),
                A.k0s(),
                A.j41(17, "div", 63)(18, "button", 64),
                A.bIt("click", function() {
                    A.eBV(a);
                    const H = A.XpG();
                    return A.Njj(H.printRouteAll())
                }),
                A.nrm(19, "img", 65),
                A.k0s(),
                A.DNE(20, de, 3, 0, "ng-container", 8),
                A.k0s(),
                A.DNE(21, Se, 2, 1, "p", 26)(22, ne, 2, 1, "div", 8)(23, Re, 8, 4, "div", 27),
                A.k0s()(),
                A.DNE(24, yt, 1, 0, null, 28)(25, We, 3, 5, "ng-template", null, 7, A.C5r),
                A.k0s()(),
                A.bVm()
            }
            if (2 & x) {
                const a = A.sdS(26)
                  , Y = A.XpG();
                A.R7$(3),
                A.JRh(Y.routeName),
                A.R7$(2),
                A.JRh(Y.routecityName),
                A.R7$(2),
                A.Y8G("ngForOf", Y.directions),
                A.R7$(4),
                A.Y8G("content", Y.aemContent)("isMultiSegment", Y.isMultiSegment)("pagination", Y.pagination)("activeTrain", Y.activeTrainInfo)("direction", Y.filtersData.direction),
                A.R7$(5),
                A.SpI(" ", Y.aemLabels.availableTrip, " "),
                A.R7$(2),
                A.FS9("aria-label", null == Y.aemLabels ? null : Y.aemLabels.ariaLabelPrintDropdown),
                A.R7$(),
                A.Mz_("src", "", Y.env.damAssetPath, "/icons/print-icon.svg", A.B4B),
                A.FS9("alt", null == Y.aemLabels ? null : Y.aemLabels.ariaLabelPrintDropdown),
                A.R7$(),
                A.Y8G("ngIf", Y.pdfLoading),
                A.R7$(),
                A.Y8G("ngIf", Y.aemLabels.selectTrainRouteText),
                A.R7$(),
                A.Y8G("ngIf", Y.trainsSolutionsSubset && Y.trainsSolutionsSubset.length > 0),
                A.R7$(),
                A.Y8G("ngIf", Y.trainsSolutionsSubset && 0 === Y.trainsSolutionsSubset.length),
                A.R7$(),
                A.Y8G("ngIf", !Y.isMobileView)("ngIfThen", a)
            }
        }
        function Ve(x, ZA) {
            1 & x && A.eu8(0)
        }
        function Xt(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 84),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG().$implicit;
                A.R7$(2),
                A.JRh(a)
            }
        }
        function qe(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Xt, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function $e(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 84),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG().$implicit;
                A.R7$(2),
                A.JRh(a)
            }
        }
        function Yr(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, $e, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function ut(x, ZA) {
            if (1 & x && (A.qex(0),
            A.nrm(1, "div", 85),
            A.bVm()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(4);
                A.R7$(),
                A.Y8G("innerHTML", null == (a = H.stationStopMatrix.get("trainMetaData").get(Y)) || null == a.name || null == a.name.desc_40 ? null : a.name.desc_40.replace(" ", "<br>"), A.npT)
            }
        }
        function Lt(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, ut, 2, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function Zt(x, ZA) {
            if (1 & x && (A.qex(0),
            A.nrm(1, "div", 85),
            A.bVm()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(4);
                A.R7$(),
                A.Y8G("innerHTML", null == (a = H.stationStopMatrix.get("trainMetaData").get(Y)) || null == a.name || null == a.name.desc_40 ? null : a.name.desc_40.replace(" ", "<br>"), A.npT)
            }
        }
        function fe(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Zt, 2, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function me(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", Y.getFrequencyTextFromTrainScheduleMap(a), " ")
            }
        }
        function Pe(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, me, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function He(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", Y.getFrequencyTextFromTrainScheduleMap(a), " ")
            }
        }
        function Je(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, He, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function Qr(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 87),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", Y.getDurationFromTrainScheduleMap(a), " ")
            }
        }
        function ur(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Qr, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function Nr(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 87),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(2),
                A.SpI(" ", Y.getDurationFromTrainScheduleMap(a), " ")
            }
        }
        function Tr(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Nr, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function Mn(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 88),
            A.nrm(2, "div", 89)(3, "br"),
            A.EFF(4),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG(5);
                A.R7$(4),
                A.SpI("", null == a.aemLabels || null == a.aemLabels.pdfRoutes ? null : a.aemLabels.pdfRoutes.readdown, " ")
            }
        }
        function Ar(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Mn, 5, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function qt(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 90),
            A.nrm(2, "div", 91)(3, "br"),
            A.EFF(4),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG(5);
                A.R7$(4),
                A.SpI("", null == a.aemLabels || null == a.aemLabels.pdfRoutes ? null : a.aemLabels.pdfRoutes.readup, " ")
            }
        }
        function Gn(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, qt, 5, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(4);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function rn(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(9);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function fr(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, rn, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(4);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[0], Ft, yA, H, !0), "h:mmaaaaa"), " ")
            }
        }
        function Sr(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(9);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function Hr(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, Sr, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(4);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[0], Ft, yA, H), "h:mmaaaaa"), " ")
            }
        }
        function Rr(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, fr, 4, 8, "div", 95)(2, Hr, 4, 8, "div", 95),
            A.bVm()),
            2 & x) {
                const a = A.XpG(2).index;
                A.R7$(),
                A.Y8G("ngIf", 0 === a),
                A.R7$(),
                A.Y8G("ngIf", 0 !== a)
            }
        }
        function wn(x, ZA) {
            1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2, "\u2014"),
            A.k0s(),
            A.bVm())
        }
        function Yn(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Rr, 3, 2, "ng-container", 8)(2, wn, 3, 0, "ng-container", 8),
            A.bVm()),
            2 & x) {
                const a = ZA.index
                  , Y = A.XpG().$implicit
                  , H = A.XpG().$implicit
                  , yA = A.XpG(4);
                A.R7$(),
                A.Y8G("ngIf", yA.getTimeFromMatrix(yA.pdfScheduleData.directions[0], H, Y, a)),
                A.R7$(),
                A.Y8G("ngIf", !yA.getTimeFromMatrix(yA.pdfScheduleData.directions[0], H, Y, a))
            }
        }
        function Hn(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Yn, 3, 2, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function Wn(x, ZA) {
            if (1 & x && (A.j41(0, "div", 99),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(4);
                A.R7$(),
                A.E5c(" ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.name, " - ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.facility, " (", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.code, ") ")
            }
        }
        function gi(x, ZA) {
            if (1 & x && (A.j41(0, "div", 99),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(4);
                A.R7$(),
                A.Lme(" ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.name, " (", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.code, ") ")
            }
        }
        function wi(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(9);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function Fn(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, wi, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(4);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[1], Ft, yA, H), "h:mmaaaaa"), " ")
            }
        }
        function _n(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(9);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function pr(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, _n, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(4);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[1], Ft, yA, H, !0), "h:mmaaaaa"), " ")
            }
        }
        function Pa(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Fn, 4, 8, "div", 95)(2, pr, 4, 8, "div", 95),
            A.bVm()),
            2 & x) {
                const a = A.XpG(2).index;
                A.R7$(),
                A.Y8G("ngIf", 0 !== a),
                A.R7$(),
                A.Y8G("ngIf", 0 === a)
            }
        }
        function ui(x, ZA) {
            1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2, "\u2014"),
            A.k0s(),
            A.bVm())
        }
        function Fs(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Pa, 3, 2, "ng-container", 8)(2, ui, 3, 0, "ng-container", 8),
            A.bVm()),
            2 & x) {
                const a = ZA.index
                  , Y = A.XpG().$implicit
                  , H = A.XpG().$implicit
                  , yA = A.XpG(4);
                A.R7$(),
                A.Y8G("ngIf", yA.getTimeFromMatrix(yA.pdfScheduleData.directions[1], H, Y, a)),
                A.R7$(),
                A.Y8G("ngIf", !yA.getTimeFromMatrix(yA.pdfScheduleData.directions[1], H, Y, a))
            }
        }
        function Ui(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Fs, 3, 2, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(5);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function Ji(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 100),
            A.k0s()),
            2 & x) {
                const a = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Staffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelStaffed)
            }
        }
        function Vs(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 100),
            A.k0s()),
            2 & x) {
                const a = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Unstaffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelUnStaffed)
            }
        }
        function di(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 101),
            A.k0s()),
            2 & x) {
                const a = A.XpG(5);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Kiosk.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelKiosk)
            }
        }
        function Po(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 92),
            A.DNE(2, Hn, 2, 1, "ng-container", 70)(3, Wn, 2, 3, "div", 93)(4, gi, 2, 2, "div", 93)(5, Ui, 2, 1, "ng-container", 70),
            A.qex(6),
            A.j41(7, "div", 94),
            A.DNE(8, Ji, 2, 3, "span", 8)(9, Vs, 2, 3, "span", 8)(10, di, 2, 3, "span", 8),
            A.k0s(),
            A.bVm(),
            A.k0s(),
            A.bVm()),
            2 & x) {
                let a, Y, H, yA, Ft;
                const wt = ZA.$implicit
                  , Qt = A.XpG(4);
                A.R7$(),
                A.Y8G("ngClass", A.eq3(8, v0, wt == Qt.firstElement || wt == Qt.lastElement)),
                A.R7$(),
                A.Y8G("ngForOf", Qt.pdfScheduleData.outboundTrains),
                A.R7$(),
                A.Y8G("ngIf", "" !== (null == (a = Qt.stationStopMatrix.get("stationMetaData").get(wt)) ? null : a.facility)),
                A.R7$(),
                A.Y8G("ngIf", "" === (null == (Y = Qt.stationStopMatrix.get("stationMetaData").get(wt)) ? null : Y.facility)),
                A.R7$(),
                A.Y8G("ngForOf", Qt.pdfScheduleData.inboundTrains),
                A.R7$(3),
                A.Y8G("ngIf", null == (H = Qt.stationStopMatrix.get("stationMetaData").get(wt)) ? null : H.staffed),
                A.R7$(),
                A.Y8G("ngIf", !(null != (yA = Qt.stationStopMatrix.get("stationMetaData").get(wt)) && yA.staffed)),
                A.R7$(),
                A.Y8G("ngIf", null == (Ft = Qt.stationStopMatrix.get("stationMetaData").get(wt)) ? null : Ft.kiosk)
            }
        }
        function xn(x, ZA) {
            if (1 & x && (A.j41(0, "div", 76)(1, "div", 77)(2, "div", 78),
            A.DNE(3, qe, 2, 1, "ng-container", 70),
            A.j41(4, "div", 79),
            A.EFF(5),
            A.k0s(),
            A.DNE(6, Yr, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(7, "div", 80),
            A.DNE(8, Lt, 2, 1, "ng-container", 70),
            A.j41(9, "div", 81),
            A.EFF(10),
            A.k0s(),
            A.DNE(11, fe, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(12, "div", 78),
            A.DNE(13, Pe, 2, 1, "ng-container", 70),
            A.j41(14, "div", 79),
            A.EFF(15),
            A.k0s(),
            A.DNE(16, Je, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(17, "div", 78),
            A.DNE(18, ur, 2, 1, "ng-container", 70),
            A.j41(19, "div", 79),
            A.EFF(20),
            A.k0s(),
            A.DNE(21, Tr, 2, 1, "ng-container", 70),
            A.j41(22, "div", 82),
            A.EFF(23),
            A.k0s()(),
            A.j41(24, "div", 78),
            A.DNE(25, Ar, 2, 1, "ng-container", 70),
            A.j41(26, "div", 83),
            A.EFF(27),
            A.k0s(),
            A.DNE(28, Gn, 2, 1, "ng-container", 70),
            A.k0s(),
            A.DNE(29, Po, 11, 10, "ng-container", 70),
            A.k0s()()),
            2 & x) {
                const a = A.XpG().$implicit
                  , Y = A.XpG(2);
                A.R7$(3),
                A.Y8G("ngForOf", Y.pdfScheduleData.outboundTrains),
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels || null == Y.aemLabels.pdfRoutes ? null : Y.aemLabels.pdfRoutes.trainNumber, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y.pdfScheduleData.inboundTrains),
                A.R7$(2),
                A.Y8G("ngForOf", Y.pdfScheduleData.outboundTrains),
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels || null == Y.aemLabels.pdfRoutes ? null : Y.aemLabels.pdfRoutes.serviceName, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y.pdfScheduleData.inboundTrains),
                A.R7$(2),
                A.Y8G("ngForOf", Y.pdfScheduleData.outboundTrains),
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels || null == Y.aemLabels.pdfRoutes ? null : Y.aemLabels.pdfRoutes.frequency, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y.pdfScheduleData.inboundTrains),
                A.R7$(2),
                A.Y8G("ngForOf", Y.pdfScheduleData.outboundTrains),
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels || null == Y.aemLabels.pdfRoutes ? null : Y.aemLabels.pdfRoutes.duration, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y.pdfScheduleData.inboundTrains),
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels || null == Y.aemLabels.pdfRoutes ? null : Y.aemLabels.pdfRoutes.symbols, " "),
                A.R7$(2),
                A.Y8G("ngForOf", Y.pdfScheduleData.outboundTrains),
                A.R7$(2),
                A.SpI(" ", null == Y.aemLabels || null == Y.aemLabels.pdfRoutes ? null : Y.aemLabels.pdfRoutes.direction, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y.pdfScheduleData.inboundTrains),
                A.R7$(),
                A.Y8G("ngForOf", a)
            }
        }
        function xs(x, ZA) {}
        function Xs(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 71),
            A.DNE(2, Ve, 1, 0, "ng-container", 72)(3, xn, 30, 17, "div", 75)(4, xs, 0, 0, "ng-template", 74),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.index
                  , Y = A.XpG(2)
                  , H = A.sdS(10)
                  , yA = A.sdS(12);
                A.R7$(),
                A.Y8G("ngClass", A.eq3(5, pc, null == Y.pdfScheduleData ? null : Y.pdfScheduleData.pageViewPortrait)),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", H),
                A.R7$(),
                A.Y8G("ngIf", Y.stationStopMatrix),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", yA)("ngTemplateOutletContext", A.eq3(7, e0, a))
            }
        }
        function ki(x, ZA) {
            1 & x && A.eu8(0)
        }
        function jr(x, ZA) {}
        function $n(x, ZA) {}
        function Zs(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Xs, 5, 9, "ng-container", 70),
            A.j41(2, "div", 71),
            A.DNE(3, ki, 1, 0, "ng-container", 72)(4, jr, 0, 0, "ng-template", 73)(5, $n, 0, 0, "ng-template", 74),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG()
                  , Y = A.sdS(10)
                  , H = A.sdS(12)
                  , yA = A.sdS(14);
                A.R7$(),
                A.Y8G("ngForOf", null == a.pdfScheduleData ? null : a.pdfScheduleData.pagedStations),
                A.R7$(),
                A.Y8G("ngClass", A.eq3(6, pc, null == a.pdfScheduleData ? null : a.pdfScheduleData.pageViewPortrait)),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", Y),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", yA),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", H)("ngTemplateOutletContext", A.eq3(8, e0, null == a.pdfScheduleData || null == a.pdfScheduleData.pagedStations ? null : a.pdfScheduleData.pagedStations.length))
            }
        }
        function Fa(x, ZA) {
            1 & x && A.eu8(0)
        }
        function es(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 84),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG().$implicit;
                A.R7$(2),
                A.SpI(" ", a, " ")
            }
        }
        function rs(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, es, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function pn(x, ZA) {
            if (1 & x && (A.qex(0),
            A.nrm(1, "div", 103),
            A.bVm()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(6);
                A.R7$(),
                A.Y8G("innerHTML", null == (a = H.stationStopMatrix.get("trainMetaData").get(Y)) || null == a.name || null == a.name.desc_40 ? null : a.name.desc_40.replace(" ", "<br>"), A.npT)
            }
        }
        function bn(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, pn, 2, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function qs(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(7);
                A.R7$(2),
                A.SpI(" ", Y.getFrequencyTextFromTrainScheduleMap(a), " ")
            }
        }
        function ta(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, qs, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function vr(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 87),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(7);
                A.R7$(2),
                A.SpI(" ", Y.getDurationFromTrainScheduleMap(a), " ")
            }
        }
        function fa(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, vr, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function ns(x, ZA) {
            1 & x && (A.qex(0),
            A.j41(1, "div", 88),
            A.EFF(2, " \xa0 "),
            A.k0s(),
            A.bVm())
        }
        function Ss(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, ns, 3, 0, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function bi(x, ZA) {
            if (1 & x && (A.j41(0, "div", 105),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(6);
                A.R7$(),
                A.E5c(" ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.name, " - ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.facility, " (", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.code, ") ")
            }
        }
        function Qs(x, ZA) {
            if (1 & x && (A.j41(0, "div", 105),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(6);
                A.R7$(),
                A.Lme(" ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.name, " (", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.code, ") ")
            }
        }
        function xa(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(11);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function Na(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, xa, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(6);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[0], Ft, yA, H, !0), "h:mmaaaaa"), " ")
            }
        }
        function is(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(11);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function za(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, is, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(6);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[0], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[0], Ft, yA, H), "h:mmaaaaa"), " ")
            }
        }
        function as(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Na, 4, 8, "div", 95)(2, za, 4, 8, "div", 95),
            A.bVm()),
            2 & x) {
                const a = A.XpG(2).index;
                A.R7$(),
                A.Y8G("ngIf", 0 === a),
                A.R7$(),
                A.Y8G("ngIf", 0 !== a)
            }
        }
        function ss(x, ZA) {
            1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2, "\u2014"),
            A.k0s(),
            A.bVm())
        }
        function Cs(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, as, 3, 2, "ng-container", 8)(2, ss, 3, 0, "ng-container", 8),
            A.bVm()),
            2 & x) {
                const a = ZA.index
                  , Y = A.XpG().$implicit
                  , H = A.XpG().$implicit
                  , yA = A.XpG(6);
                A.R7$(),
                A.Y8G("ngIf", yA.getTimeFromMatrix(yA.pdfScheduleData.directions[0], H, Y, a)),
                A.R7$(),
                A.Y8G("ngIf", !yA.getTimeFromMatrix(yA.pdfScheduleData.directions[0], H, Y, a))
            }
        }
        function Us(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Cs, 3, 2, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(7);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function ps(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 100),
            A.k0s()),
            2 & x) {
                const a = A.XpG(7);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Staffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelStaffed)
            }
        }
        function r0(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 100),
            A.k0s()),
            2 & x) {
                const a = A.XpG(7);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Unstaffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelUnStaffed)
            }
        }
        function M0(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 101),
            A.k0s()),
            2 & x) {
                const a = A.XpG(7);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Kiosk.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelKiosk)
            }
        }
        function vc(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 92),
            A.DNE(2, bi, 2, 3, "div", 104)(3, Qs, 2, 2, "div", 104)(4, Us, 2, 1, "ng-container", 70),
            A.qex(5),
            A.j41(6, "div", 94),
            A.DNE(7, ps, 2, 3, "span", 8)(8, r0, 2, 3, "span", 8)(9, M0, 2, 3, "span", 8),
            A.k0s(),
            A.bVm(),
            A.k0s(),
            A.bVm()),
            2 & x) {
                let a, Y, H, yA, Ft;
                const wt = ZA.$implicit
                  , Qt = A.XpG(3).$implicit
                  , Ge = A.XpG(3);
                A.R7$(),
                A.Y8G("ngClass", A.eq3(7, v0, wt == Ge.firstElement || wt == Ge.lastElement)),
                A.R7$(),
                A.Y8G("ngIf", "" !== (null == (a = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : a.facility)),
                A.R7$(),
                A.Y8G("ngIf", "" === (null == (Y = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : Y.facility)),
                A.R7$(),
                A.Y8G("ngForOf", Qt),
                A.R7$(3),
                A.Y8G("ngIf", null == (H = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : H.staffed),
                A.R7$(),
                A.Y8G("ngIf", !(null != (yA = Ge.stationStopMatrix.get("stationMetaData").get(wt)) && yA.staffed)),
                A.R7$(),
                A.Y8G("ngIf", null == (Ft = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : Ft.kiosk)
            }
        }
        function n0(x, ZA) {
            if (1 & x && (A.j41(0, "div", 76)(1, "div", 77)(2, "div", 78)(3, "div", 79),
            A.EFF(4),
            A.k0s(),
            A.DNE(5, rs, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(6, "div", 80)(7, "div", 81),
            A.EFF(8),
            A.k0s(),
            A.DNE(9, bn, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(10, "div", 78)(11, "div", 79),
            A.EFF(12),
            A.k0s(),
            A.DNE(13, ta, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(14, "div", 78)(15, "div", 79),
            A.EFF(16),
            A.k0s(),
            A.DNE(17, fa, 2, 1, "ng-container", 70),
            A.j41(18, "div", 82),
            A.EFF(19),
            A.k0s()(),
            A.j41(20, "div", 78)(21, "div", 83),
            A.EFF(22, " \xa0 "),
            A.k0s(),
            A.DNE(23, Ss, 2, 1, "ng-container", 70),
            A.k0s(),
            A.DNE(24, vc, 10, 9, "ng-container", 70),
            A.k0s()()),
            2 & x) {
                const a = A.XpG().$implicit
                  , Y = A.XpG().$implicit
                  , H = A.XpG(3);
                A.R7$(4),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.trainNumber, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(3),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.serviceName, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(3),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.frequency, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(3),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.duration, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(2),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.symbols, " "),
                A.R7$(4),
                A.Y8G("ngForOf", Y),
                A.R7$(),
                A.Y8G("ngForOf", a)
            }
        }
        function i0(x, ZA) {}
        function W0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 102),
            A.DNE(2, Fa, 1, 0, "ng-container", 72)(3, n0, 25, 11, "div", 75)(4, i0, 0, 0, "ng-template", 74),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.index
                  , Y = A.XpG().index
                  , H = A.XpG(3)
                  , yA = A.sdS(10)
                  , Ft = A.sdS(12);
                A.R7$(2),
                A.Y8G("ngTemplateOutlet", yA),
                A.R7$(),
                A.Y8G("ngIf", H.stationStopMatrix),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", Ft)("ngTemplateOutletContext", A.eq3(4, e0, a + Y))
            }
        }
        function Mc(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, W0, 5, 6, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(),
                A.Y8G("ngForOf", null == a.pdfScheduleData ? null : a.pdfScheduleData.pagedStations)
            }
        }
        function I0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Mc, 2, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.Y8G("ngForOf", a.pdfScheduleData.pagedOutboundTrains)
            }
        }
        function Ic(x, ZA) {
            1 & x && A.eu8(0)
        }
        function V0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 84),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG().$implicit;
                A.R7$(2),
                A.SpI(" ", a, " ")
            }
        }
        function Dc(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, V0, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function a0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.nrm(1, "div", 103),
            A.bVm()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(6);
                A.R7$(),
                A.Y8G("innerHTML", null == (a = H.stationStopMatrix.get("trainMetaData").get(Y)) || null == a.name || null == a.name.desc_40 ? null : a.name.desc_40.replace(" ", "<br>"), A.npT)
            }
        }
        function X0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, a0, 2, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function ca(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(7);
                A.R7$(2),
                A.SpI(" ", Y.getFrequencyTextFromTrainScheduleMap(a), " ")
            }
        }
        function Z0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, ca, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function No(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 87),
            A.EFF(2),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(7);
                A.R7$(2),
                A.SpI(" ", Y.getDurationFromTrainScheduleMap(a), " ")
            }
        }
        function Ro(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, No, 3, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function mo(x, ZA) {
            1 & x && (A.qex(0),
            A.j41(1, "div", 88),
            A.EFF(2, " \xa0 "),
            A.k0s(),
            A.bVm())
        }
        function Lo(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, mo, 3, 0, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(6);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function Ys(x, ZA) {
            if (1 & x && (A.j41(0, "div", 105),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(6);
                A.R7$(),
                A.E5c(" ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.name, " - ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.facility, " (", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.code, ") ")
            }
        }
        function bs(x, ZA) {
            if (1 & x && (A.j41(0, "div", 105),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                let a;
                const Y = A.XpG().$implicit
                  , H = A.XpG(6);
                A.R7$(),
                A.Lme(" ", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.name, " (", null == (a = H.stationStopMatrix.get("stationMetaData").get(Y)) ? null : a.code, ") ")
            }
        }
        function pi(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(11);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function Wa(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, pi, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(6);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[1], Ft, yA, H, !0), "h:mmaaaaa"), " ")
            }
        }
        function Go(x, ZA) {
            if (1 & x && A.nrm(0, "img", 98),
            2 & x) {
                const a = A.XpG(11);
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B)
            }
        }
        function D0(x, ZA) {
            if (1 & x && (A.j41(0, "div", 96),
            A.DNE(1, Go, 1, 2, "img", 97),
            A.EFF(2),
            A.nI1(3, "date"),
            A.k0s()),
            2 & x) {
                const a = A.XpG(2)
                  , Y = a.$implicit
                  , H = a.index
                  , yA = A.XpG().$implicit
                  , Ft = A.XpG().$implicit
                  , wt = A.XpG(6);
                A.Y8G("ngClass", A.eq3(6, Do, wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H))),
                A.R7$(),
                A.Y8G("ngIf", wt.getOverNightIndicator(Y, wt.pdfScheduleData.directions[1], Ft, yA, H)),
                A.R7$(),
                A.SpI(" ", A.i5U(3, 3, wt.getTimeFromMatrix(wt.pdfScheduleData.directions[1], Ft, yA, H), "h:mmaaaaa"), " ")
            }
        }
        function zo(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Wa, 4, 8, "div", 95)(2, D0, 4, 8, "div", 95),
            A.bVm()),
            2 & x) {
                const a = A.XpG(2).index;
                A.R7$(),
                A.Y8G("ngIf", 0 === a),
                A.R7$(),
                A.Y8G("ngIf", 0 !== a)
            }
        }
        function m0(x, ZA) {
            1 & x && (A.qex(0),
            A.j41(1, "div", 86),
            A.EFF(2, "\u2014"),
            A.k0s(),
            A.bVm())
        }
        function _s(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, zo, 3, 2, "ng-container", 8)(2, m0, 3, 0, "ng-container", 8),
            A.bVm()),
            2 & x) {
                const a = ZA.index
                  , Y = A.XpG().$implicit
                  , H = A.XpG().$implicit
                  , yA = A.XpG(6);
                A.R7$(),
                A.Y8G("ngIf", yA.getTimeFromMatrix(yA.pdfScheduleData.directions[1], H, Y, a)),
                A.R7$(),
                A.Y8G("ngIf", !yA.getTimeFromMatrix(yA.pdfScheduleData.directions[1], H, Y, a))
            }
        }
        function y0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, _s, 3, 2, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = ZA.$implicit
                  , Y = A.XpG(7);
                A.R7$(),
                A.Y8G("ngForOf", Y.trainScheduleMap.get(a))
            }
        }
        function s0(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 100),
            A.k0s()),
            2 & x) {
                const a = A.XpG(7);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Staffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelStaffed)
            }
        }
        function q0(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 100),
            A.k0s()),
            2 & x) {
                const a = A.XpG(7);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Unstaffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelUnStaffed)
            }
        }
        function _0(x, ZA) {
            if (1 & x && (A.j41(0, "span"),
            A.nrm(1, "img", 101),
            A.k0s()),
            2 & x) {
                const a = A.XpG(7);
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Kiosk.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelKiosk)
            }
        }
        function F0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 92),
            A.DNE(2, Ys, 2, 3, "div", 104)(3, bs, 2, 2, "div", 104)(4, y0, 2, 1, "ng-container", 70),
            A.qex(5),
            A.j41(6, "div", 94),
            A.DNE(7, s0, 2, 3, "span", 8)(8, q0, 2, 3, "span", 8)(9, _0, 2, 3, "span", 8),
            A.k0s(),
            A.bVm(),
            A.k0s(),
            A.bVm()),
            2 & x) {
                let a, Y, H, yA, Ft;
                const wt = ZA.$implicit
                  , Qt = A.XpG(3).$implicit
                  , Ge = A.XpG(3);
                A.R7$(),
                A.Y8G("ngClass", A.eq3(7, v0, wt == Ge.firstElement || wt == Ge.lastElement)),
                A.R7$(),
                A.Y8G("ngIf", "" !== (null == (a = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : a.facility)),
                A.R7$(),
                A.Y8G("ngIf", "" === (null == (Y = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : Y.facility)),
                A.R7$(),
                A.Y8G("ngForOf", Qt),
                A.R7$(3),
                A.Y8G("ngIf", null == (H = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : H.staffed),
                A.R7$(),
                A.Y8G("ngIf", !(null != (yA = Ge.stationStopMatrix.get("stationMetaData").get(wt)) && yA.staffed)),
                A.R7$(),
                A.Y8G("ngIf", null == (Ft = Ge.stationStopMatrix.get("stationMetaData").get(wt)) ? null : Ft.kiosk)
            }
        }
        function co(x, ZA) {
            if (1 & x && (A.j41(0, "div", 76)(1, "div", 77)(2, "div", 78)(3, "div", 79),
            A.EFF(4),
            A.k0s(),
            A.DNE(5, Dc, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(6, "div", 80)(7, "div", 81),
            A.EFF(8),
            A.k0s(),
            A.DNE(9, X0, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(10, "div", 78)(11, "div", 79),
            A.EFF(12),
            A.k0s(),
            A.DNE(13, Z0, 2, 1, "ng-container", 70),
            A.k0s(),
            A.j41(14, "div", 78)(15, "div", 79),
            A.EFF(16),
            A.k0s(),
            A.DNE(17, Ro, 2, 1, "ng-container", 70),
            A.j41(18, "div", 82),
            A.EFF(19),
            A.k0s()(),
            A.j41(20, "div", 78)(21, "div", 83),
            A.EFF(22, " \xa0 "),
            A.k0s(),
            A.DNE(23, Lo, 2, 1, "ng-container", 70),
            A.k0s(),
            A.DNE(24, F0, 10, 9, "ng-container", 70),
            A.k0s()()),
            2 & x) {
                const a = A.XpG().$implicit
                  , Y = A.XpG().$implicit
                  , H = A.XpG(3);
                A.R7$(4),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.trainNumber, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(3),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.serviceName, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(3),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.frequency, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(3),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.duration, " "),
                A.R7$(),
                A.Y8G("ngForOf", Y),
                A.R7$(2),
                A.SpI(" ", null == H.aemLabels || null == H.aemLabels.pdfRoutes ? null : H.aemLabels.pdfRoutes.symbols, " "),
                A.R7$(4),
                A.Y8G("ngForOf", Y),
                A.R7$(),
                A.Y8G("ngForOf", a)
            }
        }
        function o0(x, ZA) {}
        function c0(x, ZA) {
            if (1 & x && (A.qex(0),
            A.j41(1, "div", 102),
            A.DNE(2, Ic, 1, 0, "ng-container", 72)(3, co, 25, 11, "div", 75)(4, o0, 0, 0, "ng-template", 74),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = ZA.index
                  , Y = A.XpG().index
                  , H = A.XpG(3)
                  , yA = A.sdS(10)
                  , Ft = A.sdS(12);
                A.R7$(2),
                A.Y8G("ngTemplateOutlet", yA),
                A.R7$(),
                A.Y8G("ngIf", H.stationStopMatrix),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", Ft)("ngTemplateOutletContext", A.eq3(4, e0, a + Y + H.pdfScheduleData.pagedOutboundTrains.length))
            }
        }
        function Ha(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, c0, 5, 6, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = A.XpG(3);
                A.R7$(),
                A.Y8G("ngForOf", null == a.pdfScheduleData ? null : a.pdfScheduleData.pagedStationsReversed)
            }
        }
        function Ia(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, Ha, 2, 1, "ng-container", 70),
            A.bVm()),
            2 & x) {
                const a = A.XpG(2);
                A.R7$(),
                A.Y8G("ngForOf", a.pdfScheduleData.pagedInboundTrains)
            }
        }
        function mc(x, ZA) {
            1 & x && A.eu8(0)
        }
        function $0(x, ZA) {}
        function Tn(x, ZA) {}
        function yc(x, ZA) {
            if (1 & x && (A.qex(0),
            A.DNE(1, I0, 2, 1, "ng-container", 8)(2, Ia, 2, 1, "ng-container", 8),
            A.j41(3, "div", 102),
            A.DNE(4, mc, 1, 0, "ng-container", 72)(5, $0, 0, 0, "ng-template", 73)(6, Tn, 0, 0, "ng-template", 74),
            A.k0s(),
            A.bVm()),
            2 & x) {
                const a = A.XpG()
                  , Y = A.sdS(10)
                  , H = A.sdS(12)
                  , yA = A.sdS(14);
                A.R7$(),
                A.Y8G("ngIf", !a.nerDirection || "NORTH" === a.nerDirection),
                A.R7$(),
                A.Y8G("ngIf", !a.nerDirection || "SOUTH" === a.nerDirection),
                A.R7$(2),
                A.Y8G("ngTemplateOutlet", Y),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", yA),
                A.R7$(),
                A.Y8G("ngTemplateOutlet", H)("ngTemplateOutletContext", A.eq3(6, e0, a.pdfScheduleData.pagedInboundTrains.length + a.pdfScheduleData.pagedOutboundTrains.length))
            }
        }
        function g0(x, ZA) {
            if (1 & x && (A.j41(0, "div", 106)(1, "div", 22)(2, "div", 107),
            A.nrm(3, "div", 108),
            A.k0s(),
            A.j41(4, "div", 109)(5, "span", 110),
            A.EFF(6),
            A.k0s()()(),
            A.j41(7, "div", 22)(8, "div", 111),
            A.EFF(9),
            A.k0s()()()),
            2 & x) {
                const a = A.XpG();
                A.R7$(3),
                A.Y8G("innerHTML", a.amtrakLogoSvg, A.npT),
                A.R7$(),
                A.Y8G("ngClass", A.eq3(4, Hc, null == a.pdfScheduleData ? null : a.pdfScheduleData.pageViewPortrait)),
                A.R7$(2),
                A.SpI(" ", a.routeName, " "),
                A.R7$(3),
                A.JRh(a.todaysDate)
            }
        }
        function Sn(x, ZA) {
            if (1 & x && (A.j41(0, "div", 116),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG().currentPage
                  , Y = A.XpG();
                A.R7$(),
                A.Lme(" Page ", a + 1, " of ", Y.pagedStations.length + 1, " ")
            }
        }
        function En(x, ZA) {
            if (1 & x && (A.j41(0, "div", 116),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG().currentPage
                  , Y = A.XpG();
                A.R7$(),
                A.Lme(" Page ", a + 1, " of ", Y.pdfScheduleData.pagedStations.length + 1, " ")
            }
        }
        function Ac(x, ZA) {
            if (1 & x && (A.j41(0, "div", 116),
            A.EFF(1),
            A.k0s()),
            2 & x) {
                const a = A.XpG().currentPage
                  , Y = A.XpG();
                A.R7$(),
                A.Lme(" Page ", a + 1, " of ", Y.pdfScheduleData.pagedInboundTrains.length + Y.pdfScheduleData.pagedOutboundTrains.length + 1, " ")
            }
        }
        function Ho(x, ZA) {
            if (1 & x && (A.j41(0, "div", 112)(1, "div", 22)(2, "div", 113),
            A.EFF(3),
            A.k0s()(),
            A.j41(4, "div", 22)(5, "div", 114),
            A.EFF(6),
            A.k0s(),
            A.DNE(7, Sn, 2, 2, "div", 115)(8, En, 2, 2, "div", 115)(9, Ac, 2, 2, "div", 115),
            A.k0s()()),
            2 & x) {
                const a = A.XpG();
                A.Y8G("ngClass", A.eq3(6, _c, null == a.pdfScheduleData ? null : a.pdfScheduleData.pageViewPortrait)),
                A.R7$(3),
                A.JRh(a.routesDescription),
                A.R7$(3),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.pdfFooterText, " "),
                A.R7$(),
                A.Y8G("ngIf", !(null != a.pdfScheduleData && a.pdfScheduleData.pagedStations) && (null == a.pdfScheduleData || null == a.pdfScheduleData.pagedStations ? null : a.pdfScheduleData.pagedStations.length)),
                A.R7$(),
                A.Y8G("ngIf", 0 == (null == a.pdfScheduleData || null == a.pdfScheduleData.pagedInboundTrains ? null : a.pdfScheduleData.pagedInboundTrains.length) || 0 == (null == a.pdfScheduleData || null == a.pdfScheduleData.pagedOutboundTrains ? null : a.pdfScheduleData.pagedOutboundTrains.length)),
                A.R7$(),
                A.Y8G("ngIf", (null == a.pdfScheduleData || null == a.pdfScheduleData.pagedInboundTrains ? null : a.pdfScheduleData.pagedInboundTrains.length) > 0 || (null == a.pdfScheduleData || null == a.pdfScheduleData.pagedOutboundTrains ? null : a.pdfScheduleData.pagedOutboundTrains.length) > 0)
            }
        }
        function $s(x, ZA) {
            if (1 & x && (A.j41(0, "div", 117),
            A.EFF(1),
            A.k0s(),
            A.j41(2, "div", 76)(3, "div", 118)(4, "div", 119)(5, "div", 90),
            A.nrm(6, "div", 91),
            A.k0s(),
            A.j41(7, "div", 84)(8, "span", 120),
            A.EFF(9),
            A.k0s(),
            A.EFF(10),
            A.k0s()(),
            A.j41(11, "div", 119)(12, "div", 88),
            A.nrm(13, "div", 89),
            A.k0s(),
            A.j41(14, "div", 84)(15, "span", 120),
            A.EFF(16),
            A.k0s(),
            A.EFF(17),
            A.k0s()(),
            A.j41(18, "div", 119)(19, "div", 86),
            A.nrm(20, "hr", 121),
            A.k0s(),
            A.j41(21, "div", 84)(22, "span", 120),
            A.EFF(23),
            A.k0s(),
            A.EFF(24),
            A.k0s()(),
            A.j41(25, "div", 119)(26, "div", 86),
            A.nrm(27, "img", 122),
            A.k0s(),
            A.j41(28, "div", 84)(29, "span", 120),
            A.EFF(30),
            A.k0s(),
            A.EFF(31),
            A.k0s()()(),
            A.j41(32, "div", 118)(33, "div", 119)(34, "div", 86),
            A.nrm(35, "img", 100),
            A.k0s(),
            A.j41(36, "div", 84)(37, "span", 120),
            A.EFF(38),
            A.k0s(),
            A.EFF(39),
            A.k0s()(),
            A.j41(40, "div", 119)(41, "div", 86),
            A.nrm(42, "img", 100),
            A.k0s(),
            A.j41(43, "div", 84)(44, "span", 120),
            A.EFF(45),
            A.k0s(),
            A.EFF(46),
            A.k0s()(),
            A.j41(47, "div", 119)(48, "div", 86),
            A.nrm(49, "img", 100),
            A.k0s(),
            A.j41(50, "div", 84)(51, "span", 120),
            A.EFF(52),
            A.k0s(),
            A.EFF(53),
            A.k0s()()()()),
            2 & x) {
                const a = A.XpG();
                A.R7$(),
                A.JRh(null == a.aemLabels || null == a.aemLabels.symbolsDescriptions ? null : a.aemLabels.symbolsDescriptions.iconLegendsTitle),
                A.R7$(2),
                A.Y8G("ngClass", A.eq3(28, C, null == a.pdfScheduleData ? null : a.pdfScheduleData.pageViewPortrait)),
                A.R7$(6),
                A.SpI("", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.traindirectionUp ? null : a.aemLabels.symbolsDescriptions.traindirectionUp.label, " - "),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.traindirectionUp ? null : a.aemLabels.symbolsDescriptions.traindirectionUp.description, " "),
                A.R7$(6),
                A.SpI("", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.traindirectionDown ? null : a.aemLabels.symbolsDescriptions.traindirectionDown.label, " - "),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.traindirectionDown ? null : a.aemLabels.symbolsDescriptions.traindirectionDown.description, " "),
                A.R7$(6),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.nonstop ? null : a.aemLabels.symbolsDescriptions.nonstop.label, " -"),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.nonstop ? null : a.aemLabels.symbolsDescriptions.nonstop.description, " "),
                A.R7$(3),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Half-moon.svg", A.B4B),
                A.R7$(3),
                A.SpI("", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.overNightTrain ? null : a.aemLabels.symbolsDescriptions.overNightTrain.label, "- "),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.overNightTrain ? null : a.aemLabels.symbolsDescriptions.overNightTrain.description, " "),
                A.R7$(),
                A.Y8G("ngClass", A.eq3(30, C, null == a.pdfScheduleData ? null : a.pdfScheduleData.pageViewPortrait)),
                A.R7$(3),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Staffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelStaffed),
                A.R7$(3),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.staffed ? null : a.aemLabels.symbolsDescriptions.staffed.label, " -"),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.staffed ? null : a.aemLabels.symbolsDescriptions.staffed.description, " "),
                A.R7$(3),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Unstaffed.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelUnStaffed),
                A.R7$(3),
                A.SpI("", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.unstaffed ? null : a.aemLabels.symbolsDescriptions.unstaffed.label, " - "),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.unstaffed ? null : a.aemLabels.symbolsDescriptions.unstaffed.description, " "),
                A.R7$(3),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/Kiosk.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelKiosk),
                A.R7$(3),
                A.SpI("", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.kiosk ? null : a.aemLabels.symbolsDescriptions.kiosk.label, " - "),
                A.R7$(),
                A.SpI(" ", null == a.aemLabels || null == a.aemLabels.symbolsDescriptions || null == a.aemLabels.symbolsDescriptions.kiosk ? null : a.aemLabels.symbolsDescriptions.kiosk.description, " ")
            }
        }
        function tc(x, ZA) {
            if (1 & x && (A.j41(0, "div", 123)(1, "span", 124),
            A.EFF(2),
            A.k0s(),
            A.nrm(3, "img", 125),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.R7$(2),
                A.JRh(null == a.aemLabels ? null : a.aemLabels.sortAndFilterText),
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/select_outline_blue.svg", A.B4B)
            }
        }
        function x0(x, ZA) {
            if (1 & x) {
                const a = A.RV6();
                A.j41(0, "div", 126)(1, "h4", 127),
                A.EFF(2),
                A.k0s(),
                A.j41(3, "button", 128),
                A.bIt("click", function() {
                    const H = A.eBV(a).actions
                      , yA = A.XpG();
                    return A.Njj(yA.filterClose(H))
                }),
                A.nrm(4, "img", 129),
                A.k0s()(),
                A.j41(5, "div", 130)(6, "app-schedule-sort-filter", 131),
                A.bIt("filterSelection", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.filterSelection(H))
                })("doneEvent", function() {
                    const H = A.eBV(a).actions;
                    return A.Njj(H.close())
                })("changeAllTimesDefault", function(H) {
                    A.eBV(a);
                    const yA = A.XpG();
                    return A.Njj(yA.allowAllTimes = H)
                }),
                A.k0s()()
            }
            if (2 & x) {
                const a = A.XpG();
                A.R7$(2),
                A.SpI(" ", null == a.aemLabels ? null : a.aemLabels.sortAndFilterText, " "),
                A.R7$(2),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/select_outline_blue.svg", A.B4B),
                A.R7$(2),
                A.Y8G("scheduleSortFilters", a.filtersData)("trains", a.trainsData)("aemLabels", a.aemLabels)("aemInput", a.aemInput)("allowAllTimes", a.allowAllTimes)
            }
        }
        function ec(x, ZA) {
            if (1 & x && (A.j41(0, "button", 132),
            A.nrm(1, "img", 65),
            A.k0s()),
            2 & x) {
                const a = A.XpG();
                A.R7$(),
                A.Mz_("src", "", a.env.damAssetPath, "/icons/print-icon.svg", A.B4B),
                A.FS9("alt", null == a.aemLabels ? null : a.aemLabels.ariaLabelPrintDropdown)
            }
        }
        let Ts = ( () => {
            class x {
                get amtrakLogoSvg() {
                    return this.sanitizer.bypassSecurityTrustHtml(this.pdfSvgService.amtrakLogo)
                }
                get routeIsInOrderJson() {
                    return !!this.stationOrderJson && this.stationOrderJson.routeStations.filter(H => H.RouteName.indexOf(this.routeName) > -1).length > 0
                }
                constructor(a, Y, H, yA, Ft, wt, Qt, Ge) {
                    this.ecomStorage = a,
                    this.scheduleResultsService = Y,
                    this.datepipe = H,
                    this.sanitizer = yA,
                    this.pdfSvgService = Ft,
                    this.apiService = wt,
                    this.cdr = Qt,
                    this.stationSearchDataService = Ge,
                    this.schedulesAndStops = [],
                    this.env = o.c,
                    this.initialRoute = !0,
                    this.isMultiSegment = !1,
                    this.isTrainSelected = !1,
                    this.selectedTrainDetails = [],
                    this.selectedTrains = [],
                    this.pageEventValue = {
                        page: 1,
                        itemsPerPage: 10
                    },
                    this.itemsPerPage = 10,
                    this.showPagination = !0,
                    this.trainsSolutionsSubset = [],
                    this.cancelledTrain = !1,
                    this.isMobileView = !1,
                    this.isRestricted = !1,
                    this.trainsData = [],
                    this.filtersData = {},
                    this.activeTrainInfo = [],
                    this.trainsDeepClone = [],
                    this.allowAllTimes = !0,
                    this.stopTimes = [],
                    this.pdfLoading = !1,
                    this.stationStopMatrix = new Map,
                    this.trainScheduleMap = new Map,
                    this.arrOvernightTimes = [],
                    this.currentSelectedIndex = null
                }
                ngOnInit() {
                    this.aemContent = this.content,
                    this.aemData = (0,
                    g.CU)(this.aemContent),
                    this.aemLabels = (0,
                    g.Q0)(this.aemContent),
                    this.aemInput = (0,
                    g.B4)(this.aemContent),
                    this.isMobileView = window.screen.width < 768,
                    this.scheduleData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES)),
                    this.scheduleData && (this.startDate = this.scheduleData.data.data[0][0].schedulesAndStops.schedule.startDate),
                    this.todaysDate = y().format("dddd, MMMM Do, YYYY"),
                    this.serviceInfoData = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.STATIONSERVICEINFO)),
                    this.filtersData.daySelected = "Cardinal" == this.scheduleData.searchByType ? "TUE" : "SUN",
                    "N" == this.scheduleData.data.data[0][0].travelService.directionCode || "S" == this.scheduleData.data.data[0][0].travelService.directionCode ? (this.directions = this.aemLabels.directionsNtoS,
                    this.filtersData.direction = "Northbound") : ("E" == this.scheduleData.data.data[0][0].travelService.directionCode || "W" == this.scheduleData.data.data[0][0].travelService.directionCode) && (this.directions = this.aemLabels.directionsEtoW,
                    this.filtersData.direction = "Eastbound"),
                    this.type = this.scheduleData.type,
                    this.ecomStorage.deleteSessionStorage(c.D5.StorageName.ADVANCED_SEARCH),
                    this.destinationCode = this.scheduleData.toStation,
                    this.routeValue = this.scheduleData.searchByType,
                    this.routeName = this.routeValue,
                    this.scheduleData = this.scheduleData.data,
                    this.activeSelectedTrain = null,
                    this.routeCode = this.scheduleData.data[0][0].travelService.name.code,
                    this.scheduleRoutesList = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.ROUTES_LIST)),
                    this.routesList = this.scheduleRoutesList.RoutesList,
                    this.routesList.filter(a => {
                        a.routeName == this.routeValue && (this.routesDescription = a?.description,
                        this.routecityName = a.cityServed)
                    }
                    ),
                    this.stationSearchDataService.getStationData().then(a => {
                        this.stationData1 && (this.stationData1 = JSON.parse(a))
                    }
                    ),
                    this.scheduleData && (this.trains = Object.values(this.scheduleData.data),
                    this.trainsList = this.trains,
                    "Station" == this.type ? this.trains = this.trains.filter(a => a[a.length - 1].schedulesAndStops.schedule.destination.code === this.destinationCode) : "Route" == this.type && (this.trains = this.trains.filter(a => a[a.length - 1].travelService.name.desc_40 === this.routeValue)),
                    this.trainsDeepClone = (0,
                    s.g5)(this.trains),
                    this.trainDetails = this.trains,
                    "Station" == this.type && (this.selectedTrainDetails = this.trains[0]),
                    this.initializePagination(),
                    "Route" == this.type && (this.selectedTrainDetails = this.trains[0]),
                    this.setSelectedTrainArray(),
                    this.initializePdfData())
                }
                onResize(a) {
                    this.isMobileView = a.target.innerWidth < 992
                }
                assignTransferTimes(a) {
                    this.transferTimes = a
                }
                activeshowSummary(a) {
                    this.currentSelectedIndex = a
                }
                initializePagination() {
                    this.trainLeg = {
                        currentPage: this.trains.length
                    },
                    this.pagination = {
                        currentPage: 1,
                        previousPage: this.trainLeg.currentPage,
                        itemsPerPage: this.itemsPerPage,
                        startItem: 0,
                        endItem: this.itemsPerPage
                    },
                    this.defaultPagination = (0,
                    s.g5)(this.pagination),
                    this.updatePagination()
                }
                clearSelections() {
                    this.selectedTrains = this.selectedTrains.map(a => !1),
                    this.activeSelectedTrain = null
                }
                filterTrainDetails(a) {
                    this.filtersData.dateSelected = y(a).format("ll"),
                    this.filterSelection()
                }
                filterTrainDetailsByDay(a) {
                    this.filtersData.daySelected = a.slice(0, 3).toUpperCase(),
                    this.filterSelection()
                }
                setSelectedTrainArray() {
                    this.selectedTrains = [],
                    this.initialRoute = !0,
                    "Route" == this.type ? (this.trainsSolutionsSubset.forEach(a => {
                        this.selectedTrains.push(this.trainsSolutionsSubset[0][0].travelService.number == a[0].travelService.number && 1 == this.initialRoute)
                    }
                    ),
                    this.selectTrain(0 === this.trainsSolutionsSubset.length ? null : 0)) : (this.trainsSolutionsSubset.forEach(a => {
                        this.selectedTrains.push(!1)
                    }
                    ),
                    this.trainsSolutionsSubset.length <= 0 && this.selectTrain(null))
                }
                arrayEquals(a, Y) {
                    return Array.isArray(a) && Array.isArray(Y) && a.length === Y.length && a.every( (H, yA) => H === Y[yA])
                }
                buildFequencyText(a) {
                    const Y = ["MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"];
                    a.sort( (Qt, Ge) => Y.indexOf(Qt) - Y.indexOf(Ge));
                    const H = (new Map).set("SUN", {
                        abv: "Su",
                        order: 1
                    }).set("MON", {
                        abv: "Mo",
                        order: 2
                    }).set("TUE", {
                        abv: "Tu",
                        order: 3
                    }).set("WED", {
                        abv: "We",
                        order: 4
                    }).set("THU", {
                        abv: "Th",
                        order: 5
                    }).set("FRI", {
                        abv: "Fr",
                        order: 6
                    }).set("SAT", {
                        abv: "Sa",
                        order: 7
                    });
                    let Ft, yA = "";
                    return 7 === a.length ? "Daily" : this.arrayEquals(a, ["MON", "TUE", "WED", "THU", "FRI"]) ? "Mo-Fr" : (a.forEach( (Qt, Ge) => {
                        Ft && H.get(Qt).order === Ft + 1 ? (Ge !== a.length - 1 && H.get(Qt).order + 1 === H.get(a[Ge + 1]).order ? yA += "-" : yA += H.get(Qt).abv,
                        Ft = H.get(Qt).order) : (yA += H.get(Qt).abv,
                        Ft = H.get(Qt).order)
                    }
                    ),
                    yA.replace(/(-)+/g, "-"))
                }
                filterClose(a) {
                    const Y = document.getElementById("sortAndFilterAmDropDown");
                    a.close(),
                    Y && setTimeout( () => {
                        Y.focus()
                    }
                    , 0)
                }
                buildFequencyText_old(a) {
                    let Ft = "";
                    if (this.arrayEquals(a, ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]))
                        return "Daily";
                    if (this.arrayEquals(a, ["MON", "TUE", "WED", "THU", "FRI"]))
                        return "M-F";
                    if (this.arrayEquals(a, ["SAT", "SUN"]))
                        return "Weekend";
                    const wt = a.map(Ge => {
                        switch (Ge) {
                        case "MON":
                            return "M";
                        case "TUE":
                            return "T";
                        case "WED":
                            return "W";
                        case "THU":
                            return "Th";
                        case "FRI":
                            return "F";
                        case "SAT":
                            return "Sa";
                        case "SUN":
                            return "Su"
                        }
                    }
                    )
                      , Qt = {
                        Su: "M",
                        M: "T",
                        T: "W",
                        W: "Th",
                        Th: "F",
                        F: "Sa",
                        Sa: "Su"
                    };
                    return wt.forEach( (Ge, Lr) => {
                        Ft += void 0 === wt[Lr + 1] ? `${Ge}` : Qt[Ge] === wt[Lr + 1] ? `${Ge}-` : `${Ge},`
                    }
                    ),
                    Ft
                }
                selectTrain(a) {
                    if (this.stopTimes = [],
                    this.trainsSolutionsSubset.length > 0) {
                        this.selectedTrainDetails = this.trainsSolutionsSubset[a],
                        this.checkCancelledTrain(),
                        this.deselectTrain();
                        for (let Y = 0; Y < this.selectedTrains.length; Y++)
                            Y !== a && (this.selectedTrains[Y] = !1)
                    }
                    if (this.activeSelectedTrain === a ? this.selectedTrains[a] = !1 : (this.selectedTrains[a] = !0,
                    this.activeSelectedTrain = a),
                    this.isTrainSelected = !0,
                    this.initialRoute = !1,
                    "Route" == this.type ? (this.activeSelectedTrain = a,
                    this.selectedTrains[a] = !0) : this.selectedTrains.every(Y => !1 === Y) && (this.activeSelectedTrain = null),
                    this.checkMultiSegmentDisplay(),
                    this.isRestricted = !1,
                    !this.isMultiSegment && this.selectedTrainDetails[0].Restricted && (this.isRestricted = !0),
                    this.activeTrain = null !== this.activeSelectedTrain ? this.trainsSolutionsSubset[this.activeSelectedTrain] : null,
                    null != this.activeTrain) {
                        const Y = JSON.parse(this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES))
                          , H = 1 === Y.data.data[0].length ? "single-segment" : "multi-segment"
                          , Ft = "single-segment" === H ? Y.data.data[0][0].travelService.origin : Y.data.data[0][0].schedulesAndStops.schedule.origin
                          , wt = Y.data.data[Y.data.data.length - 1]
                          , Qt = wt.length - 1
                          , Ge = "single-segment" === H ? wt[Qt].travelService.destination : wt[Qt].schedulesAndStops.schedule.destination;
                        let Lr = [];
                        null != this.activeTrain[0].travelService.RBD && (Lr = this.activeTrain[0].travelService.RBD.map( (ha, Ns) => ({
                            serviceType: ha.serviceTypeName,
                            content: this.assignReservationContent(ha.serviceTypeName)
                        })));
                        let Ur = null !== this.activeTrain[0].travelService.Amenity ? this.activeTrain[0].travelService.Amenity.map( (ha, Ns) => ({
                            amenityType: ha.name,
                            content: this.assignAmenity("content", ha.name)
                        })) : null;
                        Ur = null !== Ur ? Ur.filter(ha => "Seat Assignment" !== ha.amenityType) : null;
                        const _r = this.activeTrain[0].schedulesAndStops.stops;
                        this.directionCode = this.activeTrain[0].travelService.directionCode,
                        "E" == this.directionCode ? this.directionNameFull = "Eastbound" : "W" == this.directionCode ? this.directionNameFull = "Westbound" : "N" == this.directionCode ? this.directionNameFull = "Northbound" : "S" == this.directionCode && (this.directionNameFull = "Southbound"),
                        this.activeTrainObj = null !== this.activeSelectedTrain ? {
                            transport: {
                                name: this.activeTrain[0].travelService.name.desc_40,
                                number: this.activeTrain[0].travelService.number,
                                type: this.activeTrain[0].travelService.type.code,
                                directionCode: this.directionNameFull
                            },
                            departure: {
                                code: Ft.code,
                                departureTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[0].schedulesAndStops.stops[0].timeInfo.departure, "time"),
                                location: Ft.name,
                                station: Ft.facility,
                                amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[0].schedulesAndStops.stops[0].timeInfo.departure, "amPm")
                            },
                            arrival: {
                                code: Ge.code,
                                arrivalTime: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[0].schedulesAndStops.stops[this.activeTrain[0].schedulesAndStops.stops.length - 1].timeInfo.arrival, "time"),
                                location: Ge.name,
                                station: Ge.facility,
                                amPm: this.scheduleResultsService.convertMiltaryTimeToStandard(this.activeTrain[0].schedulesAndStops.stops[this.activeTrain[0].schedulesAndStops.stops.length - 1].timeInfo.arrival, "amPm")
                            },
                            frequency: [...this.activeTrain[0].schedulesAndStops.schedule.daysOfOperation],
                            tripLength: this.getTripLength(this.activeTrain[0].schedulesAndStops.schedule.elapsedTime),
                            stops: _r,
                            reservations: Lr,
                            amenities: Ur
                        } : {};
                        const dn = new Date(this.startDate)
                          , Nn = new Array(7);
                        Nn[0] = "Sun",
                        Nn[1] = "Mon",
                        Nn[2] = "Tue",
                        Nn[3] = "Wed",
                        Nn[4] = "Thu",
                        Nn[5] = "Fri",
                        Nn[6] = "Sat";
                        const tn = Nn[dn.getDay()]
                          , Ni = new Array(11);
                        Ni[0] = "Jan",
                        Ni[1] = "Feb",
                        Ni[2] = "Mar",
                        Ni[3] = "Apr",
                        Ni[4] = "May",
                        Ni[5] = "Jun",
                        Ni[6] = "Jul",
                        Ni[7] = "Aug",
                        Ni[8] = "Sep",
                        Ni[9] = "Oct",
                        Ni[10] = "Nov",
                        Ni[11] = "Dec";
                        const Ps = {
                            day: tn,
                            month: Ni[dn.getMonth()],
                            date: dn
                        };
                        this.startDate = `${Ps.day}, ${Ps.month} ${Ps.date.getDate()}, ${Ps.date.getFullYear()}`,
                        this.compileDepartureAndArrivalTime()
                    }
                }
                checkCancelledTrain() {
                    this.selectedTrainDetails && (this.cancelledTrain = this.selectedTrainDetails.find(a => a.schedulesAndStops.schedule.status === c.D5.TrainStatusStatus.CANCELLED || a.schedulesAndStops.schedule.status === c.D5.TrainStatusStatus.PARTIALLY_CANCELLED))
                }
                deselectTrain() {
                    this.initialRoute = !0,
                    this.isTrainSelected = !1;
                    for (let a = 0; a < this.selectedTrains.length; a++)
                        this.selectedTrains[a] = !1
                }
                checkMultiSegmentDisplay() {
                    this.isMultiSegment = this.selectedTrainDetails.length > 1
                }
                pageChanged(a) {
                    this.pageEventValue = a,
                    this.updatePagination(a)
                }
                filterTrains(a) {
                    if (a && (this.filtersData = a),
                    this.trainsData = [],
                    this.trainsDeepClone) {
                        this.trainsDeepClone.forEach(yA => {
                            this.trainsData.push(yA[0].travelService.name.desc_40)
                        }
                        );
                        const Y = this.filterByTimeOfyDay(this.trainsDeepClone, a);
                        this.trains = Y;
                        const H = this.filterByTrain(this.trains);
                        if (this.trains = H || this.trains,
                        "Route" === this.type) {
                            const yA = [];
                            this.trains.filter(Ft => {
                                Ft[0].schedulesAndStops.schedule.daysOfOperation.forEach(wt => {
                                    wt === this.filtersData.daySelected && yA.push(Ft)
                                }
                                )
                            }
                            ),
                            this.trains = yA
                        } else if ("Station" === this.type) {
                            const yA = this.trains.filter(Ft => {
                                if (y(Ft[0].schedulesAndStops.schedule.startDate).format("ll") === this.filtersData.dateSelected)
                                    return Ft
                            }
                            );
                            this.trains = yA
                        }
                        switch (a.trip) {
                        case "departure time":
                            let yA;
                            "Station" === this.type ? yA = this.sortByDepartureTime(this.trains) : "Route" === this.type && (yA = this.sortbyDepartureTimeRoute(this.trains)),
                            this.trains = yA;
                            break;
                        case "arrival time":
                            let Ft;
                            "Station" === this.type ? Ft = this.sortByArrivalTime(this.trains) : "Route" === this.type && (Ft = this.sortByArrivalTimeRoute(this.trains)),
                            this.trains = Ft;
                            break;
                        case "shortest trip":
                            const wt = this.sortByShortestTrip(this.trains);
                            this.trains = wt;
                            break;
                        case "direct":
                            const Qt = this.filterByDirect(this.trains);
                            this.trains = Qt || this.trains
                        }
                        if ("Route" == this.type)
                            switch (a.direction) {
                            case "Eastbound":
                                this.eastFilter = this.filterByEastbound(this.trains),
                                this.trains = this.eastFilter;
                                break;
                            case "Westbound":
                                this.westFilter = this.filterByWestbound(this.trains),
                                this.trains = this.westFilter;
                                break;
                            case "Northbound":
                                const yA = this.filterByNorthbound(this.trains);
                                this.trains = yA;
                                break;
                            case "Southbound":
                                const Ft = this.filterBySouthbound(this.trains);
                                this.trains = Ft || this.trains
                            }
                    } else
                        console.log("No trains")
                }
                onChange(a, Y) {}
                showTermsAndRequest(a, Y) {
                    if (Y)
                        return this.filtersData.direction = Y,
                        this.filterSelection(),
                        this.filtersData.direction
                }
                sortByDepartureTime(a) {
                    return a.sort( (H, yA) => {
                        const Ft = new Date(H[0].schedulesAndStops.schedule.startDate).getTime()
                          , wt = new Date(yA[0].schedulesAndStops.schedule.startDate).getTime();
                        return Ft < wt ? -1 : Ft > wt ? 1 : 0
                    }
                    )
                }
                sortbyDepartureTimeRoute(a) {
                    return a.sort( (H, yA) => {
                        const Ft = H[0].originDepartureTime
                          , wt = yA[0].originDepartureTime;
                        return Ft < wt ? -1 : Ft > wt ? 1 : 0
                    }
                    )
                }
                sortByArrivalTime(a) {
                    return a.sort( (H, yA) => {
                        const Ft = new Date(H[0].schedulesAndStops.schedule.endDate).getTime()
                          , wt = new Date(yA[0].schedulesAndStops.schedule.endDate).getTime();
                        return Ft < wt ? -1 : Ft > wt ? 1 : 0
                    }
                    )
                }
                sortByArrivalTimeRoute(a) {
                    return a.sort( (H, yA) => {
                        const Qt = H[0].schedulesAndStops.stops[H[0].schedulesAndStops.stops.length - 1].timeInfo.arrival
                          , Ge = yA[0].schedulesAndStops.stops[yA[0].schedulesAndStops.stops.length - 1].timeInfo.arrival;
                        return Qt < Ge ? -1 : Qt > Ge ? 1 : 0
                    }
                    )
                }
                sortByShortestTrip(a) {
                    return a.sort( (H, yA) => {
                        const Ft = s.LD.parseElapsedTime(H[0].duration || H[0].schedulesAndStops.schedule.elapsedTime)
                          , wt = s.LD.parseElapsedTime(yA[0].duration || yA[0].schedulesAndStops.schedule.elapsedTime)
                          , Qt = 60 * parseInt(Ft.totalHours) + parseFloat(Ft.journeyMinutes)
                          , Ge = 60 * parseInt(wt.totalHours) + parseFloat(wt.journeyMinutes);
                        return Qt < Ge ? -1 : Qt > Ge ? 1 : 0
                    }
                    )
                }
                filterByTrain(a) {
                    return void 0 !== this.filtersData.train && this.filtersData.train.length ? a.filter(H => !!this.filtersData.train.includes(H[0].travelService.name.desc_40)) : null
                }
                filterByDirect(a) {
                    return a.filter(H => 1 == H.length)
                }
                filterByEastbound(a) {
                    return void 0 !== this.filtersData.direction && this.filtersData.direction.length ? a.filter(H => !!this.filtersData.direction.includes(H[0].travelService.directionCode || "Eastbound")) : null
                }
                filterByWestbound(a) {
                    return void 0 !== this.filtersData.direction && this.filtersData.direction.length ? a.filter(H => !!this.filtersData.direction.includes(H[0].travelService.directionCode || "Westbound")) : null
                }
                filterByNorthbound(a) {
                    return void 0 !== this.filtersData.direction && this.filtersData.direction.length ? a.filter(H => !!this.filtersData.direction.includes(H[0].travelService.directionCode || "Northbound")) : null
                }
                filterBySouthbound(a) {
                    return void 0 !== this.filtersData.direction && this.filtersData.direction.length ? a.filter(H => !!this.filtersData.direction.includes(H[0].travelService.directionCode || "Southbound")) : null
                }
                filterByTimeOfyDay(a, Y) {
                    const H = {
                        "12to6am": [0, 1, 2, 3, 4, 5],
                        "6to12pm": [6, 7, 8, 9, 10, 11],
                        "12to6pm": [12, 13, 14, 15, 16, 17],
                        "6to12am": [18, 19, 20, 21, 22, 23]
                    };
                    if (Y.time) {
                        const yA = Y.time
                          , Ft = [];
                        for (const [Qt,Ge] of Object.entries(yA))
                            !0 === Ge && Ft.push(...H[Qt]);
                        return a.filter(Qt => {
                            const Ge = new Date(Qt[0].schedulesAndStops.schedule.startDate).getHours();
                            return 0 == Ft.length || !!Ft.includes(Ge)
                        }
                        )
                    }
                    return a
                }
                durationCalc(a) {
                    return 86400 * a.slice(1, 3) + 3600 * a.slice(5, 7) + 60 * a.slice(8, 10)
                }
                updatePagination(a) {
                    this.clearSelections(),
                    this.filterTrains(this.filtersData),
                    setTimeout( () => {
                        this.pagination.currentPage = this.pagination.currentPage,
                        this.pagination.startItem = (this.pagination.currentPage - 1) * this.pagination.itemsPerPage,
                        this.pagination.endItem = this.pagination.currentPage * this.pagination.itemsPerPage < this.trains.length ? this.pagination.currentPage * this.pagination.itemsPerPage : this.trains.length,
                        this.trainLeg.currentPage = this.pagination.currentPage,
                        this.trainsSolutionsSubset = this.trains.slice(this.pagination.startItem, this.pagination.endItem),
                        this.deselectTrain(),
                        0 === this.trainsSolutionsSubset.length && (this.selectedTrainDetails = this.trainDetails[0]),
                        this.setSelectedTrainArray(),
                        a && this.pagination.currentPage !== this.pagination.previousPage && (this.pagination.previousPage = this.pagination.currentPage)
                    }
                    , 100)
                }
                filterSelection(a) {
                    a && (this.filtersData = {
                        ...this.filtersData,
                        ...a.filters
                    }),
                    this.pagination = {
                        currentPage: 1,
                        previousPage: this.trainLeg.currentPage,
                        itemsPerPage: this.itemsPerPage,
                        startItem: 0,
                        endItem: this.itemsPerPage
                    },
                    this.updatePagination()
                }
                assignReservationContent(a) {
                    const Y = this.aemLabels.reservationsText;
                    switch (a) {
                    case "Pet":
                        return Y.pet;
                    case "Bicycle":
                        return Y.bicycle;
                    case "Coach":
                        return Y.coach;
                    case "Business":
                        return Y.business;
                    case "Bedroom":
                        return Y.bedroom;
                    case "Roomette":
                        return Y.roomette;
                    case "First":
                        return Y.first;
                    case "Family":
                        return Y.family;
                    default:
                        return "Default reservation text..."
                    }
                }
                assignAmenity(a, Y) {
                    if ("content" === a) {
                        const H = this.aemLabels.amenitiesText;
                        switch (Y) {
                        case "Seat Assignment":
                            return H.seatAssignment;
                        case "WiFi":
                            return H.wifi;
                        case "Quiet Car":
                            return H.quietCar;
                        case "Snack Car":
                            return H.snackCar;
                        case "Checked Baggage":
                            return H.checkedBaggage;
                        case "Flexible Dining":
                            return H.flexibleDining;
                        case "Traditional Dining":
                            return H.traditionalDining;
                        case "Lounge":
                            return H.lounge;
                        case "Wheelchair Ramp":
                            return H.wheelchairRamp;
                        default:
                            return "Default amenity text..."
                        }
                    } else if ("icon" === a)
                        switch (Y) {
                        case "Seat Assignment":
                        case "WiFi":
                        case "Snack Car":
                        case "Checked Baggage":
                        case "Wheelchair Ramp":
                        default:
                            return `${this.env.damAssetPath}/pdf/wifi.png`;
                        case "Quiet Car":
                            return `${this.env.damAssetPath}/pdf/quietCar.png`;
                        case "Flexible Dining":
                        case "Traditional Dining":
                            return `${this.env.damAssetPath}/pdf/dining.png`;
                        case "Lounge":
                            return `${this.env.damAssetPath}/pdf/lounge.png`
                        }
                }
                trimZeros(a) {
                    return 0 == +a ? "" : a.replace(/^0+/, "")
                }
                getTripLength(a) {
                    return a ? `${0 == +this.trimZeros(a.slice(1, 3)) ? "" : `${this.trimZeros(a.slice(1, 3))}d`} ${0 == +this.trimZeros(a.slice(5, 7)) ? "" : `${this.trimZeros(a.slice(5, 7))}h`} ${0 == +this.trimZeros(a.slice(8, 10)) ? "" : `${this.trimZeros(a.slice(8, 10))}m`}` : ""
                }
                printRouteSelected() {
                    const a = this.routeSelectedPdf.nativeElement.cloneNode(!0);
                    a.style.removeProperty("display"),
                    z().from(a).set({
                        margin: .5,
                        filename: "selectedRoutePdf.pdf",
                        image: {
                            type: "jpeg",
                            quality: .98
                        },
                        html2canvas: {
                            scale: 2
                        },
                        jsPDF: {
                            unit: "in",
                            format: "letter",
                            orientation: "portrait"
                        }
                    }).output("dataurlnewwindow")
                }
                createStationTrainMatrix() {
                    this.stationStopMatrix = (new Map).set("data", new Map).set("stationMetaData", new Map).set("trainMetaData", new Map),
                    this.pdfScheduleData = this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES, !0),
                    this.sortbyDepartureTimeRoute(this.pdfScheduleData.data.data).forEach(Y => {
                        Y.forEach(H => {
                            const yA = H.travelService.directionCode;
                            this.trainScheduleMap.get(H.travelService.number) ? this.trainScheduleMap.set(H.travelService.number, [...this.trainScheduleMap.get(H.travelService.number), H.schedulesAndStops.schedule]) : this.trainScheduleMap.set(H.travelService.number, [H.schedulesAndStops.schedule]),
                            H.schedulesAndStops.stops.forEach(Ft => {
                                this.getSymbolsMatrix(Ft.station),
                                this.updateStopInMatrix(yA, Ft.station, H.travelService, Ft.timeInfo)
                            }
                            )
                        }
                        )
                    }
                    )
                }
                getSymbolsMatrix(a) {
                    this.serviceInfoData?.stations.filter(Y => {
                        Y.stationCode == a.code && (a.staffed = Y.staffed,
                        a.wheelChairAccess = Y.wheelChairAvailable,
                        a.kiosk = Y.quikTrakAvailable)
                    }
                    )
                }
                getOverNightIndicator(a, Y, H, yA, Ft) {
                    let wt;
                    if (a.nightFlag) {
                        if (this.stationStopMatrix.get("data").get(Y) && this.stationStopMatrix.get("data").get(Y).get(H) && this.stationStopMatrix.get("data").get(Y).get(H).get(yA)) {
                            const Qt = this.stationStopMatrix.get("data").get(Y).get(H).get(yA)[Ft];
                            Qt && (wt = "01/01/1900 " + Qt.departure)
                        }
                        return this.endHours = new Date(a.endDate).getHours() + "." + new Date(wt).getMinutes(),
                        this.timeHours = new Date(wt).getHours() + "." + new Date(wt).getMinutes(),
                        this.timeHours >= Number(this.aemLabels.overNightStartTime) || this.timeHours <= Number(this.aemLabels.overNightEndTime)
                    }
                    return !1
                }
                updateStopInMatrix(a, Y, H, yA) {
                    const Ft = H.number;
                    if (this.stationStopMatrix.get("data").get(a))
                        if (this.stationStopMatrix.get("data").get(a).get(Y.code))
                            if (this.stationStopMatrix.get("data").get(a).get(Y.code).get(Ft)) {
                                const wt = this.stationStopMatrix.get("data").get(a).get(Y.code).get(Ft);
                                wt.push(yA),
                                this.stationStopMatrix.get("data").get(a).get(Y.code).set(Ft, wt)
                            } else
                                this.stationStopMatrix.get("data").get(a).get(Y.code).set(Ft, [yA]),
                                this.stationStopMatrix.get("stationMetaData").set(Y.code, Y),
                                this.stationStopMatrix.get("trainMetaData").set(Ft, {
                                    name: H.name,
                                    direction: a
                                });
                        else
                            this.stationStopMatrix.get("data").get(a).set(Y.code, (new Map).set(Ft, [yA])),
                            this.stationStopMatrix.get("stationMetaData").set(Y.code, Y),
                            this.stationStopMatrix.get("trainMetaData").set(Ft, {
                                name: H.name,
                                direction: a
                            });
                    else
                        this.stationStopMatrix.get("data").set(a, (new Map).set(Y.code, (new Map).set(Ft, [yA]))),
                        this.stationStopMatrix.get("stationMetaData").set(Y.code, Y),
                        this.stationStopMatrix.get("trainMetaData").set(Ft, {
                            name: H.name,
                            direction: a
                        })
                }
                getStationOrder() {
                    const a = this.ecomStorage.getSessionStorage(c.D5.StorageName.STATION_ORDER, !0);
                    return a ? new e.c(Y => {
                        this.stationOrderJson = a,
                        Y.next(a),
                        Y.complete()
                    }
                    ) : this.apiService.get(c.D5.apiEndPtURL.StopsList).pipe((0,
                    l.T)(H => {
                        this.ecomStorage.updateSessionStorage(c.D5.StorageName.STATION_ORDER, JSON.stringify(H)),
                        this.stationOrderJson = H
                    }
                    ), (0,
                    n.u)())
                }
                initializePdfData(a) {
                    this.createStationTrainMatrix(),
                    c.D5.apiEndPtURL.StopsList && !this.stationOrderJson && this.getStationOrder().subscribe(Y => {
                        let H = Array.from(this.stationStopMatrix.get("data").keys());
                        "S" === H[0] ? H = ["N", "S"] : "W" === H[0] && (H = ["E", "W"]);
                        const yA = Array.from(this.stationStopMatrix.get("trainMetaData").keys());
                        let Ft = Array.from(this.stationStopMatrix.get("stationMetaData").keys())
                          , wt = !1;
                        wt = !(yA.length > 6),
                        this.routeIsInOrderJson && (Ft = this.stationOrderJson.routeStations.filter(da => da.RouteName.indexOf(this.routeName) > -1)[0].stops.map(da => da.toUpperCase()));
                        const Qt = wt ? 25 : 16
                          , kr = this.chunkArray(Ft, Qt)
                          , Ur = this.chunkArray(Ft.reverse(), Qt);
                        let _r = !1
                          , dn = []
                          , Nn = [];
                        const tn = yA.filter(da => this.stationStopMatrix.get("trainMetaData").get(da).direction === H[0])
                          , Ni = yA.filter(da => this.stationStopMatrix.get("trainMetaData").get(da).direction === H[1]);
                        if ((tn.length > 6 || Ni.length > 6) && (_r = !0,
                        dn = this.chunkArrayPaged(tn, 10),
                        Nn = this.chunkArrayPaged(Ni, 10)),
                        kr) {
                            const da = kr.length - 1
                              , Ps = kr[da].length - 1;
                            this.firstElement = kr[0][0],
                            this.lastElement = kr[da][Ps]
                        }
                        this.pdfScheduleData = {
                            pagedTrains: _r,
                            directions: H,
                            trains: yA,
                            pagedStations: kr,
                            pagedStationsReversed: Ur,
                            outboundTrains: tn,
                            pagedOutboundTrains: dn,
                            inboundTrains: Ni,
                            pagedInboundTrains: Nn,
                            pageViewPortrait: wt
                        }
                    }
                    )
                }
                getTimeFromMatrix(a, Y, H, yA, Ft) {
                    let wt;
                    if (this.stationStopMatrix.get("data").get(a) && this.stationStopMatrix.get("data").get(a).get(Y) && this.stationStopMatrix.get("data").get(a).get(Y).get(H)) {
                        const Qt = this.stationStopMatrix.get("data").get(a).get(Y).get(H)[yA];
                        return Qt && (wt = "01/01/1900 " + Qt.departure),
                        wt
                    }
                    return ""
                }
                getDurationFromTrainScheduleMap(a) {
                    return s.LD.getDuration(a.elapsedTime)
                }
                getFrequencyTextFromTrainScheduleMap(a) {
                    return this.buildFequencyText(a.daysOfOperation)
                }
                chunkArray(a, Y) {
                    return a.reduce( (yA, Ft, wt) => {
                        const Qt = Math.floor(wt / Y);
                        return yA[Qt] || (yA[Qt] = []),
                        yA[Qt].push(Ft),
                        yA
                    }
                    , [])
                }
                chunkArrayPaged(a, Y) {
                    const H = this.ecomStorage.getSessionStorage(c.D5.StorageName.SCHEDULES, !0).data.data
                      , yA = []
                      , Ft = [];
                    return a.find(Qt => {
                        H.filter(Ge => {
                            Ge[0].travelService.number == Qt && yA.push(Qt)
                        }
                        )
                    }
                    ),
                    yA.reduce( (Qt, Ge, Lr) => {
                        const kr = Math.floor(Lr / Y);
                        return Qt[kr] || (Qt[kr] = []),
                        Qt[kr].push(Ge),
                        Qt
                    }
                    , []).filter(Qt => {
                        const Ge = [];
                        Qt.forEach(Lr => {
                            Ge.includes(Lr) || Ge.push(Lr)
                        }
                        ),
                        Ft.push(Ge)
                    }
                    ),
                    Ft
                }
                printRouteAll(a) {
                    this.pdfLoading = !0,
                    this.nerDirection = null,
                    this.nerDirection = a || null;
                    const Y = this.aemData.routePdfUrl + this.routeValue + ".pdf";
                    setTimeout( () => {
                        console.log("start pdf generation"),
                        window.open(Y, "_blank"),
                        this.pdfLoading = !1,
                        this.cdr.detectChanges()
                    }
                    , 10)
                }
                compileDepartureAndArrivalTime() {
                    this.activeTrainObj.stops.forEach( (a, Y) => {
                        const H = `${this.scheduleResultsService.convertMiltaryTimeToStandard(a.timeInfo.arrival, "time")}${this.scheduleResultsService.convertMiltaryTimeToStandard(a.timeInfo.arrival, "amPm")}`
                          , yA = `${this.scheduleResultsService.convertMiltaryTimeToStandard(a.timeInfo.departure, "time")}${this.scheduleResultsService.convertMiltaryTimeToStandard(a.timeInfo.departure, "amPm")}`;
                        this.stopTimes.push({
                            stopArrives: H,
                            stopDeparts: yA
                        })
                    }
                    )
                }
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)(A.rXU(i.x),A.rXU(u),A.rXU(Jr.vh),A.rXU(B.up),A.rXU(E),A.rXU(t.G),A.rXU(A.gRc),A.rXU(r.W))
                }
                }static{this.\u0275cmp = A.VBU({
                    type: x,
                    selectors: [["schedule-results"]],
                    viewQuery: function(Y, H) {
                        if (1 & Y && (A.GBs(Gc, 5),
                        A.GBs(zc, 5)),
                        2 & Y) {
                            let yA;
                            A.mGM(yA = A.lsd()) && (H.routePdfHiddenContainer = yA.first),
                            A.mGM(yA = A.lsd()) && (H.routeSelectedPdf = yA.first)
                        }
                    },
                    hostBindings: function(Y, H) {
                        1 & Y && A.bIt("resize", function(Ft) {
                            return H.onResize(Ft)
                        }, !1, A.tSv)
                    },
                    inputs: {
                        content: "content"
                    },
                    decls: 21,
                    vars: 13,
                    consts: [["routePdfHiddenContainer", ""], ["routePdfHeader", ""], ["routePdfFooter", ""], ["routeIconDescription", ""], ["advancedOptionsBtn", ""], ["sortAndFilter", ""], ["printBtn", ""], ["routeSection", ""], [4, "ngIf"], ["data-html2canvas-ignore", "", 1, "col-12", "noprint"], [3, "paginationText", "ofText", "startItem", "endItem", "listSubset", "totalListItems"], ["previousText", "<", "nextText", ">", 1, "paginator__pagination", 3, "ngModelChange", "pageChanged", "totalItems", "ngModel", "itemsPerPage"], ["id", "route-pdf-hidden-container", "aria-hidden", "true", 1, "noprint", "hidden"], ["data-html2canvas-ignore", "", 1, "container"], [3, "dateSelected", "content", "isMultiSegment", "pagination", "activeTrain"], [1, "row", "mt-12", "ml-md-2", "padding-10px"], [1, "col-sm-6", "col-md-6", "row", "d-flex"], [1, "dateDropdown", 2, "flex", "60% 0"], [1, "sort-and-filter-display", 2, "flex", "0 40%"], ["position", "bottom-right", "className", "d-flex float-right pl-2", "btnClassName", "", "inlineClassName", "am-modal--inline", "modalClassName", "am-modal--inline modal-dialog-centered modal-xs modal-inner-scroll ", 3, "buttonTpl", "contentTpl", "openModalInMobile", "openModalInTablet", "keepOpenOnBreakpointChange"], [1, "row", "mt-10", "ml-md-2", "padding-10px"], [1, "col-sm-6", "col-md-6"], [1, "row"], [1, "heading-style", 2, "margin-bottom", "20px", "margin-left", "-5px"], [1, "station-print-icon", "print-button", "bg-transparent"], ["position", "bottom-right", "className", "d-flex am-dropdown", 3, "dateSelected", "content", "isMultiSegment", "pagination", "activeTrain", "transferTimes"], ["class", "to-see-your-stops-be", 4, "ngIf"], ["class", "row w-100 col-lg-10 no-trains pl-3 d-flex align-items-center", 4, "ngIf"], [4, "ngIf", "ngIfThen"], [1, "to-see-your-stops-be"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "click", "createActiveTrainInfo", "activeshowSummary", "train", "content", "selectedTrain", "activeTrain", "index", "currentSelectedIndex", "transferTimes"], [1, "row", "w-100", "col-lg-10", "no-trains", "pl-3", "d-flex", "align-items-center"], [1, "d-flex", "flex-column", "icon-container", "mr-4"], ["alt", "no trains icon", 3, "src"], [1, "d-flex", "flex-column"], [1, "title"], [1, "description", "pb-0"], [1, "col-sm-6", "col-md-6", 3, "ngClass"], ["class", "row", 4, "ngIf"], ["class", "row align-div", 4, "ngIf"], [3, "trainsSolutionsSubsetChange", "emitTransferTimes", "trainsSolutionsSubset", "trainDetails", "isTrainSelected", "initialRoute", "cancelledTrain", "content", "isMobileView", "destinationCode", "isRestricted"], [1, "heading-style"], [1, "to-see-the-intermedi"], [1, "row", "align-div"], [1, "w-47"], [1, "img-size", 3, "alt", "src"], [1, "mt-2"], [3, "ngClass", 4, "ngIf"], ["class", "canceled-status", 4, "ngIf"], [1, "canceled-status"], [1, "circle-icon"], [1, "container"], [1, "route-heading"], [1, "show-only-desktop-margin"], [1, "am-tabs", "am-tabs--light", "d-flex", "flex-row", "bd-highlight", "mt-5", "w-37"], ["class", "nav-tabs", 3, "tabindex", "heading", "active", "selectTab", 4, "ngFor", "ngForOf"], [1, "col-sm-6", "col-md-6", "row"], [1, "row", "d-flex", "dateDropdown"], [3, "dateSelected", "content", "isMultiSegment", "pagination", "activeTrain", "direction"], [1, "col-sm-6", "col-md-6", "mt-5"], [1, "row", "d-flex"], [2, "margin-left", "28.5rem"], [1, "print-button", "bg-transparent", 3, "click", "aria-label"], [1, "img-style-box", "print-route", 3, "src", "alt"], [1, "nav-tabs", 3, "selectTab", "tabindex", "heading", "active"], [1, "pdf-spinner-container"], [3, "click", "createActiveTrainInfo", "train", "content", "selectedTrain", "activeTrain"], [3, "trainsSolutionsSubsetChange", "trainsSolutionsSubset", "trainDetails", "isTrainSelected", "initialRoute", "content", "isMobileView", "destinationCode", "isRestricted"], [4, "ngFor", "ngForOf"], [1, "page-container", 3, "ngClass"], [4, "ngTemplateOutlet"], [3, "ngTemplateOutlet"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "table-container", 4, "ngIf"], [1, "table-container"], [1, "rTable"], [1, "rTableRow", "header-row"], [1, "rTableCell", "subheader-title"], [1, "rTableRow", "header-row", "service-name-row"], [1, "rTableCell", "subheader-title", "service-name"], [1, "rTableCell", "subheader-title", "symbols-title"], [1, "rTableCell", "subheader-title", "train-direction-title"], [1, "rTableCell", "train-number"], [1, "rTableCell", "service-name", 3, "innerHTML"], [1, "rTableCell"], [1, "rTableCell", "duration"], [1, "rTableCell", "train-direction-down"], [1, "arrow-down"], [1, "rTableCell", "train-direction-up"], [1, "arrow-up"], [1, "rTableRow", 3, "ngClass"], ["class", "rTableCell stationData", 4, "ngIf"], [1, "rTableCell", "text-left", "pl-3"], ["class", "rTableCell", 3, "ngClass", 4, "ngIf"], [1, "rTableCell", 3, "ngClass"], [3, "src", 4, "ngIf"], [3, "src"], [1, "rTableCell", "stationData"], [1, "imgSymbolsStaffed", 3, "src", "alt"], [1, "imgSymbolsKiosk", 3, "src", "alt"], [1, "page-container"], [1, "rTableCell", "service-name", "serviceData", 3, "innerHTML"], ["class", "rTableCell stationData station-name-code", 4, "ngIf"], [1, "rTableCell", "stationData", "station-name-code"], [1, "container", "pt-3"], [1, "col-8"], [1, "pdf-logo", 3, "innerHTML"], [1, "col-4", "blue-box", 3, "ngClass"], [1, "route-name-text"], [1, "date-style"], [1, "pdf-page-footer", "container", "pt-3", 3, "ngClass"], [1, "footer-description"], [1, "col-10"], ["class", "col-2 pdf-page-counter", 4, "ngIf"], [1, "col-2", "pdf-page-counter"], [1, "header-title-legends"], [1, "rTableSymbol", 3, "ngClass"], [1, "rTableRowIcons", "header-row"], [1, "subheader-title"], [1, "nonstop-line"], [1, "overnightSymbol", 3, "src"], ["id", "sortAndFilterAmDropDown", "tabindex", "0", 1, "sort-and-filter-btn", "d-flex", "align-items-center", "justify-content-center"], [1, "pr-2", "font-regular"], ["alt", "Open", "role", "presentation", 1, "caret", "am-dropdown-caret", 3, "src"], [1, "modal-header", "sort-and-filter__modal-header"], [1, "modal-title", "pull-left", "w-100"], ["type", "button", "aria-label", "Close", "amt-auto-test-id", "search-sort-filter-collapse-button", 1, "close", "pull-right", 3, "click"], ["alt", "Close", 3, "src"], [1, "modal-body", "pt-0"], [3, "filterSelection", "doneEvent", "changeAllTimesDefault", "scheduleSortFilters", "trains", "aemLabels", "aemInput", "allowAllTimes"], ["amt-auto-test-id", "trip-details-link", "tabindex", "-1", 1, "am-link", "dropdown-toggle", "p-6"]],
                    template: function(Y, H) {
                        if (1 & Y) {
                            const yA = A.RV6();
                            A.DNE(0, ht, 22, 24, "ng-container", 8)(1, je, 27, 19, "ng-container", 8),
                            A.j41(2, "div", 9)(3, "am-pagination", 10)(4, "pagination", 11),
                            A.mxI("ngModelChange", function(wt) {
                                return A.eBV(yA),
                                A.DH7(H.pagination.currentPage, wt) || (H.pagination.currentPage = wt),
                                A.Njj(wt)
                            }),
                            A.bIt("pageChanged", function(wt) {
                                return A.eBV(yA),
                                A.Njj(H.pageChanged(wt))
                            }),
                            A.k0s()()(),
                            A.j41(5, "div", 12, 0),
                            A.DNE(7, Zs, 6, 10, "ng-container", 8)(8, yc, 7, 8, "ng-container", 8),
                            A.k0s(),
                            A.DNE(9, g0, 10, 6, "ng-template", null, 1, A.C5r)(11, Ho, 10, 8, "ng-template", null, 2, A.C5r)(13, $s, 54, 32, "ng-template", null, 3, A.C5r)(15, tc, 4, 3, "ng-template", null, 4, A.C5r)(17, x0, 7, 8, "ng-template", null, 5, A.C5r)(19, ec, 2, 3, "ng-template", null, 6, A.C5r)
                        }
                        2 & Y && (A.Y8G("ngIf", "Station" === H.type),
                        A.R7$(),
                        A.Y8G("ngIf", "Route" === H.type),
                        A.R7$(2),
                        A.Y8G("paginationText", H.aemLabels.paginationText)("ofText", H.aemLabels.ofText)("startItem", H.pagination.startItem)("endItem", H.pagination.endItem)("listSubset", 1)("totalListItems", H.trains.length),
                        A.R7$(),
                        A.Y8G("totalItems", H.trains.length),
                        A.R50("ngModel", H.pagination.currentPage),
                        A.Y8G("itemsPerPage", H.itemsPerPage),
                        A.R7$(3),
                        A.Y8G("ngIf", !(null != H.pdfScheduleData && H.pdfScheduleData.pagedTrains)),
                        A.R7$(),
                        A.Y8G("ngIf", null == H.pdfScheduleData ? null : H.pdfScheduleData.pagedTrains))
                    },
                    dependencies: [Jr.YU, Jr.Sq, Jr.bT, Jr.T3, h.V6, h.fw, d.eK, F.eK, F.Ps, F.tI, G.BC, G.vS, m.t, ws, Ks, t0, ys, Lc, Jr.vh, P.d],
                    styles: ['@charset "UTF-8";[_nghost-%COMP%]     .route ul.stops-list{display:block;list-style:none;margin-left:-15px;padding-left:0;width:auto}[_nghost-%COMP%]     .route .inner-line-style{position:relative;margin-left:-10px;border-left:2px solid #00537e;padding:11px 0 24px;top:-24px}[_nghost-%COMP%]     .route .inner-stops-line-style{position:relative;margin-left:-10px;border-left:2px solid #00537e;padding:11px 0 26px;top:-25px}[_nghost-%COMP%]     .route li.white-stop.load-more:before{display:block;border-radius:50%;line-height:20px;text-align:center;content:"+";box-sizing:border-box;height:20.8px;width:20.8px;border:1.8px solid #167fa6;background-color:#167fa6;z-index:1;margin-left:-2px}[_nghost-%COMP%]     .route .transfer-line-style-top{position:relative;margin-left:8px;border-left:2px solid #00537e;padding:0;top:-18px}[_nghost-%COMP%]     .route .transfer-line-style-bottom{position:relative;margin-left:8px;border-left:2px solid #00537e;padding:0;top:-10px}[_nghost-%COMP%]     .route .transfer{position:relative;margin-left:22px;border-left:2px dashed #ff9933;padding:11px 0 5px;top:-13px;left:-14px}[_nghost-%COMP%]     .route .transfer img{width:27px;color:#f93;margin-left:-14px;background-color:#fff}[_nghost-%COMP%]     .route .transfer span{padding:2px 4px;height:26px;width:106px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:10px;font-weight:300;letter-spacing:0;line-height:13px}[_nghost-%COMP%]     .route li.white-stop:before{display:block;width:18px;height:18px;border-radius:50%;line-height:20px;text-align:center;content:"";z-index:1;background-color:#fff;border:1.8px solid #00537e}[_nghost-%COMP%]     .route li.stops-list-item:before{display:block;width:18px;height:18px;border-radius:50%;background-color:#00537e;line-height:20px;text-align:center;content:""}@media only screen and (max-width: 600px){[_nghost-%COMP%]     .route li.stops-list-item:before{width:23px}}[_nghost-%COMP%]     .route .line-style{position:relative;margin-left:8px;border-left:2px solid #00537e;padding:11px 0 22px;top:-1px}@media (min-width: 992px){.route-heading[_ngcontent-%COMP%]{display:none}.show-only-desktop-margin[_ngcontent-%COMP%]{margin-top:5rem}}.route-heading[_ngcontent-%COMP%]{padding-bottom:2rem;padding-top:2rem;color:#167fa6!important;font-size:2.8rem;font-weight:400}.heading-style[_ngcontent-%COMP%]{height:24px;width:148px;color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:18px;font-weight:600;letter-spacing:-.36px;line-height:24px;margin-bottom:0}.station-print-icon[_ngcontent-%COMP%]{margin-left:28rem;margin-top:-18px}.sort-and-filter[_ngcontent-%COMP%]   .px-2[_ngcontent-%COMP%]{padding-left:.5rem}.sort-and-filter-btn[_ngcontent-%COMP%]   .am-dropdown-caret[_ngcontent-%COMP%]{width:2.5rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{right:.3rem}.sort-and-filter__modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:2.2rem}.row[_ngcontent-%COMP%]{margin-left:-5px!important}@media only screen and (max-width: 600px){.row[_ngcontent-%COMP%]{margin-left:-8px!important}}.dateDropdown[_ngcontent-%COMP%]{margin-right:5rem}@media (min-width: 0px) and (max-width: 991px){.dateDropdown[_ngcontent-%COMP%]{margin-right:-15rem}}.sort-and-filter-display[_ngcontent-%COMP%]{margin-bottom:4rem;margin-top:4.7rem;margin-left:-15rem;font-size:1.2rem}@media only screen and (max-width: 900px){.sort-and-filter-display[_ngcontent-%COMP%]{margin-left:14rem!important}}@media (min-width: 768px) and (max-width: 991.98px){.sort-and-filter-display[_ngcontent-%COMP%]{margin-left:12rem!important}}.mt-36[_ngcontent-%COMP%]{margin-top:36px}  .nav-tabs{border:1px solid #737575!important;border-radius:3px}  ul.nav-tabs>li:first-child{border-right:1px solid #737575!important}.to-see-your-stops-be[_ngcontent-%COMP%]{margin-left:-5px;width:461px;color:#002436;font-size:12px}@media (min-width: 0px) and (max-width: 991px){.to-see-your-stops-be[_ngcontent-%COMP%]{width:300px}}.to-see-the-intermedi[_ngcontent-%COMP%]{height:21px;width:500px;color:#002436;font-size:14px;letter-spacing:.1px;line-height:21px}.number-name[_ngcontent-%COMP%]{height:34px;width:52px;color:#167fa6;font-size:12px;line-height:17px;text-align:center}.mt-8[_ngcontent-%COMP%]{margin-top:8px}.depart-style[_ngcontent-%COMP%]{height:14px;width:43px;color:#737575;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:10px;letter-spacing:0;line-height:14px}.time-style[_ngcontent-%COMP%]{color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:24px;font-weight:300;letter-spacing:0;line-height:19px}.time-period[_ngcontent-%COMP%]{color:#002436;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:14px;font-weight:300;letter-spacing:0;line-height:19px}.box-size[_ngcontent-%COMP%]{height:33px;width:56px}.w-47[_ngcontent-%COMP%]{width:47px}.details-style[_ngcontent-%COMP%]{height:17px;width:40px;color:#167fa6;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:12px;font-weight:600;letter-spacing:0;line-height:17px}.align-div[_ngcontent-%COMP%]{align-items:baseline;margin-left:-2rem!important;margin-top:3rem}.mt-42[_ngcontent-%COMP%]{margin-top:42px}  .selected .list-box-style{background-color:#167fa6}.padding-10px[_ngcontent-%COMP%]{padding-left:10px;padding-right:10px}@media (min-width: 768px){.padding-10px[_ngcontent-%COMP%]{padding-left:0;padding-right:0}}.img-size[_ngcontent-%COMP%]{height:5rem;width:5rem}.no-trains[_ngcontent-%COMP%]{min-height:8rem;border:1px solid #d4d8d9;border-radius:8px;color:#00344d}.no-trains[_ngcontent-%COMP%]   .icon-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:80px}.no-trains[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-size:1.6rem}.no-trains[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{font-size:1rem}.canceled-status[_ngcontent-%COMP%]{height:42px;width:500px;color:#002436;font-size:14px;letter-spacing:.1px;line-height:21px}.circle-icon[_ngcontent-%COMP%]{border-radius:8px;height:12px;width:12px;display:inline-flex;margin-right:5px;background-color:#d52b1e}@media (min-width: 0px) and (max-width: 991px){.ng-star-inserted[_ngcontent-%COMP%]{max-width:460px}.container[_ngcontent-%COMP%]{padding-right:8px!important}.ng-star-inserted[_ngcontent-%COMP%]{max-width:100%}.list-box-style[_ngcontent-%COMP%]{width:600px!important}.heading-style[_ngcontent-%COMP%]{margin-right:-150px}.station-print-icon[_ngcontent-%COMP%]{margin-left:30rem}}@media print{.noprint[_ngcontent-%COMP%], .noprint[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{display:none}}.available-container[_ngcontent-%COMP%]{flex-grow:1}span.line-style.ng-star-inserted[_ngcontent-%COMP%]{position:relative;margin-left:6px;border-left:2px solid #00537e;padding:11px 0 20px;top:-5px}.routeSelectedPdf[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:960px;width:720px;background-color:#fff}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding:5px 5px 0}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]{width:150pt;padding-top:10px;padding-bottom:20px}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .date[_ngcontent-%COMP%]{margin:0;color:#00537e;font-size:16px}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .headerToAndFrom[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background-color:#00537e;color:#fff;font-family:"OpenSans-Regular, Open Sans";width:226pt;height:38pt;padding:0 10pt}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .headerToAndFrom[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .headerToAndFrom[_ngcontent-%COMP%]   .toAndFrom[_ngcontent-%COMP%]{font-size:16pt}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .headerToAndFrom[_ngcontent-%COMP%]   .toAndFrom[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:25px}.routeSelectedPdf[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .headerToAndFrom[_ngcontent-%COMP%]   .direction[_ngcontent-%COMP%]{font-size:12pt}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]{display:flex;align-items:center;flex-grow:0;justify-content:space-between}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departureAndArrival[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:40%;padding-top:10px;margin-left:5px}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departureAndArrival[_ngcontent-%COMP%]   .destination[_ngcontent-%COMP%]{width:40%}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departureAndArrival[_ngcontent-%COMP%]   .destination[_ngcontent-%COMP%]   .departureAndArrivalHeader[_ngcontent-%COMP%]{font-size:24pt}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departureAndArrival[_ngcontent-%COMP%]   .destination[_ngcontent-%COMP%]   .destinationDetails[_ngcontent-%COMP%]{font-size:9pt}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departureAndArrival[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;width:10%;margin-right:40px}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly;align-items:center;height:47pt;width:268pt;margin-right:5px;border:solid 1px #d4d8d9;border-radius:5px}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .trainDetails[_ngcontent-%COMP%]{display:flex;max-width:1rem;margin-left:7px;margin-right:7px;flex-direction:column;align-items:center;justify-content:center;font-size:6pt;color:#286e92}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .timeContainer[_ngcontent-%COMP%]   .timeHeader[_ngcontent-%COMP%]{font-size:9pt;color:gray}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .timeContainer[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{font-size:16pt}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .timeContainer[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]   .amPm[_ngcontent-%COMP%]{font-size:10pt;font-weight:400;color:#000}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .frequencyContainer[_ngcontent-%COMP%]{height:45px;max-height:45px;display:flex;flex-direction:column}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .frequencyContainer[_ngcontent-%COMP%]   .frequencyHeader[_ngcontent-%COMP%]{font-size:9pt;color:gray}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .frequencyContainer[_ngcontent-%COMP%]   .frequency[_ngcontent-%COMP%]{padding-top:6px;color:#286e92}.routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .stopsAndTravelLength[_ngcontent-%COMP%]   .stops[_ngcontent-%COMP%], .routeSelectedPdf[_ngcontent-%COMP%]   .departureArrivalContainer[_ngcontent-%COMP%]   .departsAndArrivesBox[_ngcontent-%COMP%]   .stopsAndTravelLength[_ngcontent-%COMP%]   .tripLength[_ngcontent-%COMP%]{font-size:9pt}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]{display:flex;padding-top:10px;flex-grow:2}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]{width:50%;padding:10px 10px 10px 5px}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]{padding:5px;background-color:#e1f5fd;border-radius:10px}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .serviceOfferingsHeader[_ngcontent-%COMP%]{font-size:12pt}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .reservations[_ngcontent-%COMP%]{padding-left:0;list-style-type:none;font-size:9pt}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .reservations[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:5px 0;width:100%}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .amenities[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding-left:0;list-style-type:none;font-size:9pt}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .amenities[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:5px 0;display:flex;width:100%}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .amenities[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .amenityIconContainer[_ngcontent-%COMP%]{width:15%;display:flex;justify-content:center;align-items:center}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .amenities[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .amenityIconContainer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:25px;height:25px}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .amenities[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .amenityTextContainer[_ngcontent-%COMP%]{display:flex;align-items:center;width:85%}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .serviceOfferings[_ngcontent-%COMP%]   .serviceOfferingsContainer[_ngcontent-%COMP%]   .amenities[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:20px;height:20px}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .routeMap[_ngcontent-%COMP%]{width:50%;padding:10px}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .routeMap[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{padding:0;list-style-type:none}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .routeMap[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{padding-right:10px;display:block;float:left}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .routeMap[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   .destinationStops[_ngcontent-%COMP%]{display:flex;font-size:1.6rem;font-weight:700}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .routeMap[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:5px 10px}.routeSelectedPdf[_ngcontent-%COMP%]   .serviceOfferingsRouteMap[_ngcontent-%COMP%]   .routeMap[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   .midStops[_ngcontent-%COMP%]{font-size:8pt}.routeSelectedPdf[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{margin:0}.dropdown-body-print[_ngcontent-%COMP%]{min-width:25rem;padding:2em;margin-top:2rem}.dropdown-body-print[_ngcontent-%COMP%]   .print-button[_ngcontent-%COMP%]{background:none}.dropdown-body-print[_ngcontent-%COMP%]   .print-button[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{background:#002436}.print-button-ne[_ngcontent-%COMP%]{background-color:transparent}.print-button-ne[_ngcontent-%COMP%]:hover{background-color:#e6e9eb}.print-route[_ngcontent-%COMP%], .img-style-box[_ngcontent-%COMP%]{width:20px;height:20px}@media (max-width: 768px){.print-route[_ngcontent-%COMP%], .img-style-box[_ngcontent-%COMP%]{margin-left:2rem}}@media (min-width: 768px) and (max-width: 991.98px){.station-print-icon[_ngcontent-%COMP%]{margin-left:32rem}}.dropdown-toggle[_ngcontent-%COMP%]:after{display:none}.portraitContainer[_ngcontent-%COMP%]{min-height:1040px!important;max-height:1040px!important;position:relative}#route-pdf-hidden-container[_ngcontent-%COMP%]{max-width:1100px;min-width:1100px}#route-pdf-hidden-container[_ngcontent-%COMP%]   .page-container[_ngcontent-%COMP%]{max-height:790px;min-height:790px;position:relative}#route-pdf-hidden-container[_ngcontent-%COMP%]   .pdf-logo[_ngcontent-%COMP%]{width:33%}#route-pdf-hidden-container[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]{padding-top:3rem;display:flex;padding-left:3rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .subheader-title[_ngcontent-%COMP%]{font-style:italic}#route-pdf-hidden-container[_ngcontent-%COMP%]   .duration[_ngcontent-%COMP%]{font-weight:800;font-style:italic}#route-pdf-hidden-container[_ngcontent-%COMP%]   .train-direction-title[_ngcontent-%COMP%], #route-pdf-hidden-container[_ngcontent-%COMP%]   .symbols-title[_ngcontent-%COMP%]{min-height:28px;vertical-align:top}#route-pdf-hidden-container[_ngcontent-%COMP%]   .symbols-title[_ngcontent-%COMP%]{text-align:center;margin-left:2rem!important}#route-pdf-hidden-container[_ngcontent-%COMP%]   .header-title-legends[_ngcontent-%COMP%]{font-size:1.6rem;margin:7rem 0rem -1rem 12.5rem;font-weight:600}#route-pdf-hidden-container[_ngcontent-%COMP%]   .overnightSymbol[_ngcontent-%COMP%]{width:14px;height:14px}#route-pdf-hidden-container[_ngcontent-%COMP%]   .portraitSymbols[_ngcontent-%COMP%]{margin-left:1rem!important;width:34%!important}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]{margin-left:5rem;font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:1.2rem;font-weight:400;line-height:1.5rem;text-align:left;display:table-column;width:50%}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .rTableRowIcons[_ngcontent-%COMP%]{display:table-row}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .rTableCell[_ngcontent-%COMP%]{padding:2rem 1rem .5rem;display:table-cell}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .station-name-code[_ngcontent-%COMP%]{text-align:left}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .header-row[_ngcontent-%COMP%]{line-height:1rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .subheader-title[_ngcontent-%COMP%]{font-style:normal;font-weight:600;font-size:1.3rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .hr[_ngcontent-%COMP%], #route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .nonstop-line[_ngcontent-%COMP%]{width:90%;border-top:1px solid black;margin:0}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .train-direction-down[_ngcontent-%COMP%], #route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .train-direction-up[_ngcontent-%COMP%]{line-height:.5rem;font-size:1rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .arrow-up[_ngcontent-%COMP%]{width:0;height:0;border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:8px solid #548300;position:relative;left:calc(50% - 7px)}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTableSymbol[_ngcontent-%COMP%]   .arrow-down[_ngcontent-%COMP%]{width:0;height:0;border-left:7px solid transparent;border-right:7px solid transparent;border-top:8px solid #548300;position:relative;left:calc(50% - 7px)}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]{font-family:OpenSans,Helvetica,Arial,"sans-serif";font-size:1.2rem;font-weight:400;line-height:1.5rem;text-align:center;display:table}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .service-name[_ngcontent-%COMP%]{padding-bottom:1.5rem!important;line-height:1.5rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .rTableCell[_ngcontent-%COMP%]{padding:.5rem;display:table-cell}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .station-name-code[_ngcontent-%COMP%]{text-align:left}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .change-background[_ngcontent-%COMP%]{background-color:#e6e9eb!important}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .rTableRow[_ngcontent-%COMP%]{display:table-row}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .header-row[_ngcontent-%COMP%]{line-height:.5rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .train-direction-down[_ngcontent-%COMP%], #route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .train-direction-up[_ngcontent-%COMP%]{line-height:.5rem;font-size:1rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .arrow-up[_ngcontent-%COMP%]{width:0;height:0;border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:8px solid #548300;position:relative;left:calc(50% - 7px)}#route-pdf-hidden-container[_ngcontent-%COMP%]   .rTable[_ngcontent-%COMP%]   .arrow-down[_ngcontent-%COMP%]{width:0;height:0;border-left:7px solid transparent;border-right:7px solid transparent;border-top:8px solid #548300;position:relative;left:calc(50% - 7px)}#route-pdf-hidden-container[_ngcontent-%COMP%]   .end-station-row[_ngcontent-%COMP%]{background-color:#e1f5fd;color:#315262;font-size:1.5rem;font-weight:800;padding-top:1.5rem;padding-bottom:1.5rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .header-date-text[_ngcontent-%COMP%]{font-weight:600;font-size:1.5rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .blue-box[_ngcontent-%COMP%]{background-color:#00537e;color:#fff;width:100%;height:50px;font-size:2.1rem;margin:auto}#route-pdf-hidden-container[_ngcontent-%COMP%]   .blue-box[_ngcontent-%COMP%]   .route-name-text[_ngcontent-%COMP%]{line-height:50px;vertical-align:middle}#route-pdf-hidden-container[_ngcontent-%COMP%]   .blue-box[_ngcontent-%COMP%]   .direction-text[_ngcontent-%COMP%]{line-height:50px;vertical-align:baseline;font-size:1.5rem;margin-left:2rem}#route-pdf-hidden-container[_ngcontent-%COMP%]   .portrait[_ngcontent-%COMP%]{margin-left:-25rem!important}#route-pdf-hidden-container[_ngcontent-%COMP%]   .pdf-page-footer[_ngcontent-%COMP%]{border-top:#002436 solid 1px;font-size:1rem;position:absolute;bottom:0;margin-left:2rem;width:calc(100% - 8rem)}#route-pdf-hidden-container[_ngcontent-%COMP%]   .pdf-page-footer[_ngcontent-%COMP%]   .pdf-page-counter[_ngcontent-%COMP%]{text-align:right}.footer-description[_ngcontent-%COMP%]{padding-bottom:1rem;padding-left:1.5rem}.portraitFooter[_ngcontent-%COMP%]{width:calc(100% - 35rem)!important}.date-style[_ngcontent-%COMP%]{padding-left:2.5rem}.imgSymbolsStaffed[_ngcontent-%COMP%]{width:14px;height:14px}.imgSymbolsKiosk[_ngcontent-%COMP%]{height:14px;width:14px;margin-left:5px}.stationData[_ngcontent-%COMP%]{width:180px;padding:5px 0 0!important}.stationDataCenter[_ngcontent-%COMP%]{width:180px;padding-bottom:0!important}.serviceData[_ngcontent-%COMP%]{width:70px!important}.pdf-spinner-container[_ngcontent-%COMP%]{position:absolute;top:-10rem;right:10rem}.rTableRow[_ngcontent-%COMP%]:nth-child(6), .rTableRow[_ngcontent-%COMP%]:last-child{font-size:1.4rem;font-weight:600;background-color:#e1f5fd}']
                })
                }
            }
            return x
        }
        )()
          , Yi = ( () => {
            class x {
                constructor() {
                    this.customElementComponent = Ts
                }
                ngDoBootstrap() {}
                static{this.\u0275fac = function(Y) {
                    return new (Y || x)
                }
                }static{this.\u0275mod = A.$C({
                    type: x
                })
                }static{this.\u0275inj = A.G2t({
                    imports: [Jr.MD, _i.G]
                })
                }
            }
            return x
        }
        )()
    }